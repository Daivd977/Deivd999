local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Robojini/Destiny/main/UILIB_V3"))()
local Window = Library:Create({Name = "Troll Hub", Theme = "Dark"})
local Tab1 = Window:Tab({Name = "troll"})
local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local savedPosition = LocalPlayer.Character and LocalPlayer.Character.HumanoidRootPart.Position or Vector3.new(0, 0, 0)
local selectedPlayer = nil
local selectedKillPullMethod = nil
local selectedFlingMethod = nil
local running = false
local connection = nil
local flingConnection = nil

local function updateDropdown(dropdown)
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            table.insert(playerNames, player.Name)
        end
    end
    dropdown:Refresh(playerNames)
    if selectedPlayer and not Players:FindFirstChild(selectedPlayer.Name) then
        selectedPlayer = nil
        dropdown:Set("Selecionar Jogador")
    end
end

local DropdownPlayer = Tab1:Dropdown({
    Name = "Selecionar Jogador",
    Options = {},
    Callback = function(value)
        selectedPlayer = Players:FindFirstChild(value)
    end
})

Tab1:Button({
    Name = "Atualizar Lista de Jogadores",
    Callback = function()
        updateDropdown(DropdownPlayer)
    end
})

Players.PlayerRemoving:Connect(function(player)
    if selectedPlayer == player then
        selectedPlayer = nil
    end
    updateDropdown(DropdownPlayer)
end)

updateDropdown(DropdownPlayer)

local DropdownKillPullMethod = Tab1:Dropdown({
    Name = "Selecionar Método (Matar/Puxar)",
    Options = {"Sofá", "Ônibus"},
    Callback = function(value)
        selectedKillPullMethod = value
    end
})

local function killWithSofa(targetPlayer)
    if not targetPlayer or not targetPlayer.Character or not targetPlayer.Character.HumanoidRootPart then return end
    local character = LocalPlayer.Character
    if not character or not character.HumanoidRootPart then return end
    savedPosition = character.HumanoidRootPart.Position
    local targetHRP = targetPlayer.Character.HumanoidRootPart
    local sofa = Workspace:FindFirstChild("001_Sofas") and Workspace["001_Sofas"]:FindFirstChild("Sofa" .. LocalPlayer.Name)
    if not sofa then
        warn("Sofá não encontrado em Workspace.001_Sofas com o nome: Sofa" .. LocalPlayer.Name)
        return
    end
    running = true
    connection = RunService.Heartbeat:Connect(function()
        if not running or not targetPlayer.Character or not targetPlayer.Character.HumanoidRootPart or not character or not character.HumanoidRootPart then
            running = false
            connection:Disconnect()
            return
        end
        character.HumanoidRootPart.CFrame = targetHRP.CFrame * CFrame.new(0, -10, 0) * CFrame.Angles(math.rad(math.random(0, 360)), math.rad(math.random(0, 360)), math.rad(math.random(0, 360)))
        character.Humanoid.Jump = true
        if targetPlayer.Character.Humanoid.Sit then
            character.HumanoidRootPart.CFrame = CFrame.new(character.HumanoidRootPart.Position.X, -500, character.HumanoidRootPart.Position.Z)
            sofa:FindFirstChildWhichIsA("Tool").Parent = character
            running = false
            connection:Disconnect()
        end
    end)
end

local function pullWithSofa(targetPlayer)
    if not targetPlayer or not targetPlayer.Character or not targetPlayer.Character.HumanoidRootPart then return end
    local character = LocalPlayer.Character
    if not character or not character.HumanoidRootPart then return end
    savedPosition = character.HumanoidRootPart.Position
    running = true
    connection = RunService.Heartbeat:Connect(function()
        if not running or not targetPlayer.Character or not targetPlayer.Character.HumanoidRootPart or not character or not character.HumanoidRootPart then
            running = false
            connection:Disconnect()
            return
        end
        character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -10, 0) * CFrame.Angles(math.rad(math.random(0, 360)), math.rad(math.random(0, 360)), math.rad(math.random(0, 360)))
        character.Humanoid.Jump = true
    end)
end

local function killWithBus(targetPlayer)
    if not targetPlayer or not targetPlayer.Character or not targetPlayer.Character.HumanoidRootPart then return end
    local character = LocalPlayer.Character
    if not character or not character.HumanoidRootPart then return end
    savedPosition = character.HumanoidRootPart.Position
    local vehiclesFolder = Workspace:FindFirstChild("Vehicles")
    if not vehiclesFolder then
        warn("Pasta Vehicles não encontrada no Workspace!")
        return
    end
    local bus = vehiclesFolder:FindFirstChild("Bus" .. LocalPlayer.Name) or vehiclesFolder:FindFirstChild("Bus")
    if not bus then
        warn("Ônibus não encontrado em Workspace.Vehicles com o nome: Bus" .. LocalPlayer.Name)
        return
    end
    running = true
    connection = RunService.Heartbeat:Connect(function()
        if not running or not targetPlayer.Character or not targetPlayer.Character.HumanoidRootPart or not character or not character.HumanoidRootPart then
            running = false
            connection:Disconnect()
            return
        end
        character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -10, 0)
        if targetPlayer.Character.Humanoid.Sit then
            bus:PivotTo(CFrame.new(Vector3.new(-76.6, -401.97, -84.26)))
            running = false
            connection:Disconnect()
        end
    end)
end

Tab1:Button({
    Name = "Matar",
    Callback = function()
        if running then return end
        if not selectedPlayer then
            warn("Nenhum jogador selecionado!")
            return
        end
        if not selectedKillPullMethod then
            warn("Nenhum método de matar/puxar selecionado!")
            return
        end
        if selectedKillPullMethod == "Sofá" then
            killWithSofa(selectedPlayer)
        elseif selectedKillPullMethod == "Ônibus" then
            killWithBus(selectedPlayer)
        end
    end
})

Tab1:Button({
    Name = "Puxar",
    Callback = function()
        if running then return end
        if not selectedPlayer then
            warn("Nenhum jogador selecionado!")
            return
        end
        if not selectedKillPullMethod then
            warn("Nenhum método de matar/puxar selecionado!")
            return
        end
        if selectedKillPullMethod == "Sofá" then
            pullWithSofa(selectedPlayer)
        else
            warn("Puxar só funciona com Sofá!")
        end
    end
})

Tab1:Button({
    Name = "Parar (Matar ou Puxar)",
    Callback = function()
        running = false
        if connection then
            connection:Disconnect()
        end
        local character = LocalPlayer.Character
        if character and character.HumanoidRootPart then
            if savedPosition then
                character.HumanoidRootPart.CFrame = CFrame.new(savedPosition)
            else
                warn("savedPosition não está definida para teleporte de volta!")
            end
        end
        local vehiclesFolder = Workspace:FindFirstChild("Vehicles")
        if vehiclesFolder then
            for _, vehicle in ipairs(vehiclesFolder:GetChildren()) do
                if vehicle.Name:match("Bus") then
                    vehicle:Destroy()
                end
            end
        end
    end
})

local DropdownFlingMethod = Tab1:Dropdown({
    Name = "Selecionar Método de Fling",
    Options = {"Sofá", "Ônibus", "Bola", "Barco"},
    Callback = function(value)
        selectedFlingMethod = value
    end
})

local function flingWithBall(targetPlayer)
    if not targetPlayer or not targetPlayer.Character or not targetPlayer.Character.HumanoidRootPart then return end
    local soccerBalls = Workspace:FindFirstChild("001_SoccerBalls")
    local soccerBall = soccerBalls and soccerBalls:FindFirstChild("Soccer" .. LocalPlayer.Name)
    if not soccerBall then
        warn("Bola não encontrada em Workspace.001_SoccerBalls com o nome: Soccer" .. LocalPlayer.Name)
        return
    end
    local oldVelocity = soccerBall.AssemblyLinearVelocity
    local oldAngularVelocity = soccerBall.AssemblyAngularVelocity
    running = true
    flingConnection = RunService.Heartbeat:Connect(function()
        if not running or not targetPlayer.Character or not targetPlayer.Character.HumanoidRootPart then
            running = false
            flingConnection:Disconnect()
            soccerBall.AssemblyLinearVelocity = oldVelocity
            soccerBall.AssemblyAngularVelocity = oldAngularVelocity
            return
        end
        local targetHRP = targetPlayer.Character.HumanoidRootPart
        soccerBall.CFrame = targetHRP.CFrame * CFrame.new(0, -10, 0) * CFrame.Angles(
            math.rad(Workspace.DistributedGameTime * 12000),
            math.rad(Workspace.DistributedGameTime * 15000),
            math.rad(Workspace.DistributedGameTime * 18000)
        )
        if (soccerBall.Position - targetHRP.Position).Magnitude < 4 then
            targetHRP.AssemblyLinearVelocity = Vector3.new(100, 100, 100)
            targetHRP.AssemblyAngularVelocity = Vector3.new(100, 100, 100)
        end
    end)
end

local function flingWithSofa(targetPlayer)
    if not targetPlayer or not targetPlayer.Character or not targetPlayer.Character.HumanoidRootPart then return end
    local character = LocalPlayer.Character
    if not character or not character.HumanoidRootPart then return end
    savedPosition = character.HumanoidRootPart.Position
    local targetHRP = targetPlayer.Character.HumanoidRootPart
    local sofa = Workspace:FindFirstChild("001_Sofas") and Workspace["001_Sofas"]:FindFirstChild("Sofa" .. LocalPlayer.Name)
    if not sofa then
        warn("Sofá não encontrado em Workspace.001_Sofas com o nome: Sofa" .. LocalPlayer.Name)
        return
    end
    running = true
    flingConnection = RunService.Heartbeat:Connect(function()
        if not running or not targetPlayer.Character or not targetPlayer.Character.HumanoidRootPart or not character or not character.HumanoidRootPart then
            running = false
            flingConnection:Disconnect()
            return
        end
        character.HumanoidRootPart.CFrame = targetHRP.CFrame * CFrame.new(0, -10, 0) * CFrame.Angles(math.rad(math.random(0, 360)), math.rad(math.random(0, 360)), math.rad(math.random(0, 360)))
        character.Humanoid.Jump = true
        if targetPlayer.Character.Humanoid.Sit then
            character.Humanoid.WalkSpeed = 100
            character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new(100, 0, 0)
            character.HumanoidRootPart.CFrame = CFrame.new(-59599.73, 2040070.50, -293391.16)
            running = false
            flingConnection:Disconnect()
        end
    end)
end

local function flingWithBus(targetPlayer)
    if not targetPlayer or not targetPlayer.Character or not targetPlayer.Character.HumanoidRootPart then return end
    local character = LocalPlayer.Character
    if not character or not character.HumanoidRootPart then return end
    savedPosition = character.HumanoidRootPart.Position
    local vehiclesFolder = Workspace:FindFirstChild("Vehicles")
    if not vehiclesFolder then
        warn("Pasta Vehicles não encontrada no Workspace!")
        return
    end
    local bus = vehiclesFolder:FindFirstChild("Bus" .. LocalPlayer.Name) or vehiclesFolder:FindFirstChild("Bus")
    if not bus then
        warn("Ônibus não encontrado em Workspace.Vehicles com o nome: Bus" .. LocalPlayer.Name)
        return
    end
    local updateInterval = 0.05
    local lastUpdate = tick()
    running = true
    flingConnection = RunService.Heartbeat:Connect(function()
        if not running or not targetPlayer.Character or not targetPlayer.Character.HumanoidRootPart or not character or not character.HumanoidRootPart then
            running = false
            flingConnection:Disconnect()
            return
        end
        if tick() - lastUpdate >= updateInterval then
            lastUpdate = tick()
            character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -10, 0)
            if targetPlayer.Character.Humanoid.Sit then
                character.Humanoid.WalkSpeed = 100
                character.HumanoidRootPart.AssemblyLinearVelocity = Vector3.new(100, 0, 0)
                bus:PivotTo(CFrame.new(bus.Position) * CFrame.Angles(
                    math.rad(Workspace.DistributedGameTime * 12000),
                    math.rad(Workspace.DistributedGameTime * 15000),
                    math.rad(Workspace.DistributedGameTime * 18000)
                ))
                character.HumanoidRootPart.CFrame = CFrame.new(-59599.73, 2040070.50, -293391.16)
                running = false
                flingConnection:Disconnect()
            end
        end
    end)
end

local function flingWithBoat(targetPlayer)
    if not targetPlayer or not targetPlayer.Character or not targetPlayer.Character.HumanoidRootPart then return end
    local vehiclesFolder = Workspace:FindFirstChild("Vehicles")
    if not vehiclesFolder then
        warn("Pasta Vehicles não encontrada no Workspace!")
        return
    end
    local boat = vehiclesFolder:FindFirstChild("Boat" .. LocalPlayer.Name) or vehiclesFolder:FindFirstChild("Boat")
    if not boat then
        warn("Barco não encontrado em Workspace.Vehicles com o nome: Boat" .. LocalPlayer.Name)
        return
    end
    local mainPart = boat:FindFirstChild("Body") or boat
    local updateInterval = 0.05
    local lastUpdate = tick()
    running = true
    flingConnection = RunService.Heartbeat:Connect(function()
        if not running or not targetPlayer.Character or not targetPlayer.Character.HumanoidRootPart then
            running = false
            flingConnection:Disconnect()
            return
        end
        if tick() - lastUpdate >= updateInterval then
            lastUpdate = tick()
            mainPart:PivotTo(targetPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -10, 0) * CFrame.Angles(
                math.rad(Workspace.DistributedGameTime * 12000),
                math.rad(Workspace.DistributedGameTime * 15000),
                math.rad(Workspace.DistributedGameTime * 18000)
            ))
        end
    end)
    local function onTouch(hit)
        local hitPlayer = Players:GetPlayerFromCharacter(hit.Parent)
        if hitPlayer and hitPlayer == targetPlayer then
            local hrp = hit.Parent.HumanoidRootPart
            if hrp then
                hrp.AssemblyLinearVelocity = Vector3.new(100, 100, 100)
                hrp.AssemblyAngularVelocity = Vector3.new(100, 100, 100)
            end
        end
    end
    if mainPart == boat then
        for _, part in ipairs(boat:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Touched:Connect(onTouch)
            end
        end
    else
        mainPart.Touched:Connect(onTouch)
    end
end

Tab1:Button({
    Name = "Iniciar Fling",
    Callback = function()
        if running then return end
        if not selectedPlayer then
            warn("Nenhum jogador selecionado!")
            return
        end
        if not selectedFlingMethod then
            warn("Nenhum método de fling selecionado!")
            return
        end
        if selectedFlingMethod == "Bola" then
            flingWithBall(selectedPlayer)
        elseif selectedFlingMethod == "Sofá" then
            flingWithSofa(selectedPlayer)
        elseif selectedFlingMethod == "Ônibus" then
            flingWithBus(selectedPlayer)
        elseif selectedFlingMethod == "Barco" then
            flingWithBoat(selectedPlayer)
        end
    end
})

Tab1:Button({
    Name = "Parar Fling",
    Callback = function()
        running = false
        if flingConnection then
            flingConnection:Disconnect()
        end
        local character = LocalPlayer.Character
        if character and character.HumanoidRootPart then
            character.Humanoid.WalkSpeed = 16
            if savedPosition then
                character.HumanoidRootPart.CFrame = CFrame.new(savedPosition)
            else
                warn("savedPosition não está definida para teleporte de volta!")
            end
        end
        local soccerBalls = Workspace:FindFirstChild("001_SoccerBalls")
        local soccerBall = soccerBalls and soccerBalls:FindFirstChild("Soccer" .. LocalPlayer.Name)
        if soccerBall then
            soccerBall.AssemblyLinearVelocity = Vector3.new(0, 0, 0)
            soccerBall.AssemblyAngularVelocity = Vector3.new(0, 0, 0)
        end
        local vehiclesFolder = Workspace:FindFirstChild("Vehicles")
        if vehiclesFolder then
            for _, vehicle in ipairs(vehiclesFolder:GetChildren()) do
                if vehicle.Name:match("Bus") or vehicle.Name:match("Boat") then
                    vehicle:Destroy()
                end
            end
        end
    end
})
