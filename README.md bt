-- brookhaven script teste funcionando beta

-- === Configurações Iniciais === --
local AllowedUsers = {
    "rtrt967",
    "kaio_lg1",-- Seu nome do Roblox pzinrlk929   Tataizin_021
    "sasah_7x",   -- Outro usuário permitido
    "QUEROBOVO",
    "pzinrlk929",
    "Tataizin_021",-- Adicione mais nomes aqui, por exemplo:
    -- "outro_usuario",
    -- "amigo123",
}

-- Serviços do Roblox
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

-- Verificação de permissão do jogador
local LocalPlayer = Players.LocalPlayer
local PlayerName = LocalPlayer.Name
local isAllowed = false

for _, user in pairs(AllowedUsers) do
    if user == PlayerName then
        isAllowed = true
        break
    end
end

if not isAllowed then
    game.StarterGui:SetCore("SendNotification", {
        Title = "Acesso Negado",
        Text = "Você não tem permissão para usar o Lolyta Hub 2.0. Contate o criador para ser adicionado à lista.",
        Duration = 5
    })
    return
end

-- Scripts a serem executados ao iniciar o hub
local argsBio = {
    [1] = "RolePlayBio",
    [2] = "scripter"
}
local successBio, errorBio = pcall(function()
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1RPNam1eTex1t"):FireServer(unpack(argsBio))
end)
if successBio then
    print("Bio definida como 'scripter' com sucesso!")
else
    warn("Erro ao definir a bio: " .. tostring(errorBio))
end

local argsName = {
    [1] = "RolePlayName",
    [2] = "Lolyta Hub "
}
local successName, errorName = pcall(function()
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1RPNam1eTex1t"):FireServer(unpack(argsName))
end)
if successName then
    print("Nome definido como 'Lolyta Hub ' com sucesso!")
else
    warn("Erro ao definir o nome: " .. tostring(errorName))
end
-----------------------------------------------------------------------------------------------------------------------------------
                                    -- === Inicialização da Interface === --
-----------------------------------------------------------------------------------------------------------------------------------

local WindUI = loadstring(game:HttpGet("https://tree-hub.vercel.app/api/UI/WindUI"))()
local Version = "1.4.0"
local WindUI = loadstring(game:HttpGet("https://tree-hub.vercel.app/api/UI/WindUI/" .. Version))()

local Window = WindUI:CreateWindow({
    Title = "Lolyta Hub 2.7",
    Icon = "door-open",
    Author = "Lolycon666",
    Folder = "Lolyta hub v.1.0",
    Size = UDim2.fromOffset(580, 460),
    KeySystem = {
        Key = "666",
        Note = "pode nao man",
        URL = "https://github.com/Footagesus/WindUI",
        SaveKey = true,
    },
    Transparent = true,
    Theme = "Dark",
    SideBarWidth = 200,
    HasOutline = false,
})

Window:EditOpenButton({
    Title = "Lolyta",
    Icon = "align-justify",
    CornerRadius = UDim.new(0, 10),
    StrokeThickness = 3,
    Color = ColorSequence.new(Color3.fromHex("FF0F7B"), Color3.fromHex("F89B29"))
})


-- === Abas da Interface === --
local Tab1 = Window:Tab({ Title = "Main", Icon = "house-plus" })
local Tab2 = Window:Tab({ Title = "Casa", Icon = "house" })
local Tab3 = Window:Tab({ Title = "Carro", Icon = "car" })
local Tab4 = Window:Tab({ Title = "RGB Color", Icon = "palette" }) -- Nova aba RGB Color
local Tab5 = Window:Tab({ Title = "Troll Musica", Icon = "music" })
local Tab6 = Window:Tab({ Title = "Music All", Icon = "audio-lines" })
local Tab7 = Window:Tab({ Title = "Scripts", Icon = "layers" })
local Tab8 = Window:Tab({ Title = "Players", Icon = "user" })
local Tab9 = Window:Tab({ Title = "teleports", Icon = "map-pin" })
local Tab10 = Window:Tab({ Title = "troll", Icon = "skull" })


-- === Funções Auxiliares === --
local function fireServer(eventPath, args)
    ReplicatedStorage:WaitForChild("RE"):WaitForChild(eventPath):FireServer(unpack(args))
end

local function invokeServer(eventPath, args)
    return ReplicatedStorage:WaitForChild("RE"):WaitForChild(eventPath):InvokeServer(unpack(args))
end

---------------------------------------------------------------------------------------------------------------------------------
                                                   -- === Tab 1: Main === --
---------------------------------------------------------------------------------------------------------------------------------

Tab1:Button({
    Title = "Ser desbanido do voice (so se acabou de ser banido)",
    Desc = "Universal",
    Callback = function()
        game:GetService("VoiceChatService"):joinVoice()
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab1:Button({
    Title = "Voltar tamanho normal (size 1)",
    Desc = "Brookhaven",
    Callback = function()
        fireServer("1Clothe1s", {"CharacterSizeUp", 1})
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab1:Button({
    Title = "Invisível (size 4)",
    Desc = "Brookhaven",
    Callback = function()
        fireServer("1Clothe1s", {"CharacterSizeDown", 4})
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab1:Button({
    Title = "Pegar sofá",
    Desc = "Brookhaven",
    Callback = function()
        invokeServer("1Too1l", {"PickingTools", "Couch"})
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------


Tab1:Button({
    Title = "TP ALL",
    Desc = "Teleporte para todos os players",
    Callback = function()
        local startingPosition = LocalPlayer.Character:GetPrimaryPartCFrame()
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                LocalPlayer.Character:SetPrimaryPartCFrame(player.Character:GetPrimaryPartCFrame())
                wait(1)
            end
        end
        LocalPlayer.Character:SetPrimaryPartCFrame(startingPosition)
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------

---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra ---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra---- pser mandrake lixo semvergonha se fuaturo seu pain bom faz o l porrra


Tab1:Toggle({
    Title = "ESP",
    Desc = "Para visualizar jogadores",
    Value = false,
    Callback = function(state)
        local connections = {} -- Tabela para armazenar as conexões dos eventos
        local espEnabled = state -- Estado do ESP para controle

        local function createESP(player)
            if player == game.Players.LocalPlayer then return end
            if not espEnabled then return end -- Evita criar ESP se desativado
            local character = player.Character
            if character then
                local head = character:WaitForChild("Head", 5)
                if head then
                    -- Remove ESP existente, se houver
                    if head:FindFirstChild("BillboardGui") then
                        head.BillboardGui:Destroy()
                    end
                    local billboard = Instance.new("BillboardGui")
                    billboard.Parent = head
                    billboard.Adornee = head
                    billboard.Size = UDim2.new(0, 200, 0, 50)
                    billboard.StudsOffset = Vector3.new(0, 3, 0)
                    billboard.AlwaysOnTop = true
                    local textLabel = Instance.new("TextLabel")
                    textLabel.Parent = billboard
                    textLabel.Size = UDim2.new(1, 0, 1, 0)
                    textLabel.BackgroundTransparency = 1
                    textLabel.TextColor3 = Color3.new(1, 1, 1)
                    textLabel.TextStrokeTransparency = 0.5
                    textLabel.Font = Enum.Font.SourceSansBold
                    textLabel.TextSize = 14
                    textLabel.Text = player.Name .. " | " .. player.AccountAge .. " dias"
                end
            end
        end

        local function removeESP(player)
            if player.Character then
                local head = player.Character:FindFirstChild("Head")
                if head and head:FindFirstChild("BillboardGui") then
                    head.BillboardGui:Destroy()
                end
            end
        end

        if state then
            -- Adiciona ESP para jogadores existentes
            for _, player in pairs(game.Players:GetPlayers()) do
                createESP(player)
            end
            -- Conecta evento para novos jogadores
            local playerAddedConnection = game.Players.PlayerAdded:Connect(function(player)
                if not espEnabled then return end -- Evita criar ESP se desativado
                createESP(player)
                local charAddedConnection = player.CharacterAdded:Connect(function()
                    if not espEnabled then return end -- Evita criar ESP se desativado
                    createESP(player)
                end)
                table.insert(connections, charAddedConnection)
            end)
            table.insert(connections, playerAddedConnection)
        else
            -- Remove ESP de todos os jogadores
            for _, player in pairs(game.Players:GetPlayers()) do
                removeESP(player)
            end
            -- Desconecta todos os eventos
            for _, connection in ipairs(connections) do
                connection:Disconnect()
            end
            connections = {} -- Limpa a tabela de conexões
            espEnabled = false -- Garante que o estado está desativado
        end
    end,
})
--------------------------------------------------------------------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------------------------------------------------------------
Tab1:Paragraph({ Title = "Jogador", Desc = "funçoes paara o jogador no caso voçe" })

-- Variáveis para o noclip
local noclipEnabled = false
local noclipConnections = {}

-- Função para ativar/desativar o noclip
local function setNoclip(state)
    local player = game.Players.LocalPlayer
    local character = player.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Erro",
            Text = "Personagem não encontrado!",
            Duration = 5
        })
        return
    end

    local humanoid = character:FindFirstChild("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")

    if not humanoid or not rootPart then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Erro",
            Text = "Componentes do personagem não encontrados!",
            Duration = 5
        })
        return
    end

    noclipEnabled = state -- Define o estado do noclip com base no toggle

    if noclipEnabled then
        -- Desativa as colisões do personagem
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end

        -- Loop para manter o noclip ativo e evitar reversão pelo servidor
        local connection = game:GetService("RunService").Heartbeat:Connect(function()
            if not noclipEnabled or not character or not character.Parent then
                connection:Disconnect()
                return
            end
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end)
        table.insert(noclipConnections, connection)

        game.StarterGui:SetCore("SendNotification", {
            Title = "Noclip",
            Text = "Noclip ativado!",
            Duration = 5
        })
    else
        -- Desativa o noclip e restaura as propriedades do personagem
        for _, connection in pairs(noclipConnections) do
            connection:Disconnect()
        end
        noclipConnections = {}

        -- Restaura as colisões e corrige a física
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true -- Reativa colisões
                part.Velocity = Vector3.new(0, 0, 0) -- Zera a velocidade
                part.RotVelocity = Vector3.new(0, 0, 0) -- Zera a rotação
            end
        end

        -- Restaura o estado do Humanoid e a posição
        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.GettingUp) -- Força o personagem a "se levantar"
            task.wait(0.1) -- Pequeno atraso para o estado se aplicar
            humanoid.WalkSpeed = 16 -- Restaura a velocidade padrão
            humanoid.JumpPower = 50 -- Restaura o pulo padrão
            humanoid.PlatformStand = false -- Desativa PlatformStand, se ativo
        end

        -- Corrige a posição para evitar ficar preso
        if rootPart then
            local rayOrigin = rootPart.Position
            local rayDirection = Vector3.new(0, -10, 0) -- Raycast para baixo
            local raycastParams = RaycastParams.new()
            raycastParams.FilterDescendantsInstances = {character}
            raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
            local raycastResult = workspace:Raycast(rayOrigin, rayDirection, raycastParams)

            if raycastResult then
                rootPart.CFrame = CFrame.new(raycastResult.Position + Vector3.new(0, 3, 0)) -- Coloca o personagem acima do chão
            end
        end

        game.StarterGui:SetCore("SendNotification", {
            Title = "Noclip",
            Text = "Noclip desativado!",
            Duration = 5
        })
    end
end

-- Garante que o noclip comece desativado ao carregar o hub
setNoclip(false)

-- Toggle para ativar/desativar o noclip
Tab1:Toggle({
    Title = "Noclip",
    Desc = "Ativa/desativa o noclip para atravessar paredes",
    Default = false,
    Callback = function(value)
        setNoclip(value)
    end,
})

-- Reconecta o noclip ao respawn do personagem
game.Players.LocalPlayer.CharacterAdded:Connect(function(character)
    if noclipEnabled then
        task.wait(0.1) -- Pequeno atraso para garantir que o personagem esteja totalmente carregado
        setNoclip(true) -- Reaplica o noclip se estava ativado
    end
end)

---------------------------------------------------------------------------------------------------------------------------------------------


-- Botão para executar o script de fly
Tab1:Button({
    Title = "Ativar Fly GUI",
    Desc = "Carrega um GUI de fly universal",
    Callback = function()
        local success, errorMessage = pcall(function()
            loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Fly-gui-v3-30439"))()
        end)

        if success then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Sucesso",
                Text = "Fly GUI carregado!",
                Duration = 5
            })
        else
            game.StarterGui:SetCore("SendNotification", {
                Title = "Erro",
                Text = "Falha ao carregar o Fly GUI.",
                Duration = 5
            })
        end
    end,
})

----------------------------------------------------------------------------------------------------------------------------------------------

local SpeedInput = Tab1:Input({
    Title = "Definir a velocidade do jogador",
    Desc = "Insira a velocidade (mínimo 1, sem limite máximo)",
    Value = "70", -- Valor padrão como string
    PlaceholderText = "Digite um número maior que 1...",
    ClearTextOnFocus = false,
    Callback = function(Text)
        local value = tonumber(Text) -- Converte o texto para número
        if value then
            -- Garante que o valor seja pelo menos 1
            value = math.max(value, 1)
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                LocalPlayer.Character.Humanoid.WalkSpeed = value
                print("Velocidade definida para: " .. value)
            else
                warn("Personagem ou Humanoid não encontrado!")
            end
        else
            warn("Por favor, insira um número válido!")
        end
    end
})

local ResetSpeedButton = Tab1:Button({
    Title = "Restaurar velocidade padrão",
    Desc = "Retorna a velocidade para 16 (padrão do Roblox)",
    Callback = function()
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.WalkSpeed = 16
            print("Velocidade restaurada para 16!")
        else
            warn("Personagem ou Humanoid não encontrado!")
        end
    end,
})

--------------------------------------------------------------------------------------------------------------------------------------------------

local JumpInput = Tab1:Input({
    Title = "Definir o tamanho do salto do jogador",
    Desc = "Insira o salto (mínimo 1, sem limite máximo)",
    Value = "70", -- Valor padrão como string
    PlaceholderText = "Digite um número maior que 1...",
    ClearTextOnFocus = false,
    Callback = function(Text)
        local value = tonumber(Text) -- Converte o texto para número
        if value then
            -- Garante que o valor seja pelo menos 1
            value = math.max(value, 1)
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                LocalPlayer.Character.Humanoid.JumpPower = value
                print("Tamanho do salto definido para: " .. value)
            else
                warn("Personagem ou Humanoid não encontrado!")
            end
        else
            warn("Por favor, insira um número válido!")
        end
    end
})

local ResetJumpButton = Tab1:Button({
    Title = "Restaurar salto padrão",
    Desc = "Retorna o salto para 50 (padrão do Roblox)",
    Callback = function()
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.JumpPower = 50
            print("Tamanho do salto restaurado para 50!")
        else
            warn("Personagem ou Humanoid não encontrado!")
        end
    end,
})

--------------------------------------------------------------------------------------------------------------------------------------------------

-- Toggle Anti-Sit
local antiSitConnection

Tab1:Toggle({
    Title = "Anti-Sit",
    Desc = "Impede o jogador de sentar em qualquer assento",
    Value = false,
    Callback = function(state)
        if state then
            -- Ativa o Anti-Sit
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                local humanoid = LocalPlayer.Character.Humanoid
                humanoid.Sit = false -- Força o jogador a não estar sentado
                antiSitConnection = humanoid.Seated:Connect(function(isSeated, seat)
                    if isSeated then
                        humanoid.Sit = false -- Levanta o jogador imediatamente
                    end
                end)
            end
            -- Conecta ao evento de personagem reaparecendo
            LocalPlayer.CharacterAdded:Connect(function(character)
                local humanoid = character:WaitForChild("Humanoid")
                humanoid.Sit = false
                antiSitConnection = humanoid.Seated:Connect(function(isSeated, seat)
                    if isSeated then
                        humanoid.Sit = false
                    end
                end)
            end)
            print("Anti-Sit ativado!")
        else
            -- Desativa o Anti-Sit
            if antiSitConnection then
                antiSitConnection:Disconnect()
                antiSitConnection = nil
            end
            print("Anti-Sit desativado!")
        end
    end,
})

---------------------------------------------------------------------------------------------------------------------------------
                                          -- === Tab 2: casa === --
---------------------------------------------------------------------------------------------------------------------------------

Tab2:Paragraph({ Title = "funçoes para voce usar em voce", Desc = "" })


-- Botão para remover ban de todas as casas (versão ajustada)
Tab2:Button({
    Title = "Remover Ban de Todas as Casas",
    Desc = "Tenta remover o ban de todas as casas (1 a 37)",
    Callback = function()
        local successCount = 0
        local failCount = 0
        -- Verifica se há algum BannedBlock no Workspace
        print("Procurando por BannedBlocks no Workspace...")
        for i = 1, 37 do
            local bannedBlockName = "BannedBlock" .. i
            local bannedBlock = Workspace:FindFirstChild(bannedBlockName, true) -- Busca recursiva no Workspace
            if bannedBlock then
                local success, errorMessage = pcall(function()
                    bannedBlock:Destroy()
                end)
                if success then
                    successCount = successCount + 1
                    print("Ban removido da casa " .. i .. " com sucesso!")
                else
                    failCount = failCount + 1
                    warn("Erro ao remover ban da casa " .. i .. ": " .. tostring(errorMessage))
                end
            else
                print("Nenhum ban encontrado para a casa " .. i .. " (BannedBlock" .. i .. " não existe).")
            end
        end
        -- Tenta procurar em outros lugares (por exemplo, dentro das casas)
        print("Procurando por BannedBlocks dentro das casas...")
        for _, house in pairs(Workspace:GetDescendants()) do
            if house.Name:match("BannedBlock") then
                local success, errorMessage = pcall(function()
                    house:Destroy()
                end)
                if success then
                    successCount = successCount + 1
                    print("Ban removido: " .. house.Name .. " em " .. house:GetFullName())
                else
                    failCount = failCount + 1
                    warn("Erro ao remover ban " .. house.Name .. ": " .. tostring(errorMessage))
                end
            end
        end
        -- Resumo do resultado
        print("Resumo: " .. successCount .. " bans removidos com sucesso, " .. failCount .. " falhas.")
        if successCount > 0 then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Sucesso",
                Text = "Bans removidos de " .. successCount .. " casas!",
                Duration = 5
            })
        end
        if failCount > 0 then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Aviso",
                Text = "Falha ao remover bans de " .. failCount .. " casas. Veja o console para detalhes.",
                Duration = 5
            })
        end
        if successCount == 0 and failCount == 0 then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Aviso",
                Text = "Nenhum ban encontrado para remover.",
                Duration = 5
            })
        end
    end,
})



------------------------------------------------------------------------------------------------------------------------------------------------

Tab2:Paragraph({ Title = "pegar permisao de casas!", Desc = "" })

Tab2:Dropdown({
    Title = "pegar permissão das casas",
    Desc = "",
    Value = "Option 1",
    Multi = false,
    AllowNone = true,
    Values = {"Option 1", "Option 2", "Option 3", "Option 4", "Option 5", "Option 6", "Option 7", "Option 8", "Option 9", "Option 10", "Option 11", "Option 12", "Option 13", "Option 14", "Option 15", "Option 16", "Option 17", "Option 18", "Option 19", "Option 20", "Option 21", "Option 22", "Option 23", "Option 24", "Option 25", "Option 26", "Option 27", "Option 28", "Option 29", "Option 30", "Option 31", "Option 32", "Option 33", "Option 34", "Option 35", "Option 36", "Option 37"},
    Callback = function(tab)
        local permission = tonumber(tab:match("%d+")) or 1
        fireServer("1Playe1rTrigge1rEven1t", {"GivePermissionLoopToServer", LocalPlayer, permission})
    end,
})

----------------------------------------------------------------------------------------------------------------------------------------------

Tab2:Paragraph({ Title = "funçoes para outros players", Desc = "" })

Tab2:Paragraph({ Title = "esta funçao e para dar permisao de qualquer casa para qualquer player", Desc = "" })

-- Função para pegar os nomes dos jogadores
local function getPlayerNames()
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
    return playerNames
end

-- Dropdown para selecionar o jogador
local selectedPlayerName = ""
local DropdownPlayers = Tab2:Dropdown({
    Title = "Selecionar Jogador",
    Desc = "Escolha um jogador para dar permissão",
    Value = "",
    Multi = false,
    AllowNone = true,
    Values = getPlayerNames(),
    Callback = function(playerName)
        selectedPlayerName = playerName
        print("Jogador selecionado: " .. selectedPlayerName)
    end,
})

-- Atualiza o dropdown quando jogadores entram ou saem
Players.PlayerAdded:Connect(function() DropdownPlayers:Refresh(getPlayerNames()) end)
Players.PlayerRemoving:Connect(function() DropdownPlayers:Refresh(getPlayerNames()) end)

-- Dropdown para selecionar o número da casa
local selectedHouseNumber = 1
local houseOptions = {}
for i = 1, 37 do
    table.insert(houseOptions, tostring(i))
end

local DropdownHouses = Tab2:Dropdown({
    Title = "Selecionar Casa",
    Desc = "Escolha o número da casa (1 a 37)",
    Value = "1",
    Multi = false,
    AllowNone = false,
    Values = houseOptions,
    Callback = function(houseNumber)
        selectedHouseNumber = tonumber(houseNumber)
        print("Casa selecionada: " .. selectedHouseNumber)
    end,
})

-- Botão para dar permissão
Tab2:Button({
    Title = "Dar Permissão",
    Desc = "Dá permissão ao jogador selecionado para a casa escolhida",
    Callback = function()
        if selectedPlayerName == "" then
            warn("Nenhum jogador selecionado!")
            return
        end
        local targetPlayer = Players:FindFirstChild(selectedPlayerName)
        if not targetPlayer then
            warn("Jogador não encontrado: " .. selectedPlayerName)
            return
        end
        local args = {
            [1] = "GivePermissionLoopToServer",
            [2] = targetPlayer,
            [3] = selectedHouseNumber
        }
        local success, errorMessage = pcall(function()
            game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        end)
        if success then
            print("Permissão dada para " .. selectedPlayerName .. " na casa " .. selectedHouseNumber)
        else
            warn("Erro ao dar permissão: " .. tostring(errorMessage))
        end
    end,
})

----------------------------------------------------------------------------------------------------------------------------------------------

Tab2:Paragraph({ Title = "esta funçao e para remover a permisao de qualquer casa e de qualque player", Desc = "" })

-- Função para pegar os nomes dos jogadores
local function getPlayerNames()
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
    return playerNames
end

-- Dropdown para selecionar o jogador
local selectedPlayerNameRemove = ""
local DropdownPlayersRemove = Tab2:Dropdown({
    Title = "Selecionar Jogador (Remover)",
    Desc = "Escolha um jogador para remover permissão",
    Value = "",
    Multi = false,
    AllowNone = true,
    Values = getPlayerNames(),
    Callback = function(playerName)
        selectedPlayerNameRemove = playerName
        print("Jogador selecionado para remover permissão: " .. selectedPlayerNameRemove)
    end,
})

-- Atualiza o dropdown quando jogadores entram ou saem
Players.PlayerAdded:Connect(function() DropdownPlayersRemove:Refresh(getPlayerNames()) end)
Players.PlayerRemoving:Connect(function() DropdownPlayersRemove:Refresh(getPlayerNames()) end)

-- Dropdown para selecionar o número da casa
local selectedHouseNumberRemove = 1
local houseOptionsRemove = {}
for i = 1, 37 do
    table.insert(houseOptionsRemove, tostring(i))
end

local DropdownHousesRemove = Tab2:Dropdown({
    Title = "Selecionar Casa (Remover)",
    Desc = "Escolha o número da casa (1 a 37)",
    Value = "1",
    Multi = false,
    AllowNone = false,
    Values = houseOptionsRemove,
    Callback = function(houseNumber)
        selectedHouseNumberRemove = tonumber(houseNumber)
        print("Casa selecionada para remover permissão: " .. selectedHouseNumberRemove)
    end,
})

-- Botão para remover permissão
Tab2:Button({
    Title = "Remover Permissão",
    Desc = "Remove a permissão do jogador selecionado para a casa escolhida",
    Callback = function()
        if selectedPlayerNameRemove == "" then
            warn("Nenhum jogador selecionado para remover permissão!")
            return
        end
        local targetPlayer = Players:FindFirstChild(selectedPlayerNameRemove)
        if not targetPlayer then
            warn("Jogador não encontrado: " .. selectedPlayerNameRemove)
            return
        end
        local args = {
            [1] = "RemovePermissionLoopToServer",
            [2] = targetPlayer,
            [3] = selectedHouseNumberRemove
        }
        local success, errorMessage = pcall(function()
            game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        end)
        if success then
            print("Permissão removida de " .. selectedPlayerNameRemove .. " na casa " .. selectedHouseNumberRemove)
        else
            warn("Erro ao remover permissão: " .. tostring(errorMessage))
        end
    end,
})


-- (Código anterior, como a Tab1 e Tab2)
---------------------------------------------------------------------------------------------------------------------------------
                                          -- === Tab 3: Carro === --
---------------------------------------------------------------------------------------------------------------------------------

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

Tab3:Toggle({
    Title = "Teleport to Cars",
    Desc = "Teleports to each car's driver seat, then to the void, and back to your original position",
    Value = false,
    Callback = function(state)
        local LocalPlayer = Players.LocalPlayer
        local originalPosition -- Para armazenar a posição original do jogador
        local teleportActive = state -- Estado do toggle
        local fallDamageDisabled = false -- Para controlar se a morte por queda está desativada

        -- Função para desativar/reativar a morte por queda
        local function toggleFallDamage(disable)
            if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("Humanoid") then return end
            local humanoid = LocalPlayer.Character.Humanoid
            if disable then
                -- Desativa a morte por queda
                humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
                humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
                humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp, true)
                humanoid.PlatformStand = false
                fallDamageDisabled = true
                print("Morte por queda desativada!")
            else
                -- Reativa a morte por queda
                humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, true)
                humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, true)
                fallDamageDisabled = false
                print("Morte por queda reativada!")
            end
        end

        -- Função para teleportar o jogador para um assento
        local function teleportToSeat(seat, car)
            if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("Humanoid") then
                warn("Personagem ou Humanoid não encontrado!")
                return false
            end
            local humanoid = LocalPlayer.Character.Humanoid
            local rootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if not rootPart then
                warn("HumanoidRootPart não encontrado!")
                return false
            end

            -- Força o jogador a não estar sentado antes de tentar
            humanoid.Sit = false
            task.wait(0.1)

            -- Teleporta o jogador para perto do assento antes de sentar
            rootPart.CFrame = seat.CFrame + Vector3.new(0, 5, 0) -- Coloca o jogador acima do assento
            task.wait(0.1)

            -- Tenta sentar no assento
            seat:Sit(humanoid)
            task.wait(0.5) -- Espera para confirmar que sentou
            local success = humanoid.SeatPart == seat
            if success then
                print("Sentou no assento do carro: " .. car.Name)
            else
                warn("Falha ao sentar no assento do carro: " .. car.Name)
            end
            return success
        end

        -- Função para teleportar o carro e o jogador para o void
        local function teleportToVoid(car)
            if not car then
                warn("Carro não encontrado para teleportar ao void!")
                return
            end
            -- Define o PrimaryPart se não estiver definido
            if not car.PrimaryPart then
                local body = car:FindFirstChild("Body", true) or car:FindFirstChild("Chassis", true)
                if body and body:IsA("BasePart") then
                    car.PrimaryPart = body
                else
                    warn("Carro " .. car.Name .. " não tem PrimaryPart ou Body/Chassis para teleportar!")
                    return
                end
            end
            local voidPosition = Vector3.new(0, -1000, 0) -- Posição no "void"
            car:SetPrimaryPartCFrame(CFrame.new(voidPosition))
            print("Carro " .. car.Name .. " teleportado para o void!")
            task.wait(0.5) -- Espera para garantir que o teleporte ocorreu
        end

        -- Função para forçar o jogador a sair do carro e voltar à posição original
        local function exitCarAndReturn()
            if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("Humanoid") then
                warn("Personagem ou Humanoid não encontrado para sair do carro!")
                return
            end
            local humanoid = LocalPlayer.Character.Humanoid
            if humanoid.SeatPart then
                humanoid.Sit = false -- Força o jogador a sair do assento
                print("Jogador saiu do assento!")
            end
            task.wait(0.1) -- Pequeno atraso para garantir que saiu
            if originalPosition then
                LocalPlayer.Character:PivotTo(CFrame.new(originalPosition))
                print("Jogador retornou à posição original: " .. tostring(originalPosition))
            else
                warn("Posição original não definida para retorno!")
            end
        end

        if state then
            -- Salva a posição original do jogador antes de começar
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                originalPosition = LocalPlayer.Character.HumanoidRootPart.Position
                print("Posição original salva: " .. tostring(originalPosition))
            else
                warn("Não foi possível encontrar o personagem do jogador para salvar a posição!")
                return
            end

            -- Desativa a morte por queda
            toggleFallDamage(true)

            -- Inicia o loop para processar os carros
            spawn(function()
                -- Obtém todos os carros em Workspace.Vehicles
                local vehiclesFolder = Workspace:FindFirstChild("Vehicles")
                if not vehiclesFolder then
                    warn("Pasta 'Vehicles' não encontrada no Workspace!")
                    return
                end

                -- Cria uma lista de carros (filtra apenas os que terminam com "Car")
                local cars = {}
                for _, car in ipairs(vehiclesFolder:GetChildren()) do
                    if car.Name:match("Car$") then -- Verifica se o nome termina com "Car"
                        table.insert(cars, car)
                    end
                end
                print("Carros encontrados: " .. #cars)

                -- Processa cada carro
                for _, car in ipairs(cars) do
                    if not teleportActive then
                        print("Toggle desativado, parando o loop!")
                        break
                    end

                    print("Processando carro: " .. car.Name)

                    -- Procura o VehicleSeat recursivamente dentro do carro
                    local vehicleSeat = car:FindFirstChildWhichIsA("VehicleSeat", true)
                    if vehicleSeat then
                        print("VehicleSeat encontrado no carro: " .. car.Name .. " em " .. vehicleSeat:GetFullName())
                        -- Verifica se o assento está vazio
                        if vehicleSeat.Occupant == nil then
                            print("Assento está vazio, tentando sentar...")
                            -- Tenta teleportar para o assento
                            local success = teleportToSeat(vehicleSeat, car)
                            if success then
                                -- Teleporta o carro e o jogador para o void
                                teleportToVoid(car)
                                -- Força o jogador a sair do carro e voltar à posição original
                                exitCarAndReturn()
                                task.wait(1) -- Intervalo antes de passar para o próximo carro
                            else
                                warn("Não conseguiu sentar no assento do carro: " .. car.Name)
                            end
                        else
                            print("Assento ocupado no carro: " .. car.Name .. ", passando para o próximo...")
                        end
                    else
                        warn("VehicleSeat não encontrado no carro: " .. car.Name)
                    end
                end

                -- Desativa o toggle automaticamente quando terminar
                if teleportActive then
                    teleportActive = false
                    print("Todos os carros foram processados!")
                    -- Reativa a morte por queda ao terminar
                    toggleFallDamage(false)
                end
            end)
        else
            teleportActive = false -- Para o loop quando o toggle é desativado
            print("Toggle desativado manualmente!")
            -- Reativa a morte por queda ao desativar o toggle
            toggleFallDamage(false)
        end
    end,
})

-- Garante que a morte por queda seja reativada/desativada ao recarregar o personagem
local fallDamageDisabled = false
Players.LocalPlayer.CharacterAdded:Connect(function(character)
    if fallDamageDisabled then
        local humanoid = character:WaitForChild("Humanoid")
        humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
        humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
        humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp, true)
        humanoid.PlatformStand = false
        print("Morte por queda desativada após respawn!")
    else
        local humanoid = character:WaitForChild("Humanoid")
        humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, true)
        humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, true)
        print("Morte por queda reativada após respawn!")
    end
end)
-----------------------------------------------------------------------------------------------------
                                          -- === Tab 4: RGB Color === --
---------------------------------------------------------------------------------------------------------------------------------

-- Toggle Nome RGB
local nameRGBActive = false
Tab4:Toggle({
    Title = "Nome RGB",
    Desc = "Ativa cores RGB",
    Value = false,
    Callback = function(state)
        print("Toggle 'Nome RGB' alterado para: " .. tostring(state)) -- Debug
        nameRGBActive = state
        if state then
            spawn(function()
                while nameRGBActive do
                    -- Gera uma cor RGB aleatória
                    local color = Color3.new(math.random(), math.random(), math.random())
                    local args = {
                        [1] = "PickingRPNameColor",
                        [2] = color
                    }
                    local success, errorMessage = pcall(function()
                        fireServer("1RPNam1eColo1r", args)
                    end)
                    if not success then
                        warn("Erro ao mudar a cor do nome: " .. tostring(errorMessage))
                    end
                    wait(1) -- Delay de 1 segundo para evitar detecção
                end
            end)
            print("Nome RGB ativado!")
        else
            -- Volta para a cor padrão (ex.: branco)
            local args = {
                [1] = "PickingRPNameColor",
                [2] = Color3.new(1, 1, 1) -- Branco
            }
            local success, errorMessage = pcall(function()
                fireServer("1RPNam1eColo1r", args)
            end)
            if success then
                print("Nome RGB desativado! Cor voltou para branco.")
            else
                warn("Erro ao desativar Nome RGB: " .. tostring(errorMessage))
            end
        end
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



-- Toggle Bio RGB
local bioRGBActive = false
Tab4:Toggle({
    Title = "Bio RGB",
    Desc = "Ativa cores RGB aleatórias na sua bio",
    Value = false,
    Callback = function(state)
        print("Toggle 'Bio RGB' alterado para: " .. tostring(state)) -- Debug
        bioRGBActive = state
        if state then
            spawn(function()
                while bioRGBActive do
                    -- Gera uma cor RGB aleatória
                    local color = Color3.new(math.random(), math.random(), math.random())
                    local args = {
                        [1] = "PickingRPBioColor",
                        [2] = color
                    }
                    local success, errorMessage = pcall(function()
                        fireServer("1RPNam1eColo1r", args) -- Mesmo evento para bio
                    end)
                    if not success then
                        warn("Erro ao mudar a cor da bio: " .. tostring(errorMessage))
                    end
                    wait(1) -- Delay de 1 segundo para evitar detecção
                end
            end)
            print("Bio RGB ativada!")
        else
            -- Volta para a cor padrão (ex.: branco)
            local args = {
                [1] = "PickingRPBioColor",
                [2] = Color3.new(1, 1, 1) -- Branco
            }
            local success, errorMessage = pcall(function()
                fireServer("1RPNam1eColo1r", args)
            end)
            if success then
                print("Bio RGB desativada! Cor voltou para branco.")
            else
                warn("Erro ao desativar Bio RGB: " .. tostring(errorMessage))
            end
        end
    end,
})



--------------------------------------------------------------------------------------------------------------------------------------------------



-- Toggle RGB Premium (Carro)
local carRGBActive = false
local vibrantColors = {
    Color3.new(1, 0, 0),       -- Vermelho
    Color3.new(0, 1, 0),       -- Verde
    Color3.new(0, 0, 1),       -- Azul
    Color3.new(1, 1, 0),       -- Amarelo
    Color3.new(1, 0, 1),       -- Magenta
    Color3.new(0, 1, 1),       -- Ciano
    Color3.new(1, 0.5, 0),     -- Laranja
    Color3.new(0.5, 0, 1)      -- Roxo
}

Tab4:Toggle({
    Title = "car RGB",
    Desc = "precisa do premium (atençao pode dar kick!!!! nao recomendo usar!!!)",
    Value = false,
    Callback = function(state)
        print("Toggle 'RGB Premium' alterado para: " .. tostring(state)) -- Debug
        carRGBActive = state
        if state then
            -- Verifica se o jogador está em um carro
            local character = LocalPlayer.Character
            if not character then
                warn("Personagem não encontrado para ativar RGB Premium!")
                return
            end

            -- Inicia o loop de mudança de cor
            spawn(function()
                while carRGBActive do
                    -- Escolhe uma cor aleatória da lista de cores chamativas
                    local color = vibrantColors[math.random(1, #vibrantColors)]
                    print("Mudando cor do carro para: " .. tostring(color)) -- Debug
                    local args = {
                        [1] = "PickingCarColor",
                        [2] = color
                    }
                    local success, errorMessage = pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer(unpack(args))
                    end)
                    if not success then
                        warn("Erro ao mudar a cor do carro: " .. tostring(errorMessage))
                    end
                    wait(1) -- Delay de 1 segundo para evitar detecção
                end
            end)
            print("RGB Premium (Carro) ativado!")
        else
            -- Volta para a cor padrão (ex.: branco)
            local args = {
                [1] = "PickingCarColor",
                [2] = Color3.new(1, 1, 1) -- Branco
            }
            local success, errorMessage = pcall(function()
                game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer(unpack(args))
            end)
            if success then
                print("RGB Premium (Carro) desativado! Cor voltou para branco.")
            else
                warn("Erro ao desativar RGB Premium: " .. tostring(errorMessage))
            end
        end
    end,
})

---------------------------------------------------------------------------------------------------------------------------------
                                          -- === Tab 5: Troll Musica === --
---------------------------------------------------------------------------------------------------------------------------------

Tab5:Paragraph({ Title = "funçoes so para quem tem a gamepass de musica ", Desc = "" })

Tab5:Paragraph({ Title = "Precisa de gamepass", Desc = "Gamepass música" })
Tab5:Paragraph({ Title = "Só funciona em veículos do tipo over board", Desc = "" })


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Dropdown({
    Title = "Funk, Phonk, MTG",
    Desc = "Over board",
    Value = "Option 1",
    Multi = false,
    AllowNone = true,
    Values = {
        "novas musica adds", "90844637105538", "102333419023382", "102333419023382", "104240235018198", "111668097052966", "93786060174790", "74812784884330", "musica brasil", "77501611905348", "126887144190812", "88033569921555", "132436320685732", "105832154444494", "", "90323407842935", "132245626038510",
"111995323199676","115016589376700", "118740708757685", "139435437308948",
"109189438638906", "138415155024226", "105126065014034", "102919095332206", "132245626038510", "97765714111493",
"100788814736643", "72720721570850", "138487820505005", "87968531262747", "106317184644394",
"musica do meu interece", "123592956882621", "108494476595033", "106835463235574", "123723674864058", "112068892721408", "musica dls por elas", "91760524161503",
"73140398421340", "137962454483542", "84733736048142", "106322173003761", "94604796823780", "118063577904953", "115567432786512", "71304501822029",
"132218979961283", "102708912256857", "140642559093189", "13530439660", "87863924786534", "133135085604736", "97258811783169", "92308400487695",
"104635713368149", "88064647826500", "85385155970460", "122871512353520", "122852029094656", "115016589376700", "meme abaixo", "94395705857835", "136804576009416",
"108494476595033", "131804436682424", "80291355054807", "137774355552052", "127944706557246", "82284055473737", "102906880476838", "91502410121438", "81694110949920", "estourada", "92175624643620", "108099943758978"
    },
    Callback = function(selectedValue)
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", selectedValue})
        print("Argumentos enviados: " .. selectedValue)
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Dropdown({
    Title = "Música Normal",
    Desc = "Over board",
    Value = "Option 1",
    Multi = false,
    AllowNone = true,
    Values = {"82406276148517", "129569692779816", "84584808135615", "131116056080033", "119540502924273", "75244543048318", "85439942763713", "97001593161206", "122473498105749"},
    Callback = function(selectedValue)
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", selectedValue})
        print("Argumentos enviados: " .. selectedValue)
    end,
})

Tab5:Dropdown({
    Title = "Meme Música",
    Desc = "Over board",
    Value = "Option 1",
    Multi = false,
    AllowNone = true,
    Values = {"115199984575713", "", "82161110448949", "139639579473440", "92212156099339", "86855540619546", "128027832969902", "118785260057094", "", "72739838426009"},
    Callback = function(selectedValue)
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", selectedValue})
        print("Argumentos enviados: " .. selectedValue)
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Dropdown({
    Title = "Terror Assustar",
    Desc = "Over board",
    Value = "Option 1",
    Multi = false,
    AllowNone = true,
    Values = {"72624476289253", "116709209733976", "99430297570707", "102348131944238", "125199445385812", "73562744560566", "106975887314345", "", "77874596719163", "83764626839857", "132027370834826"},
    Callback = function(selectedValue)
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", selectedValue})
        print("Argumentos enviados: " .. selectedValue)
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Dropdown({
    Title = "Miside, Mita",
    Desc = "Over board",
    Value = "Option 1",
    Multi = false,
    AllowNone = true,
    Values = {"112170504958980", "106013565624854", "104676632588868", "113222738822583", "98552734554697"},
    Callback = function(selectedValue)
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", selectedValue})
        print("Argumentos enviados: " .. selectedValue)
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Button({
    Title = "STOP",
    Desc = "Stop music",
    Callback = function()
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", ""})
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Button({
    Title = "Telefone FNAF",
    Desc = "FNAF",
    Callback = function()
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", "4835346587"})
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Button({
    Title = "HELOU HAY AHAHAHA",
    Desc = "FNAF",
    Callback = function()
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", "5608077885"})
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Button({
    Title = "Grito Ohor",
    Desc = "FNAF",
    Callback = function()
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", "268116333"})
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Button({
    Title = "Risada Doida",
    Desc = "Load meme",
    Callback = function()
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", "7752143456"})
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Paragraph({ Title = "Carro Música", Desc = "Gamepass música" })
Tab5:Paragraph({ Title = "Precisa da gamepass", Desc = "" })


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Dropdown({
    Title = "Selecionar Música",
    Desc = "Música",
    Value = "Option 1",
    Multi = false,
    AllowNone = true,
    Values = {
        "novas musica adds", "90844637105538", "102333419023382", "102333419023382", "104240235018198", "111668097052966", "93786060174790", "74812784884330", "musica brasil", "77501611905348", "126887144190812", "88033569921555", "132436320685732", "105832154444494", "", "90323407842935", "132245626038510",
"111995323199676","115016589376700", "118740708757685", "139435437308948",
"109189438638906", "138415155024226", "105126065014034", "102919095332206", "132245626038510", "97765714111493",
"100788814736643", "72720721570850", "138487820505005", "87968531262747", "106317184644394",
"musica do meu interece", "123592956882621", "108494476595033", "106835463235574", "123723674864058", "112068892721408", "musica dls por elas", "91760524161503",
"73140398421340", "137962454483542", "84733736048142", "106322173003761", "94604796823780", "118063577904953", "115567432786512", "71304501822029",
"132218979961283", "102708912256857", "140642559093189", "13530439660", "87863924786534", "133135085604736", "97258811783169", "92308400487695",
"104635713368149", "88064647826500", "85385155970460", "122871512353520", "122852029094656", "115016589376700", "meme abaixo", "94395705857835", "136804576009416",
"108494476595033", "131804436682424", "80291355054807", "137774355552052", "127944706557246", "82284055473737", "102906880476838", "91502410121438", "81694110949920", "estourada", "92175624643620", "108099943758978"
    },
    Callback = function(selectedValue)
        fireServer("1Player1sCa1r", {"PickingCarMusicText", selectedValue})
        print("Argumentos enviados: " .. selectedValue)
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



local Input = Tab5:Input({
    Title = "Música",
    Desc = "Colocar o id da música",
    Value = "",
    PlaceholderText = "coloque o id aqui...",
    ClearTextOnFocus = false,
    Callback = function(text)
        fireServer("1Player1sCa1r", {"PickingCarMusicText", text})
    end,
})

Input:SetTitle("New Title!")
Input:SetDesc("New Description!")


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Button({
    Title = "Stop",
    Desc = "Car music",
    Callback = function()
        fireServer("1Player1sCa1r", {"PickingCarMusicText", ""})
    end,
})

---------------------------------------------------------------------------------------------------------------------------------
                                                -- === Tab 6: Music All === --
---------------------------------------------------------------------------------------------------------------------------------

local loopAtivo = false
local InputID = ""

Tab6:Input({
    Title = "Insira o ID Audio All",
    Desc = "Digite o ID do som que deseja tocar",
    Value = "",
    PlaceholderText = "Exemplo: 6832470734",
    ClearTextOnFocus = true,
    Callback = function(text)
        InputID = tonumber(text)
        if not InputID then warn("Por favor, insira um ID válido!") end
    end,
})

Tab6:Button({
    Title = "Tocar Som",
    Desc = "Clique para tocar a música inserida",
    Callback = function()
        if InputID then
            fireServer("1Gu1nSound1s", {Workspace, InputID, 1})
            local globalSound = Instance.new("Sound", Workspace)
            globalSound.SoundId = "rbxassetid://" .. InputID
            globalSound.Looped = false
            globalSound:Play()
            task.wait(3)
            globalSound:Destroy()
        else
            warn("Nenhum ID válido foi inserido!")
        end
    end,
})

Tab6:Toggle({
    Title = "Loop",
    Desc = "Ative para colocar o som em loop",
    Icon = "check",
    Value = false,
    Callback = function(state)
        loopAtivo = state
        if loopAtivo then
            print("Loop ativado!")
            spawn(function()
                while loopAtivo do
                    if InputID then
                        fireServer("1Gu1nSound1s", {Workspace, InputID, 1})
                        local globalSound = Instance.new("Sound", Workspace)
                        globalSound.SoundId = "rbxassetid://" .. InputID
                        globalSound.Looped = false
                        globalSound:Play()
                        -- Não espera o áudio terminar, apenas cria e toca
                        task.spawn(function() -- Usa task.spawn para destruir após 3 segundos sem interferir no loop
                            task.wait(3)
                            globalSound:Destroy()
                        end)
                    else
                        warn("Nenhum ID válido foi inserido!")
                    end
                    task.wait(1) -- Intervalo de 1 segundo entre cada início de som
                end
            end)
        else
            print("Loop desativado!")
        end
    end,
})

-- Sistema de Som com Dropdown (Tab6)
local musicOptions = {
    ["Memes"] = {
        {name = "pankapakan", id = 122547522269143},
        {name = "araara", id = 18388861760},
        {name = "jumpscar", id = 91784486966761},
        {name = "gemido", id = 106835463235574},
        {name = "gritodoido", id = 7807987190},
        {name = "Hahahah", id = 90096947219465},
        {name = "Error", id = 101446887200514},
        {name = "tomagerk", id = 132603645477541},
        {name = "Tomagerk v2", id = 100446887985203},
        {name = "ifood", id = 133843750864059},
        {name = "coringa", id = 84663543883498},
        {name = "shoope", id = 8747441609},
        {name = "quenojo", id = 103440368630269},
        {name = "sai dai lava prato", id = 101232400175829},
        {name = "se e loko numconpeça", id = 78442476709262},
        {name = "mita sequer que eu too uma", id = 94889439372168},
        {name = "gritoestourado", id = 7520729342},
        {name = "gemido estranho", id = 131219411501419},
        {name = "gemido kawai", id = 100409245129170},
        {name = "Discord sus", id = 122662798976905},
        {name = "Kazuma kazuma", id = 127954653962405},
        {name = "Hoje vou ser tua mulher e tu", id = 90844637105538},
        {name = "Gemido ultra rápido", id = 128863565301778},
        {name = "Deita aqui eu mandei vc deitar sirens", id = 100291188941582},
        {name = "Aí papi", id = 126284366884644},
        {name = "Good boy", id = 112399901996574},
        {name = "gemidao v2", id = 112179417472137},
    },
    ["Efeitos"] = {
        {name = "metal", id = 71251935617451},
        {name = "tiro", id = 104223019424522},
        {name = "sometourado", id = 123592956882621},
        {name = "off", id = 1778829098},
        {name = "Carropeid", id = 88883922248256},
        {name = "Estouradoespad", id = 136179020015211},
        {name = "rojao apito", id = 6549021381},
        {name = "Woooo", id = 117521059248354},
        {name = "sla", id = 116672405522828},
        {name = "Estourado wItb", id = 137478052262430},
        {name = "Golden efect", id = 77773293292155},
        {name = "busss", id = 139841197791567},
        {name = "poc poc", id = 102333419023382},
        {name = "Haki sound", id = 91390250645812},
        {name = "Alaku bommm", id = 110796593805268},
    },
    ["Alarmes/terror"] = {
        {name = "Chernobyl1", id = 134433437151072},
        {name = "Chernobyl5", id = 101927395686044},
        {name = "Radioxiado", id = 8028069841},
        {name = "Nukesiren", id = 9067330158},
        {name = "Sirenhead", id = 5681392074},
        {name = "Alertescola", id = 6607047008},
        {name = "Memealert", id = 8379374771},
        {name = "Alerta3S", id = 402404861},
        {name = "nuclear siren", id = 675587093},
        {name = "gritomedo", id = 113029085566978},
    }
}

local musicNames = {}
local categoryMap = {}
for category, sounds in pairs(musicOptions) do
    for _, music in ipairs(sounds) do
        table.insert(musicNames, music.name)
        categoryMap[music.name] = {id = music.id, category = category}
    end
end

local selectedSoundID = nil
local currentVolume = 1
local currentPitch = 1

local function playSound(soundId, volume, pitch)
    fireServer("1Gu1nSound1s", {Workspace, soundId, volume})
    local globalSound = Instance.new("Sound")
    globalSound.Parent = Workspace
    globalSound.SoundId = "rbxassetid://" .. soundId
    globalSound.Volume = volume
    globalSound.Pitch = pitch
    globalSound.Looped = false
    globalSound:Play()
    -- Usa task.spawn para destruir após 3 segundos sem bloquear o loop
    task.spawn(function()
        task.wait(3)
        globalSound:Destroy()
    end)
end

local MusicDropdown = Tab6:Dropdown({
    Title = "Selecione uma música",
    Desc = "Escolha o som para tocar no servidor",
    Value = "pankapakan",
    Multi = false,
    AllowNone = true,
    Values = musicNames,
    Callback = function(selectedSound)
        if selectedSound and categoryMap[selectedSound] then
            selectedSoundID = categoryMap[selectedSound].id
            print("Som selecionado: " .. selectedSound .. " (ID: " .. selectedSoundID .. ")")
        else
            warn("Nenhum som selecionado ou ID não encontrado!")
            selectedSoundID = nil
        end
    end,
})

Tab6:Button({
    Title = "Tocar Som Selecionado",
    Desc = "Clique para tocar o som do dropdown",
    Callback = function()
        if selectedSoundID then
            playSound(selectedSoundID, currentVolume, currentPitch)
        else
            warn("Nenhum som selecionado no dropdown!")
        end
    end,
})

local dropdownLoopActive = false
Tab6:Toggle({
    Title = "Loop",
    Desc = "Ativa o loop do som selecionado",
    Value = false,
    Callback = function(state)
        dropdownLoopActive = state
        if state then
            print("Loop ativado!")
            spawn(function()
                while dropdownLoopActive do
                    if selectedSoundID then
                        playSound(selectedSoundID, currentVolume, currentPitch)
                        -- Não espera o áudio terminar, apenas cria e toca
                    else
                        warn("Nenhum som selecionado!")
                    end
                    task.wait(1) -- Intervalo de 1 segundo entre cada início de som
                end
            end)
        else
            print("Loop desativado!")
        end
    end,
})

----------------------------------------------------------------------------------------------------------------------------------------------
                                               -- === Tab 7: Scripts === --
----------------------------------------------------------------------------------------------------------------------------------------------

Tab7:Button({
    Title = "Invisible",
    Desc = "universal",
    Callback = function()
        loadstring(game:HttpGet("https://scriptblox.com/raw/Universal-Script-fe-invisible-4366"))()
    end,
})

Tab7:Button({
    Title = "FE Jerk Off Hub Matrix",
    Desc = "Universal",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/ExploitFin/AquaMatrix/refs/heads/AquaMatrix/AquaMatrix"))()
    end,
})

Tab7:Button({
    Title = "FE HUGG",
    Desc = "Universal",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/JSFKGBASDJKHIOAFHDGHIUODSGBJKLFGDKSB/fe/refs/heads/main/FEHUGG"))()
    end,
})

Tab7:Button({
    Title = "Auto Piano Panda Hub",
    Desc = "Universal",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/MADNESSTEST/Pqoeirnfjw/main/AP3-5.lua", true))()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Sgesa/RandomCatsAutoplay/main/Protected_1274635038188005.lua.txt", true))()
    end,
})

Tab7:Button({
    Title = "Buraco Negro",
    Desc = "Universal",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Bac0nHck/Scripts/main/BringFlingPlayers"))("More Scripts: t.me/arceusxscripts")
    end,
})

Tab7:Button({
    Title = "System Broochk",
    Desc = "Universal",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/H20CalibreYT/SystemBroken/main/script"))()
    end,
})

Tab7:Button({
    Title = "Roships",
    Desc = "Universal",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-rochips-universal-18294"))()
    end,
})

Tab7:Button({
    Title = "Sander X",
    Desc = "Somente para Brookhaven",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/kigredns/SanderXV4.2.2/refs/heads/main/New.lua"))()
    end,
})

Tab7:Button({
    Title = "Reverso",
    Desc = "Universal",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/0Ben1/fe./main/L"))()
    end,
})

Tab7:Button({
    Title = "RD4",
    Desc = "Somente para Brookhaven",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/M1ZZ001/BrookhavenR4D/main/Brookhaven%20R4D%20Script"))()
    end,
})

-----------------------------------------------------------------------------------------------------------------------------------------
                                                -- === Tab 8: Players === --
-----------------------------------------------------------------------------------------------------------------------------------------

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer

-- Função para pegar os nomes dos jogadores
local function getPlayerNames()
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
    return playerNames
end

-- Função para atualizar o dropdown
local function updateDropdown(dropdown)
    dropdown:Refresh(getPlayerNames())
end

local function teleportToPlayer(playerName)
    local targetPlayer = Players:FindFirstChild(playerName)
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(targetPlayer.Character.HumanoidRootPart.Position))
        print("Teletransportado para o jogador: " .. playerName)
    else
        print("Jogador não encontrado.")
    end
end

local DropdownTeleport = Tab8:Dropdown({
    Title = "Selecionar Jogador (Teleport)",
    Desc = "Selecione o jogador para teletransportar",
    Value = "",
    Multi = false,
    AllowNone = true,
    Values = getPlayerNames(), -- Usando a função diretamente
    Callback = function(selectedPlayerName)
        print("Jogador selecionado para teletransporte: " .. selectedPlayerName)
    end,
})

updateDropdown(DropdownTeleport)
Players.PlayerAdded:Connect(function() updateDropdown(DropdownTeleport) end)
Players.PlayerRemoving:Connect(function() updateDropdown(DropdownTeleport) end)


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab8:Button({
    Title = "Teleportar para Jogador",
    Desc = "Clique para teletransportar para o jogador selecionado",
    Callback = function()
        teleportToPlayer(DropdownTeleport.Value)
    end,
})

local function spectatePlayer(playerName)
    local targetPlayer = Players:FindFirstChild(playerName)
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") then
        Workspace.CurrentCamera.CameraSubject = targetPlayer.Character.Humanoid
        print("Espectando jogador: " .. targetPlayer.Name)
    else
        print("Jogador não encontrado.")
    end
end

local function stopSpectating()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        Workspace.CurrentCamera.CameraSubject = LocalPlayer.Character.Humanoid
        print("Parando de espectar. Voltando à visão do jogador local.")
    end
end

local DropdownSpectate = Tab8:Dropdown({
    Title = "Selecionar Jogador (Espectar)",
    Desc = "Selecione o jogador para espectar",
    Value = "",
    Multi = false,
    AllowNone = true,
    Values = getPlayerNames(), -- Usando a função diretamente
    Callback = function(selectedPlayerName)
        print("Jogador selecionado para espectar: " .. selectedPlayerName)
    end,
})

updateDropdown(DropdownSpectate)
Players.PlayerAdded:Connect(function() updateDropdown(DropdownSpectate) end)
Players.PlayerRemoving:Connect(function() updateDropdown(DropdownSpectate) end)


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab8:Toggle({
    Title = "Espectar Jogador",
    Desc = "Ativar/Desativar espectar o jogador selecionado",
    Value = false,
    Callback = function(state)
        if state then
            spectatePlayer(DropdownSpectate.Value)
        else
            stopSpectating()
        end
    end,
})

-- Sistema de Teletransporte de Ônibus com Backflips
local selectedPlayerName = ""
local teleportActive = false
local connection
local originalPosition = nil

local function getPlayerCar(player)
    local vehiclesFolder = Workspace:FindFirstChild("Vehicles")
    if vehiclesFolder then
        for _, vehicle in pairs(vehiclesFolder:GetChildren()) do
            if vehicle:IsA("Model") and vehicle:FindFirstChild("Owner") and vehicle:FindFirstChild("Owner").Value == player.Name then
                return vehicle
            end
        end
    end
    return nil
end

local function findPlayerByName(name)
    for _, player in pairs(Players:GetPlayers()) do
        if player.Name:lower():find(name:lower()) then return player end
    end
    return nil
end

local function teleportAndSpinCar(car, targetPlayer)
    local spinSpeed = 45 -- Velocidade de rotação em graus por frame

    connection = RunService.Stepped:Connect(function()
        if not teleportActive then
            if connection then connection:Disconnect() connection = nil end
            return
        end
        car.PrimaryPart.CanCollide = false
        
        -- Gira o ônibus com backflips (só no eixo X)
        car:SetPrimaryPartCFrame(car:GetPrimaryPartCFrame() * CFrame.Angles(math.rad(spinSpeed), 0, 0))
        
        -- Fica em cima do jogador selecionado
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local targetPosition = targetPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, 5, 0) -- 5 unidades acima do jogador
            car:SetPrimaryPartCFrame(CFrame.new(targetPosition) * car:GetPrimaryPartCFrame().Rotation)
        end
    end)

    -- Verifica os assentos continuamente
    RunService.Heartbeat:Connect(function()
        if not teleportActive then return end
        for _, seat in pairs(car:GetDescendants()) do
            if seat:IsA("Seat") and seat.Occupant then
                teleportActive = false
                if connection then connection:Disconnect() connection = nil end
                
                -- Teleporta pro void
                local voidPosition = Vector3.new(car.PrimaryPart.Position.X, -1000, car.PrimaryPart.Position.Z)
                car:SetPrimaryPartCFrame(CFrame.new(voidPosition))
                -- Não despawna o ônibus, apenas deixa no void
                if originalPosition and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    LocalPlayer.Character.HumanoidRootPart.CFrame = originalPosition
                end
                return
            end
        end
    end)
end

local function teleportPlayerCar(playerName)
    local player = findPlayerByName(playerName)
    if not player then warn("Jogador não encontrado: " .. playerName) return end
    local car = getPlayerCar(LocalPlayer)
    if not car then warn("Nenhum carro encontrado para o jogador " .. LocalPlayer.Name) return end
    if not car.PrimaryPart then
        local body = car:FindFirstChild("Body")
        if body then car.PrimaryPart = body else warn("O carro não tem um PrimaryPart válido!") return end
    end
    teleportAndSpinCar(car, player)
end

local function teleportPlayerToPosition(position)
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(position)
    end
end

local function pickCar()
    fireServer("1Ca1r", {"PickingCar", "SchoolBus"})
end


--------------------------------------------------------------------------------------------------------------------------------------------------



local DropdownCar = Tab8:Dropdown({
    Title = "Selecionar Jogador (Ônibus)",
    Desc = "Escolha um jogador para teleportar o ônibus",
    Value = "",
    Multi = false,
    AllowNone = true,
    Values = getPlayerNames(), -- Usando a função diretamente
    Callback = function(tab)
        selectedPlayerName = tab
        print("Jogador selecionado para ônibus: " .. selectedPlayerName)
    end,
})

updateDropdown(DropdownCar)
Players.PlayerAdded:Connect(function() updateDropdown(DropdownCar) end)
Players.PlayerRemoving:Connect(function() updateDropdown(DropdownCar) end)

Tab8:Button({
    Title = "Ativar Ônibus",
    Desc = "Clique para spawnar o ônibus e iniciar o teletransporte",
    Callback = function()
        teleportActive = true
        -- Salva a posição original do jogador
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            originalPosition = LocalPlayer.Character.HumanoidRootPart.CFrame
        end
        teleportPlayerToPosition(Vector3.new(1143, 75, -1065))
        wait(0.5)
        pickCar()
        wait(0.5)
        -- Teleporta pro assento do motorista
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1132.72314, 75.6949005, -1072.46082, -0.0132326381, -3.16897822e-05, 0.999912441, 0.00264345924, 0.999996483, 6.66754495e-05, -0.999908924, 0.00264411024, -0.0132325077)
            local car = getPlayerCar(LocalPlayer)
            if car then
                local driverSeat = car:FindFirstChild("Seat", true)
                if driverSeat and driverSeat:IsA("Seat") then
                    LocalPlayer.Character.Humanoid:Sit(false)
                    wait(0.1)
                    driverSeat:Sit(LocalPlayer.Character.Humanoid)
                end
            end
        end
        wait(0.5)
        if selectedPlayerName ~= "" then teleportPlayerCar(selectedPlayerName) end
    end,
})

--para baixo tab teleports para cima tab players

---------------------------------------------------------------------------------------------------------------------------------
                                          -- === Tab 9: teleports === --
---------------------------------------------------------------------------------------------------------------------------------

-- Supondo que 'Tab' já está definido no seu hub
local player = game.Players.LocalPlayer
local selectedLocation = "Morro" -- Valor inicial padrão

-- Dropdown com as localizações de Brookhaven
local Dropdown = Tab9:Dropdown({
    Title = "Locais de Brookhaven",
    Desc = "Selecione um local para teleportar",
    Value = "Morro", -- Valor padrão
    Multi = false, -- Apenas uma seleção por vez
    AllowNone = false, -- Não permite desmarcar
    Values = {
        "Morro",
        "Praça",
        "Banco",
        "Hospital",
        "Prefeitura",
        "Fazenda",
        "Mercado",
        "Shopping",
        "Aeroporto",
        "Hotel",
        "Beira mar 1",
        "Beira mar 2"
    },
    Callback = function(value)
        selectedLocation = value
        print("Local selecionado: " .. selectedLocation)
    end
})

-- Botão para teleportar
local TeleportButton = Tab9:Button({
    Title = "Teleportar",
    Desc = "Teleporta para o local selecionado",
    Callback = function()
        print("Teleportando para: " .. selectedLocation)
        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local humanoidRootPart = player.Character.HumanoidRootPart
            local locations = {
                ["Morro"] = Vector3.new(-348.64, 65.94, -458.08),
                ["Praça"] = Vector3.new(-26.17, 3.48, -0.93),
                ["Banco"] = Vector3.new(1.99, 3.32, 236.65),
                ["Hospital"] = Vector3.new(-303.2, 3.40, 13.74),
                ["Prefeitura"] = Vector3.new(-354.65, 7.32, -102.16),
                ["Fazenda"] = Vector3.new(-766.41, 2.92, -61.10),
                ["Mercado"] = Vector3.new(16.31, 3.32, -107.07),
                ["Shopping"] = Vector3.new(151.05, 3.52, -190.64),
                ["Aeroporto"] = Vector3.new(290.23, 4.32, 42.57),
                ["Hotel"] = Vector3.new(159.10, 3.32, 164.97),
                ["Beira mar 1"] = Vector3.new(55.69, 2.94, -1403.60),
                ["Beira mar 2"] = Vector3.new(42.39, 2.94, 1336.14)
            }
            if locations[selectedLocation] then
                humanoidRootPart.CFrame = CFrame.new(locations[selectedLocation])
            else
                print("Local não encontrado!")
            end
        else
            print("Personagem não encontrado!")
        end
    end
})

-- para baixo tab troll para cima tab teleports

---------------------------------------------------------------------------------------------------------------------------------
                                          -- === Tab 10: troll === --
---------------------------------------------------------------------------------------------------------------------------------

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local selectedPlayer = nil
local isFollowing = false
local originalPosition = nil -- Armazena a posição inicial

-- Função para pegar os nomes dos jogadores
local function getPlayerNames()
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
    return playerNames
end

-- Função para atualizar o dropdown
local function updateDropdown(dropdown)
    dropdown:Refresh(getPlayerNames())
end

-- Dropdown para selecionar jogador
local DropdownTeleport = Tab10:Dropdown({
    Title = "Selecionar Jogador",
    Desc = "Escolha um jogador para seguir",
    Value = "",
    Multi = false,
    AllowNone = true,
    Values = getPlayerNames(),
    Callback = function(selectedPlayerName)
        selectedPlayer = Players:FindFirstChild(selectedPlayerName)
        print("Jogador selecionado: " .. selectedPlayerName)
    end
})

updateDropdown(DropdownTeleport)

-- Botão para iniciar o movimento de seguir o jogador
local ButtonFollow = Tab10:Button({
    Title = "Começar a Seguir",
    Desc = "Clique para começar a seguir o jogador",
    Callback = function()
        if selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
            isFollowing = true
            originalPosition = LocalPlayer.Character.HumanoidRootPart.Position -- Salva posição inicial
            print("Seguindo " .. selectedPlayer.Name)
        end
    end
})

-- Botão para parar o movimento
local ButtonStop = Tab10:Button({
    Title = "Parar",
    Desc = "Clique para interromper o movimento",
    Callback = function()
        isFollowing = false
        print("Parado")
    end
})

-- Função para seguir e girar **absurdamente rápido** (incluindo backflips)
RunService.RenderStepped:Connect(function()
    if isFollowing and selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetPosition = selectedPlayer.Character.HumanoidRootPart.Position
        LocalPlayer.Character:SetPrimaryPartCFrame(
            CFrame.new(targetPosition) 
            * CFrame.Angles(math.rad(workspace.DistributedGameTime * 2000), math.rad(workspace.DistributedGameTime * 3000), math.rad(workspace.DistributedGameTime * 4000))
        ) -- Giro extremamente rápido (Backflips incluídos)
    end
end)

-- Detecta quando o jogador selecionado se senta e executa ações
RunService.Heartbeat:Connect(function()
    if isFollowing and selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("Humanoid") then
        if selectedPlayer.Character.Humanoid.Sit then
            -- Teleportar o jogador local para o Void
            LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(0, -500, 0))

            -- Remover todos os itens do inventário
            for _, item in pairs(LocalPlayer.Backpack:GetChildren()) do
                item:Destroy()
            end
            print("Jogador sentado! Teleportando para o Void...")

            -- Voltar para a posição original
            wait(2) -- Pequena pausa antes de voltar
            LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(originalPosition))
            print("Voltando para a posição original")
        end
    end
end)

-- Atualiza Dropdown quando novos jogadores entram ou saem
Players.PlayerAdded:Connect(function() updateDropdown(DropdownTeleport) end)
Players.PlayerRemoving:Connect(function() updateDropdown(DropdownTeleport) end)

-------------------------------------------------------------------------------------------------------------------------------------------


local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer
local selectedPlayer = nil
local isFollowing = false
local originalPosition = nil -- Para armazenar a posição antes de começar a seguir

-- Função para pegar os nomes dos jogadores
local function getPlayerNames()
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
    return playerNames
end

-- Função para atualizar o dropdown
local function updateDropdown(dropdown)
    dropdown:Refresh(getPlayerNames())
end

-- Dropdown para selecionar jogador
local DropdownTeleport = Tab10:Dropdown({
    Title = "Selecionar Jogador",
    Desc = "Escolha um jogador para seguir",
    Value = "",
    Multi = false,
    AllowNone = true,
    Values = getPlayerNames(),
    Callback = function(selectedPlayerName)
        selectedPlayer = Players:FindFirstChild(selectedPlayerName)
        print("Jogador selecionado: " .. selectedPlayerName)
    end
})

updateDropdown(DropdownTeleport)

-- Botão para iniciar o movimento de seguir o jogador
local ButtonFollow = Tab10:Button({
    Title = "Começar a Seguir",
    Desc = "Clique para começar a seguir o jogador",
    Callback = function()
        if selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
            isFollowing = true
            originalPosition = LocalPlayer.Character.HumanoidRootPart.Position -- Salva posição inicial
            print("Seguindo " .. selectedPlayer.Name)
        end
    end
})

-- Botão para parar o movimento manualmente
local ButtonStop = Tab10:Button({
    Title = "Parar",
    Desc = "Clique para interromper o movimento",
    Callback = function()
        isFollowing = false
        print("Parado")
    end
})

-- Função para seguir e girar rapidamente ao redor do jogador selecionado
RunService.RenderStepped:Connect(function()
    if isFollowing and selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetPosition = selectedPlayer.Character.HumanoidRootPart.Position
        LocalPlayer.Character:SetPrimaryPartCFrame(
            CFrame.new(targetPosition) 
            * CFrame.Angles(math.rad(workspace.DistributedGameTime * 3000), math.rad(workspace.DistributedGameTime * 5000), math.rad(workspace.DistributedGameTime * 7000))
        ) -- Giro rápido enquanto segue
    end
end)

-- Detecta quando o jogador selecionado se senta e interrompe tudo
RunService.Heartbeat:Connect(function()
    if isFollowing and selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("Humanoid") then
        if selectedPlayer.Character.Humanoid.Sit then
            print("Jogador sentado! Teleportando de volta à posição inicial...")

            -- Teleportar o jogador local para a posição original antes de começar a seguir
            LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(originalPosition))

            -- Parar de girar e seguir
            isFollowing = false

            -- Remover todos os itens do inventário
            for _, item in pairs(LocalPlayer.Backpack:GetChildren()) do
                item:Destroy()
            end
            
            print("Movimento interrompido e inventário esvaziado!")
        end
    end
end)

-- Atualiza Dropdown quando novos jogadores entram ou saem
Players.PlayerAdded:Connect(function() updateDropdown(DropdownTeleport) end)
Players.PlayerRemoving:Connect(function() updateDropdown(DropdownTeleport) end)

-------------------------------------------------------------------------------------------------------------------------------------------


local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

local selectedPlayer = nil
local isFlinging = false
local boatModel = nil -- Variável para armazenar o barco

-- Função para pegar os nomes dos jogadores
local function getPlayerNames()
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            table.insert(playerNames, player.Name)
        end
    end
    return playerNames
end

-- Função para atualizar o dropdown
local function updateDropdown(dropdown)
    dropdown:Refresh(getPlayerNames())
end

-- Dropdown para selecionar o jogador alvo
local DropdownPlayer = Tab10:Dropdown({
    Title = "Selecionar Jogador",
    Desc = "Escolha quem será flungado",
    Value = "",
    Multi = false,
    AllowNone = true,
    Values = getPlayerNames(),
    Callback = function(selectedPlayerName)
        selectedPlayer = Players:FindFirstChild(selectedPlayerName)
        print("Jogador selecionado: " .. selectedPlayerName)
    end
})

updateDropdown(DropdownPlayer)

-- Botão para iniciar o fling
local ButtonFling = Tab10:Button({
    Title = "Iniciar Fling",
    Desc = "Clique para iniciar o fling com o barco",
    Callback = function()
        if selectedPlayer then
            isFlinging = true

            -- Teleporta o jogador local para a posição inicial
            LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(-1609.82, -3.97, 6.39))
            print("Teleportado para a posição inicial.")

            -- Espera **1 segundo** antes de spawnar o barco
            wait(1)

            -- Executa o comando para obter o barco
            local args = {
                [1] = "PickingBoat",
                [2] = "MilitaryBoatFree"
            }
            ReplicatedStorage:WaitForChild("RE"):WaitForChild("1Ca1r"):FireServer(unpack(args))
            print("Comando para obter o barco executado.")

            -- Espera **1 segundo** antes de teleportar para o assento do motorista
            wait(1)

            -- Localizar e teleportar para o assento do motorista
            boatModel = Workspace:FindFirstChild("MilitaryBoatFree") -- Substitua pelo nome correto do barco
            if boatModel and boatModel:FindFirstChild("VehicleSeat") then
                local vehicleSeat = boatModel:FindFirstChild("VehicleSeat")
                LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(-1611.96, 5.59, -13.41))
                print("Teleportado para o assento do motorista!")
            else
                print("Barco ou assento do motorista não encontrado!")
                isFlinging = false
                return
            end

            -- Girar o barco e teleportar para o jogador selecionado
            RunService.RenderStepped:Connect(function()
                if isFlinging and selectedPlayer and selectedPlayer.Character and selectedPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    local targetPosition = selectedPlayer.Character.HumanoidRootPart.Position
                    if boatModel then
                        boatModel:SetPrimaryPartCFrame(
                            CFrame.new(targetPosition) * CFrame.Angles(
                                math.rad(workspace.DistributedGameTime * 12000), -- Rotação absurda no eixo X
                                math.rad(workspace.DistributedGameTime * 15000), -- Rotação absurda no eixo Y
                                math.rad(workspace.DistributedGameTime * 18000) -- Rotação absurda no eixo Z
                            )
                        )
                        boatModel.PrimaryPart.CanCollide = false -- Remove a colisão do barco
                        print("Barco girando e teleportando para o jogador alvo.")
                    end
                end
            end)
        end
    end
})

-- Botão para parar o fling
local ButtonStopFling = Tab10:Button({
    Title = "Parar Fling",
    Desc = "Interrompa o fling com o barco",
    Callback = function()
        isFlinging = false
        if boatModel then
            boatModel:SetPrimaryPartCFrame(CFrame.new(-1609.82, -3.97, 6.39)) -- Retorna o barco para a posição inicial
            print("Barco retornado à posição inicial.")
        end
        print("Fling interrompido.")
    end
})

-- Atualiza Dropdown quando jogadores entram ou saem
Players.PlayerAdded:Connect(function() updateDropdown(DropdownPlayer) end)
Players.PlayerRemoving:Connect(function() updateDropdown(DropdownPlayer) end)
