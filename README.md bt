-- Inicializa Rayfield UI
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
local Window = Rayfield:CreateWindow({
    Name = "Brookhaven Hub",
    LoadingTitle = "Carregando...",
    LoadingSubtitle = "Sistema de Teletransporte",
    ConfigurationSaving = {
        Enabled = false,
        FolderName = nil,
        FileName = "BrookhavenHub"
    },
    KeySystem = false
})

-- Cria uma aba para controle de veículos
local VehicleTab = Window:CreateTab("Veículos", nil)

local selectedCar = nil
local originalPosition = nil

-- Função para obter carros disponíveis
local function getPlayerCars()
    local carNames = {}
    local vehiclesFolder = Workspace:FindFirstChild("Vehicles")
    if vehiclesFolder then
        for _, vehicle in pairs(vehiclesFolder:GetChildren()) do
            if vehicle:IsA("Model") and vehicle:FindFirstChild("Owner") then
                table.insert(carNames, vehicle.Name)
            end
        end
    end
    return carNames
end

-- Função para buscar um carro pelo nome
local function getCarByName(name)
    local vehiclesFolder = Workspace:FindFirstChild("Vehicles")
    if vehiclesFolder then
        for _, vehicle in pairs(vehiclesFolder:GetChildren()) do
            if vehicle.Name == name then
                return vehicle
            end
        end
    end
    return nil
end

-- Teletransporta o carro até o jogador se o assento estiver vazio
local function teleportCarToPlayer(car)
    if car and car:FindFirstChild("Body") then
        local driverSeat = car.Body:FindFirstChild("VehicleSeat")
        if driverSeat and not driverSeat.Occupant then
            car:SetPrimaryPartCFrame(LocalPlayer.Character.HumanoidRootPart.CFrame + Vector3.new(0, 5, 0))
        end
    end
end

-- Teletransporta o jogador para o assento e depois para o void
local function teleportPlayerToDriverSeatAndVoid(car)
    if car and car:FindFirstChild("Body") then
        local driverSeat = car.Body:FindFirstChild("VehicleSeat")
        if driverSeat and not driverSeat.Occupant then
            originalPosition = LocalPlayer.Character.HumanoidRootPart.CFrame
            LocalPlayer.Character.HumanoidRootPart.CFrame = driverSeat.CFrame
            wait(0.5)
            LocalPlayer.Character.Humanoid:Sit(false)
            driverSeat:Sit(LocalPlayer.Character.Humanoid)

            wait(0.5)
            local voidPosition = Vector3.new(car.PrimaryPart.Position.X, -1000, car.PrimaryPart.Position.Z)
            car:SetPrimaryPartCFrame(CFrame.new(voidPosition))
            wait(0.2)
            LocalPlayer.Character.HumanoidRootPart.CFrame = originalPosition
        end
    end
end

-- Criação do dropdown para selecionar um carro
local DropdownCar = VehicleTab:CreateDropdown({
    Name = "Selecionar Carro",
    Options = getPlayerCars(),
    CurrentOption = "Nenhum",
    Flag = "DropdownCar",
    Callback = function(option)
        selectedCar = getCarByName(option)
        print("Carro selecionado: " .. option)
    end
})

-- Botão para teleportar o carro até o jogador
VehicleTab:CreateButton({
    Name = "Teletransportar Carro",
    Info = "Verifica se o assento do motorista está vazio e teleporta até você",
    Callback = function()
        if selectedCar then
            teleportCarToPlayer(selectedCar)
        else
            Rayfield:Notify({
                Title = "Erro",
                Content = "Nenhum carro selecionado!",
                Duration = 5
            })
        end
    end
})

-- Botão para teleportar o jogador para o assento do motorista e depois para o void
VehicleTab:CreateButton({
    Name = "Teletransportar ao Assento e Void",
    Info = "Leva você ao assento e depois transporta o veículo para o void",
    Callback = function()
        if selectedCar then
            teleportPlayerToDriverSeatAndVoid(selectedCar)
        else
            Rayfield:Notify({
                Title = "Erro",
                Content = "Nenhum carro selecionado!",
                Duration = 5
            })
        end
    end
})

-- Função para atualizar o dropdown conforme os carros mudam
local function updateDropdown()
    local newOptions = getPlayerCars()
    DropdownCar:Refresh(newOptions, true)
end

-- Atualiza a lista de carros dinamicamente
Players.PlayerAdded:Connect(function() updateDropdown() end)
Players.PlayerRemoving:Connect(function() updateDropdown() end)
