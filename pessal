local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

local selectedPlayerName = ""

local function getPlayerNames()
    local playerNames = {}
    for _, player in pairs(Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
    return playerNames
end

local Dropdown = Tab:Dropdown({
    Title = "selecionar jogador",
    Desc = "Dropdown Desc",
    Value = "",
    Multi = false,
    AllowNone = true,
    Values = getPlayerNames(),
    Callback = function(Tab)
        selectedPlayerName = Tab
        print("Jogador selecionado: " .. selectedPlayerName)
    end
})

-- Atualiza a lista de jogadores quando um novo jogador entra ou sai do jogo
Players.PlayerAdded:Connect(function(player)
    Dropdown:Refresh(getPlayerNames())
end)

Players.PlayerRemoving:Connect(function(player)
    Dropdown:Refresh(getPlayerNames())
end)

local Button = Tab:Button({
    Title = "Iniciar Teletransporte",
    Desc = "Clique para iniciar o teletransporte",
    Callback = function()
        startTracking()
    end,
})

Button:SetTitle("Iniciar Teletransporte")
Button:SetDesc("Clique para iniciar o teletransporte")

local trackingConnection

function startTracking()
    -- Função para encontrar o carro do jogador
    local function getPlayerCar(player)
        local vehiclesFolder = Workspace:FindFirstChild("Vehicles")
        if vehiclesFolder then
            for _, vehicle in pairs(vehiclesFolder:GetChildren()) do
                if vehicle:IsA("Model") and vehicle:FindFirstChild("Owner") then
                    local owner = vehicle:FindFirstChild("Owner").Value
                    if owner == player.Name then
                        return vehicle
                    end
                end
            end
        end
        return nil
    end

    -- Função para encontrar um jogador pelo nome
    local function findPlayerByName(name)
        for _, player in pairs(Players:GetPlayers()) do
            if player.Name:lower():find(name:lower()) then
                return player
            end
        end
        return nil
    end

    -- Função para teleportar e girar o carro do jogador
    local function teleportAndSpinCar(car, targetPosition)
        -- Move o carro para a nova posição
        car:SetPrimaryPartCFrame(CFrame.new(targetPosition))
        
        -- Gira o carro de forma mais rápida e sem colisões
        car.PrimaryPart.CanCollide = false
        local spin = true
        trackingConnection = game:GetService("RunService").Stepped:Connect(function()
            if not spin then
                trackingConnection:Disconnect()
                return
            end
            car:SetPrimaryPartCFrame(car:GetPrimaryPartCFrame() * CFrame.Angles(0, math.rad(20), 0))
        end)
        
        -- Detecta quando o jogador entra no carro e para de girar
        car.ChildAdded:Connect(function(child)
            if child:IsA("Seat") and child.Occupant then
                spin = false
                -- Teleporta o carro para baixo quando o jogador entrar
                car:SetPrimaryPartCFrame(CFrame.new(0, -1000, 0)) -- Muda a posição conforme necessário
                stopTracking()
            end
        end)
    end

    -- Função para executar o teletransporte do carro do jogador
    local function teleportPlayerCar(playerName)
        local player = findPlayerByName(playerName)
        if not player then
            warn("Jogador não encontrado: " .. playerName)
            return
        end

        local car = getPlayerCar(Players.LocalPlayer)
        if not car then
            warn("Nenhum carro encontrado para o jogador " .. Players.LocalPlayer.Name)
            return
        end

        -- Define o PrimaryPart do carro, se necessário
        if not car.PrimaryPart then
            local body = car:FindFirstChild("Body")
            if body then
                car.PrimaryPart = body
            else
                warn("O carro não tem um PrimaryPart válido!")
                return
            end
        end

        local targetPosition = player.Character and player.Character:FindFirstChild("HumanoidRootPart") and player.Character.HumanoidRootPart.Position + Vector3.new(0, 5, 0)

        if targetPosition then
            teleportAndSpinCar(car, targetPosition)
        else
            warn("Nenhuma posição válida encontrada para teletransporte.")
        end
    end

    -- Teste o teletransporte chamando a função com o jogador selecionado no dropdown
    if selectedPlayerName ~= "" then
        teleportPlayerCar(selectedPlayerName)
    end
end

function stopTracking()
    if trackingConnection then
        trackingConnection:Disconnect()
        trackingConnection = nil
    end
    print("Parando o rastreamento e teletransporte.")
end

-- Atualiza a lista de jogadores quando o script é iniciado
Dropdown:Refresh(getPlayerNames())
