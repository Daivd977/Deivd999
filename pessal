-- brookhaven script teste funcionando beta
--mais esse beta ta dificel
--omgd

local WindUI = loadstring(game:HttpGet("https://tree-hub.vercel.app/api/UI/WindUI"))()

local Version = "1.4.0"
local WindUI = loadstring(game:HttpGet("https://tree-hub.vercel.app/api/UI/WindUI/" .. Version))()

-- ubatuba
local Window = WindUI:CreateWindow({
    Title = "Lolyta hub", -- UI Title
    Icon = "door-open", -- Url or rbxassetid or lucide
    Author = "Lolycon666", -- Author & Creator
    Folder = "Lolyta hub v.1.0", -- Folder name for saving data (And key)
    Size = UDim2.fromOffset(580, 460), -- UI Size
    KeySystem = { -- Creates key system
        Key = "1234", -- key
        Note = "The Key is 1234", -- Note
        URL = "https://github.com/Footagesus/WindUI", -- URL To get key (example: Discord)
        SaveKey = true, -- Saves the key in the folder specified above
    }, 
    Transparent = true,-- UI Transparency
    Theme = "Dark", -- UI Theme
    SideBarWidth = 200, -- UI Sidebar Width (number)
    HasOutline = false, -- Adds Oultines to the window
})

Window:EditOpenButton({
    Title = "Lolyta",
    Icon = "car",  -- New icon
    CornerRadius = UDim.new(0,10),
    StrokeThickness = 3,
    Color = ColorSequence.new(
        Color3.fromHex("FF0F7B"), 
        Color3.fromHex("F89B29")
    )
})


local Tab1 = Window:Tab({
    Title = "Main",
    Icon = "house", -- lucide or rbxassetid
})

local Tab2 = Window:Tab({
    Title = "troll musica",
    Icon = "music", -- lucide or rbxassetid
})

local Tab3 = Window:Tab({
    Title = "scripts",
    Icon = "face", -- lucide or rbxassetid
})

local Tab4 = Window:Tab({
    Title = "playes",
    Icon = "player", -- lucide or rbxassetid
})

local Button = Tab1:Button({
    Title = "pegar sofá",
    Desc = "brookhaven",
    Callback = function()
        local args = {
    [1] = "PickingTools",
    [2] = "Couch"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))
            
    end,
})

local Button = Tab1:Button({
    Title = "TP ALL",
    Desc = "telebporte para todos os players",
    Callback = function()
        local startingPosition = game.Players.LocalPlayer.Character:GetPrimaryPartCFrame()
        local players = game.Players:GetPlayers()
        for i, player in ipairs(players) do
            if player ~= game.Players.LocalPlayer then
                game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(player.Character:GetPrimaryPartCFrame())
                wait(1)
            end
        end
        game.Players.LocalPlayer.Character:SetPrimaryPartCFrame(startingPosition)
    end,
})

local Toggle = Tab1:Toggle({
    Title = "ESP",
    Desc = "para visualizar jogadores",
    Value = false,
    Callback = function(state)
        local Players = game:GetService("Players")
        local RunService = game:GetService("RunService")
        local LocalPlayer = Players.LocalPlayer

        -- Função para calcular a idade da conta em dias
        local function getAccountAge(player)
            return player.AccountAge -- Retorna o número de dias desde a criação da conta
        end

        -- Função para criar ESP para cada jogador
        local function createESP(player)
            if player == LocalPlayer then return end -- Ignorar o próprio jogador
            local character = player.Character or player.CharacterAdded:Wait()
            local head = character:WaitForChild("Head")
            
            -- Criar BillboardGui para mostrar informações
            local billboard = Instance.new("BillboardGui", head)
            billboard.Adornee = head
            billboard.Size = UDim2.new(0, 200, 0, 50)
            billboard.StudsOffset = Vector3.new(0, 3, 0)
            billboard.AlwaysOnTop = true

            -- Criar Label para exibir o texto
            local textLabel = Instance.new("TextLabel", billboard)
            textLabel.Size = UDim2.new(1, 0, 1, 0)
            textLabel.BackgroundTransparency = 1
            textLabel.TextColor3 = Color3.new(1, 1, 1)
            textLabel.TextStrokeTransparency = 0.5
            textLabel.Font = Enum.Font.SourceSansBold
            textLabel.TextSize = 14

            -- Atualizar texto com o nome do jogador e a idade da conta (em dias)
            local accountAge = getAccountAge(player)
            textLabel.Text = player.Name .. " | " .. accountAge .. " dias"
        end

        -- Aplicar ESP a todos os jogadores atuais
        if state then
            for _, player in pairs(Players:GetPlayers()) do
                createESP(player)
            end


            -- Adicionar ESP para novos jogadores que entrarem
            Players.PlayerAdded:Connect(function(player)
                player.CharacterAdded:Connect(function()
                    createESP(player)
                end)
            end)
        else
            -- Remover ESP de todos os jogadores
            for _, player in pairs(Players:GetPlayers()) do
                if player.Character and player.Character:FindFirstChild("Head") then
                    local billboard = player.Character.Head:FindFirstChild("BillboardGui")
                    if billboard then
                        billboard:Destroy()
                    end
                end
            end

            -- Desconectar os eventos de PlayerAdded e CharacterAdded
            Players.PlayerAdded:Disconnect()
            for _, player in pairs(Players:GetPlayers()) do
                player.CharacterAdded:Disconnect()
            end
        end
    end,
})


local Dropdown = Tab1:Dropdown({
    Title = "Permissions",
    Desc = "Permission options",
    Value = "Option 1",
    Multi = false,
    AllowNone = true,
    Values = {
        "Option 1", "Option 2", "Option 3", "Option 4", "Option 5", "Option 6", "Option 7", "Option 8", "Option 9", "Option 10", "Option 11", "Option 12", "Option 13", "Option 14", "Option 15", "Option 16", "Option 17", "Option 18", "Option 19", "Option 20", "Option 21", "Option 22", "Option 23", "Option 24", "Option 25", "Option 26", "Option 27", "Option 28", "Option 29", "Option 30", "Option 31", "Option 32", "Option 33", "Option 34", "Option 35"
    },
    Callback = function(Tab)
        if Tab == "Option 1" then
           local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 1
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 2" then
           local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 2
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 3" then
           local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 3
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 4" then
           local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 4
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 5" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 5
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 6" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 6
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 7" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 7
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 8" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 8
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 9" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 9
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 10" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 10
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 11" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 11
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 12" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 12
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 13" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 13
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 14" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 14
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 15" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 15
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 16" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 16
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 17" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 17
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 18" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 18
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 19" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 19
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 20" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 20
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 21" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 21
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 22" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 22
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 23" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 23
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 24" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 24
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 25" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 25
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 26" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 26
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 27" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 27
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 28" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 28
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 29" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 29
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 30" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 30
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 31" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 31
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 32" then
           local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 32
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 33" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 33
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 34" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 34
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        elseif Tab == "Option 35" then
            local args = {
    [1] = "GivePermissionLoopToServer",
    [2] = game:GetService("Players").LocalPlayer,
    [3] = 35
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        end
    end
})

local Paragraph = Tab1:Paragraph({
    Title = "jogador",
    Desc = "",
})

local Slider = Tab1:Slider({
    Title = "super velocidade",
    Step = 1,
    Value = {
        Min = 1,
        Max = 300,
        Default = 70,
    },
    Callback = function(value)
        -- Define a velocidade do personagem com base no valor do slider
        local player = game.Players.LocalPlayer
        if player and player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.WalkSpeed = value
        end
    end
})

local Slider = Tab1:Slider({
    Title = "super pulo",
    Step = 1,
    Value = {
        Min = 1,
        Max = 300,
        Default = 70,
    },
    Callback = function(value)
        -- Define a altura do salto do personagem com base no valor do slider
        local player = game.Players.LocalPlayer
        if player and player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.JumpPower = value
        end
    end
})


--scripts tab2 abaixo acima somente scripts tab1
local Paragraph = Tab2:Paragraph({
    Title = "precisa da gamepass",
    Desc = "gamepass música",
})

local Paragraph = Tab2:Paragraph({
    Title = "so funciona em veículos do tip over board",
    Desc = "",
})

local Button = Tab2:Button({
    Title = "STOP",
    Desc = "stop music",
    Callback = function()
        local args = {
    [1] = "PickingScooterMusicText",
    [2] = ""
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1NoMoto1rVehicle1s"):FireServer(unpack(args))
    end,
})


local Button = Tab2:Button({
    Title = "telefone fnaf",
    Desc = "fnaf",
    Callback = function()
        local args = {
    [1] = "PickingScooterMusicText",
    [2] = "4835346587"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1NoMoto1rVehicle1s"):FireServer(unpack(args))
    end,
})

local Button = Tab2:Button({
    Title = "HELOU HAY AHAHAHA",
    Desc = "fnaf",
    Callback = function()
        local args = {
    [1] = "PickingScooterMusicText",
    [2] = "5608077885"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1NoMoto1rVehicle1s"):FireServer(unpack(args))
    end,
})

local Button = Tab2:Button({
    Title = "grito ohor",
    Desc = "fnaf",
    Callback = function()
        local args = {
    [1] = "PickingScooterMusicText",
    [2] = "268116333"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1NoMoto1rVehicle1s"):FireServer(unpack(args))
    end,
})


local Button = Tab2:Button({
    Title = "risado doida",
    Desc = "load meme",
    Callback = function()
        local args = {
    [1] = "PickingScooterMusicText",
    [2] = "7752143456"
}

game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1NoMoto1rVehicle1s"):FireServer(unpack(args))
    end,
})




--scripts tab3 abaixo acima somente scripts tab2

local Button = Tab3:Button({
    Title = "buraco negro",
    Desc = "universal",
    Callback = function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/Bac0nHck/Scripts/main/BringFlingPlayers"))("More Scripts: t.me/arceusxscripts")
    end,
})

local Button = Tab3:Button({
    Title = "sistem broochk",
    Desc = "universal",
    Callback = function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/H20CalibreYT/SystemBroken/main/script"))()
    end,
})

local Button = Tab3:Button({
    Title = "roships",
    Desc = "universal",
    Callback = function()
    loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-rochips-universal-18294"))()
    end,
})

local Button = Tab3:Button({
    Title = "sander x",
    Desc = "somente para brookhaven",
    Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/kigredns/SanderXV4.2.2/refs/heads/main/New.lua'))() 
    end,
})

local Button = Tab3:Button({
    Title = "reverso",
    Desc = "universal",
    Callback = function()
    loadstring(game:HttpGet("https://raw.githubusercontent.com/0Ben1/fe./main/L"))()
    end,
})

local Button = Tab3:Button({
    Title = "RD4",
    Desc = "somente para brookhaven",
    Callback = function()
    loadstring(game:HttpGet('https://raw.githubusercontent.com/M1ZZ001/BrookhavenR4D/main/Brookhaven%20R4D%20Script'))()
    end,
})

--scripts tab4 abaixo acima somente scripts tab3


-- Função para atualizar o dropdown com a lista de jogadores
local function updateDropdown(dropdown)
    local players = game.Players:GetPlayers()
    local playerNames = {}
    for _, player in ipairs(players) do
        table.insert(playerNames, player.Name)
    end

    dropdown:Refresh(playerNames)
end

-- Função para teletransportar para o jogador
local function teleportToPlayer(playerName)
    local player = game.Players.LocalPlayer
    local targetPlayer = game.Players:FindFirstChild(playerName)
    
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        local targetPos = targetPlayer.Character.HumanoidRootPart.Position
        player.Character:SetPrimaryPartCFrame(CFrame.new(targetPos))
        print("Teletransportado para o jogador: " .. playerName)
    else
        print("Jogador não encontrado.")
    end
end

-- Cria o dropdown para selecionar o jogador
local Dropdown = Tab4:Dropdown({
    Title = "Selecionar Jogador",
    Desc = "Selecione o jogador para teletransportar",
    Value = "",
    Multi = false,
    AllowNone = true,
    Values = {},
    Callback = function(selectedPlayerName)
        print("Jogador selecionado: " .. selectedPlayerName)
    end
})

-- Atualiza o dropdown com a lista de jogadores ao iniciar
updateDropdown(Dropdown)

-- Atualiza o dropdown quando um jogador entra ou sai do jogo
game.Players.PlayerAdded:Connect(function()
    updateDropdown(Dropdown)
end)

game.Players.PlayerRemoving:Connect(function()
    updateDropdown(Dropdown)
end)

-- Cria o botão para teletransportar para o jogador
local Button = Tab4:Button({
    Title = "Teleportar para Jogador",
    Desc = "Clique para teletransportar para o jogador selecionado",
    Callback = function()
        local selectedPlayerName = Dropdown.Value
        teleportToPlayer(selectedPlayerName)
    end,
})


-- acima um script de teleportar para o jogadores

-- Função para atualizar o dropdown com a lista de jogadores
local function updateDropdown(dropdown)
    local players = game.Players:GetPlayers()
    local playerNames = {}
    for _, player in ipairs(players) do
        table.insert(playerNames, player.Name)
    end

    dropdown:Refresh(playerNames)
end

-- Função para espectar o jogador
local function spectatePlayer(playerName)
    local targetPlayer = game.Players:FindFirstChild(playerName)

    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") then
        workspace.CurrentCamera.CameraSubject = targetPlayer.Character.Humanoid
        print("Espectando jogador: " .. targetPlayer.Name)
    else
        print("Jogador não encontrado.")
    end
end

-- Função para parar de espectar o jogador e voltar à visão do jogador local
local function stopSpectating()
    local player = game.Players.LocalPlayer
    if player and player.Character and player.Character:FindFirstChild("Humanoid") then
        workspace.CurrentCamera.CameraSubject = player.Character.Humanoid
        print("Parando de espectar. Voltando à visão do jogador local.")
    end
end

-- Cria o dropdown para selecionar o jogador
local Dropdown = Tab4:Dropdown({
    Title = "Selecionar Jogador",
    Desc = "Selecione o jogador para espectar",
    Value = "",
    Multi = false,
    AllowNone = true,
    Values = {},
    Callback = function(selectedPlayerName)
        print("Jogador selecionado: " .. selectedPlayerName)
    end
})

-- Atualiza o dropdown com a lista de jogadores ao iniciar
updateDropdown(Dropdown)

-- Atualiza o dropdown quando um jogador entra ou sai do jogo
game.Players.PlayerAdded:Connect(function()
    updateDropdown(Dropdown)
end)

game.Players.PlayerRemoving:Connect(function()
    updateDropdown(Dropdown)
end)

-- Cria o toggle para espectar o jogador
local Toggle = Tab4:Toggle({
    Title = "Espectar Jogador",
    Desc = "Ativar/Desativar espectar o jogador selecionado",
    Value = false,
    Callback = function(state)
        local selectedPlayerName = Dropdown.Value
        if state then
            spectatePlayer(selectedPlayerName)
        else
            stopSpectating()
        end
    end,
})


---------------------------------------------------------------------------------------

-- Função para atualizar o dropdown com a lista de jogadores
local function updateDropdown(dropdown)
    local players = game.Players:GetPlayers()
    local playerNames = {}
    for _, player in ipairs(players) do
        table.insert(playerNames, player.Name)
    end

    dropdown:Refresh(playerNames)
end

-- Cria o dropdown para selecionar o jogador
local Dropdown = Tab4:Dropdown({
    Title = "Selecionar Jogador",
    Desc = "Selecione o jogador para seguir",
    Value = "",
    Multi = false,
    AllowNone = true,
    Values = {},
    Callback = function(selectedPlayerName)
        print("Jogador selecionado: " .. selectedPlayerName)
    end
})

-- Atualiza o dropdown com a lista de jogadores ao iniciar
updateDropdown(Dropdown)

-- Atualiza o dropdown quando um jogador entra ou sai do jogo
game.Players.PlayerAdded:Connect(function()
    updateDropdown(Dropdown)
end)

game.Players.PlayerRemoving:Connect(function()
    updateDropdown(Dropdown)
end)

-- Variável para armazenar a conexão de Heartbeat e a posição original
local heartbeatConnection
local originalPosition

-- Função para teletransportar para o jogador selecionado e girar rapidamente
local function teleportAndRotate(targetPlayer)
    local runService = game:GetService("RunService")
    local player = game.Players.LocalPlayer

    originalPosition = player.Character.HumanoidRootPart.Position

    heartbeatConnection = runService.Heartbeat:Connect(function()
        if player and player.Character and targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local targetPos = targetPlayer.Character.HumanoidRootPart.Position

            -- Ajuste para ficar um pouco à frente do jogador quando ele estiver andando
            if targetPlayer.Character.Humanoid.MoveDirection.Magnitude > 0 then
                targetPos = targetPos + targetPlayer.Character.Humanoid.MoveDirection * 5
            end

            -- Teletransportar o jogador para perto e girar rapidamente para cima e para baixo
            local rotation = CFrame.Angles(math.sin(tick() * 10) * math.rad(360), 0, math.cos(tick() * 10) * math.rad(360))
            player.Character:SetPrimaryPartCFrame(CFrame.new(targetPos) * rotation)

            -- Seguir o jogador
            player.Character.HumanoidRootPart.CFrame = targetPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, 0, -3)
        end
    end)
end

-- Cria o botão para executar o script
local Button = Tab4:Button({
    Title = "pegar sofa",
    Desc = "",
    Callback = function()
        local args = {
            [1] = "PickingTools",
            [2] = "Couch"
        }

        game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))
        print("Ferramenta pegada.")
    end,
})

-- Cria o toggle para iniciar a ação de teleportar e girar rapidamente em torno do jogador
local Toggle = Tab4:Toggle({
    Title = "Teleportar e Seguir",
    Desc = "Ativar/Desativar teleporte e seguir o jogador selecionado",
    Value = false,
    Callback = function(state)
        local targetPlayerName = Dropdown.Value
        local targetPlayer = game.Players:FindFirstChild(targetPlayerName)
        if targetPlayer then
            if state then
                teleportAndRotate(targetPlayer)
                print("Seguindo jogador: " .. targetPlayerName)
            else
                if heartbeatConnection then
                    heartbeatConnection:Disconnect()
                    if originalPosition then
                        local player = game.Players.LocalPlayer
                        if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                            player.Character:SetPrimaryPartCFrame(CFrame.new(originalPosition))
                        end
                    end
                    print("Parando de seguir o jogador.")
                end
            end
        else
            print("Jogador não selecionado ou não encontrado.")
        end
    end,
})




--------------------------------------------------------------------------------------

local Players = game:GetService("Players")

-- Função para teletransportar o jogador
local function teleportToPlayer(player, targetPlayerName)
    local targetPlayer = Players:FindFirstChild(targetPlayerName)
    
    if targetPlayer then
        local character = player.Character
        local targetCharacter = targetPlayer.Character
        
        if character and targetCharacter then
            local targetPosition = targetCharacter.PrimaryPart.CFrame
            local seat = character:FindFirstChildWhichIsA("Seat")

            if seat and seat.Occupant == player.Character.Humanoid then
                local seatCFrame = seat.CFrame
                character:SetPrimaryPartCFrame(targetPosition)
                seat.CFrame = seatCFrame
                seat:Sit(seat.Occupant)
            else
                character:SetPrimaryPartCFrame(targetPosition)
            end
        end
    end
end

-- Função para atualizar a lista de jogadores no dropdown
local function updatePlayerList(dropdown)
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= Players.LocalPlayer then
            table.insert(playerNames, player.Name)
        end
    end
    dropdown:Refresh(playerNames)
end

-- Configuração do Dropdown e Botões
local Tab = ... -- Certifique-se de que isto aponta para o seu Tab

local Dropdown = Tab4:Dropdown({
    Title = "Select99 Player",
    Desc = "Select a player to teleport to",
    Value = "",
    Multi = false,
    AllowNone = true,
    Values = {},
    Callback = function(selectedPlayer)
        print("Selected Player: " .. selectedPlayer)
    end
})

local TeleportButton = Tab4:Button({
    Title = "Teleport",
    Desc = "Teleport to the selected player",
    Callback = function()
        local selectedPlayer = Dropdown:GetValue()
        if selectedPlayer then
            teleportToPlayer(Players.LocalPlayer, selectedPlayer)
        end
    end,
})

local UpdateButton = Tab4:Button({
    Title = "Update Player List",
    Desc = "Refresh the list of players",
    Callback = function()
        updatePlayerList(Dropdown)
    end,
})

TeleportButton:SetDesc("Click to teleport to the selected player")
UpdateButton:SetDesc("Click to refresh the list of players")

-- Atualizar lista de jogadores inicialmente
updatePlayerList(Dropdown)
