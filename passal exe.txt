-- brookhaven script teste funcionando beta
-- brookhaven script teste funcionando beta
-- brookhaven script teste funcionando beta
-- brookhaven script teste funcionando beta
-- brookhaven script teste funcionando beta
-- brookhaven script teste funcionando beta
-- brookhaven script teste funcionando beta
-- brookhaven script teste funcionando beta
-- brookhaven script teste funcionando beta
-- brookhaven script teste funcionando beta
-- brookhaven script teste funcionando beta
-- brookhaven script teste funcionando beta
-- brookhaven script teste funcionando beta
-- brookhaven script teste funcionando beta
-- brookhaven script teste funcionando beta
-- brookhaven script teste funcionando beta
-- brookhaven script teste funcionando beta
-- brookhaven script teste funcionando beta
-- brookhaven script teste funcionando beta

local WindUI = loadstring(game:HttpGet("https://tree-hub.vercel.app/api/UI/WindUI"))()

local Version = "1.4.0"
local WindUI = loadstring(game:HttpGet("https://tree-hub.vercel.app/api/UI/WindUI/" .. Version))()

-- ubatuba
local Window = WindUI:CreateWindow({
    Title = "Lolyta Hub teste 01", -- UI Title
    Icon = "door-open", -- Url or rbxassetid or lucide
    Author = "Lolycon666", -- Author & Creator
    Folder = "Lolyta hub v.1.0", -- Folder name for saving data (And key)
    Size = UDim2.fromOffset(580, 460), -- UI Size
    KeySystem = { -- Creates key system
        Key = "", -- key
        Note = "pode nao man", -- Note
        URL = "https://github.com/Footagesus/WindUI", -- URL To get key (example: Discord)
        SaveKey = true, -- Saves the key in the folder specified above
    }, 
    Transparent = true,-- UI Transparency
    Theme = "Dark", -- UI Theme
    SideBarWidth = 200, -- UI Sidebar Width (number)
    HasOutline = false, -- Adds Oultines to the window
})

Window:EditOpenButton({
    Title = "Lolyta",
    Icon = "car",  -- New icon
    CornerRadius = UDim.new(0,10),
    StrokeThickness = 3,
    Color = ColorSequence.new(
        Color3.fromHex("FF0F7B"), 
        Color3.fromHex("F89B29")
    )
})


local Tab1 = Window:Tab({
    Title = "teste",
    Icon = "house", -- lucide or rbxassetid
})




-- Assumindo que 'Tab' já está definido na sua UI Library
local localPlayer = game.Players.LocalPlayer
local ball = game.Workspace:WaitForChild("SoccerBall") -- A bola vista no Explorer
local isFollowing = false
local selectedPlayerName = nil

-- Função para obter a lista de jogadores (excluindo o jogador local)
local function getPlayerNames()
    local players = game.Players:GetPlayers()
    local playerNames = {}
    for _, player in ipairs(players) do
        if player ~= localPlayer then
            table.insert(playerNames, player.Name)
        end
    end
    return playerNames
end

-- Criar o Dropdown para selecionar jogadores
local playerNames = getPlayerNames()

local Dropdown = Tab1:Dropdown({
    Title = "Select Player",
    Desc = "Choose a player for the ball to follow",
    Value = playerNames[1] or "None",
    Multi = false,
    AllowNone = true,
    Values = playerNames,
    Callback = function(selected)
        selectedPlayerName = selected
    end
})

-- Função para iniciar o seguimento da bola
local function startFollowing()
    if not selectedPlayerName or selectedPlayerName == "None" then
        return
    end
    isFollowing = true
    ball.Anchored = true
    coroutine.wrap(function()
        while isFollowing do
            local player = game.Players:FindFirstChild(selectedPlayerName)
            if player and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                -- Posiciona a bola na altura do HumanoidRootPart (aproximadamente a barriga)
                ball.CFrame = player.Character.HumanoidRootPart.CFrame
            else
                break -- Para se o jogador sair do jogo
            end
            wait()
        end
        ball.Anchored = false -- Desancora a bola quando parar
    end)()
end

-- Função para parar o seguimento
local function stopFollowing()
    isFollowing = false
end

-- Criar o Toggle para ativar/desativar o seguimento
local Toggle = Tab1:Toggle({
    Title = "Follow Player",
    Desc = "Toggle to start/stop following",
    Icon = "check",
    Value = false,
    Callback = function(state)
        if state then
            startFollowing()
        else
            stopFollowing()
        end
    end,
})

-- Opcional: Atualizar o dropdown dinamicamente quando jogadores entram/saem
game.Players.PlayerAdded:Connect(function()
    local newPlayerNames = getPlayerNames()
    Dropdown:Refresh(newPlayerNames)
    if not table.find(newPlayerNames, selectedPlayerName) then
        selectedPlayerName = nil
        Dropdown:Select("None")
    end
end)

game.Players.PlayerRemoving:Connect(function(player)
    local newPlayerNames = getPlayerNames()
    Dropdown:Refresh(newPlayerNames)
    if player.Name == selectedPlayerName then
        selectedPlayerName = nil
        Dropdown:Select("None")
        stopFollowing()
    end
end)
