-- Serviços do Roblox
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local CoreGui = game:GetService("CoreGui")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- Função para gerar nomes aleatórios para evitar conflitos
local function randomString()
    local length = math.random(10, 20)
    local array = {}
    for i = 1, length do
        array[i] = string.char(math.random(32, 126))
    end
    return table.concat(array)
end

-- Criar a UI
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = randomString()
ScreenGui.Parent = CoreGui
ScreenGui.IgnoreGuiInset = true

local Frame = Instance.new("Frame")
Frame.Size = UDim2.new(0, 200, 0, 150)
Frame.Position = UDim2.new(0.5, -100, 0.5, -75)
Frame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Frame.BorderSizePixel = 0
Frame.Parent = ScreenGui
Frame.Active = true
Frame.Draggable = true -- Torna a UI arrastável

-- Título
local Title = Instance.new("TextLabel")
Title.Size = UDim2.new(1, 0, 0, 30)
Title.Position = UDim2.new(0, 0, 0, 0)
Title.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Title.Text = "Cabeça Grande"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.SourceSansBold
Title.TextSize = 18
Title.Parent = Frame

-- Botão de fechar (X)
local CloseButton = Instance.new("TextButton")
CloseButton.Size = UDim2.new(0, 30, 0, 30)
CloseButton.Position = UDim2.new(1, -30, 0, 0)
CloseButton.BackgroundColor3 = Color3.fromRGB(200, 50, 50)
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Font = Enum.Font.SourceSansBold
CloseButton.TextSize = 18
CloseButton.Parent = Frame

-- Campo de texto para tamanho da cabeça
local HeadSizeInput = Instance.new("TextBox")
HeadSizeInput.Size = UDim2.new(0, 180, 0, 30)
HeadSizeInput.Position = UDim2.new(0, 10, 0, 40)
HeadSizeInput.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
HeadSizeInput.Text = "5" -- Tamanho padrão
HeadSizeInput.TextColor3 = Color3.fromRGB(255, 255, 255)
HeadSizeInput.Font = Enum.Font.SourceSans
HeadSizeInput.TextSize = 16
HeadSizeInput.PlaceholderText = "Tamanho da cabeça"
HeadSizeInput.Parent = Frame

-- Toggle para ativar/desativar o efeito
local ToggleButton = Instance.new("TextButton")
ToggleButton.Size = UDim2.new(0, 180, 0, 30)
ToggleButton.Position = UDim2.new(0, 10, 0, 80)
ToggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
ToggleButton.Text = "Cabeça Grande: OFF"
ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
ToggleButton.Font = Enum.Font.SourceSans
ToggleButton.TextSize = 16
ToggleButton.Parent = Frame

-- Variáveis de controle
local isHeadSizeEnabled = false
local originalHeadSizes = {} -- Armazena tamanhos originais das cabeças
local headSize = 5 -- Tamanho padrão da cabeça
local connections = {} -- Armazena conexões de eventos

-- Função para aplicar tamanho da cabeça
local function applyHeadSize(player, size)
    if player == LocalPlayer then return end
    pcall(function()
        if player.Character and player.Character:FindFirstChild("Head") then
            local head = player.Character.Head
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                -- Salvar estado de movimento
                local walkSpeed = humanoid.WalkSpeed
                local jumpPower = humanoid.JumpPower
                -- Aplicar tamanho da cabeça
                if not originalHeadSizes[player] then
                    originalHeadSizes[player] = head.Size
                end
                head.Size = Vector3.new(size, size, size)
                humanoid.HeadScale = size
                -- Restaurar estado de movimento
                humanoid.WalkSpeed = walkSpeed
                humanoid.JumpPower = jumpPower
            end
        end
    end)
end

-- Função para restaurar tamanho da cabeça
local function restoreHeadSize(player)
    if player == LocalPlayer then return end
    pcall(function()
        if player.Character and player.Character:FindFirstChild("Head") and originalHeadSizes[player] then
            local head = player.Character.Head
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                head.Size = originalHeadSizes[player]
                humanoid.HeadScale = 1
            end
        end
    end)
end

-- Função para atualizar todos os jogadores
local function updateAllPlayers()
    pcall(function()
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                if isHeadSizeEnabled then
                    applyHeadSize(player, headSize)
                else
                    restoreHeadSize(player)
                end
            end
        end
    end)
end

-- Função para ativar/desativar o efeito de cabeça grande
local function toggleHeadSize()
    isHeadSizeEnabled = not isHeadSizeEnabled
    ToggleButton.Text = "Cabeça Grande: " .. (isHeadSizeEnabled and "ON" or "OFF")
    ToggleButton.BackgroundColor3 = isHeadSizeEnabled and Color3.fromRGB(50, 200, 50) or Color3.fromRGB(60, 60, 60)
    
    -- Limpar conexões anteriores
    for _, connection in ipairs(connections) do
        if connection then
            connection:Disconnect()
        end
    end
    connections = {}
    
    updateAllPlayers()
    
    if isHeadSizeEnabled then
        -- Iniciar loop de reaplicação
        table.insert(connections, RunService.Stepped:Connect(function()
            pcall(function()
                for _, player in ipairs(Players:GetPlayers()) do
                    if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
                        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                        if humanoid and humanoid.HeadScale ~= headSize then
                            applyHeadSize(player, headSize)
                        end
                    end
                end
            end)
        end))
        
        -- Aplicação inicial repetida
        for i = 1, 10 do
            spawn(function()
                wait(i * 0.5)
                updateAllPlayers()
            end)
        end
    end
end

-- Atualizar tamanho da cabeça quando o texto é inserido
HeadSizeInput.FocusLost:Connect(function(enterPressed)
    if enterPressed then
        local input = tonumber(HeadSizeInput.Text)
        if input and input > 0 then
            headSize = input
            if isHeadSizeEnabled then
                updateAllPlayers()
            end
        else
            HeadSizeInput.Text = tostring(headSize)
        end
    end
end)

-- Conectar o toggle
ToggleButton.MouseButton1Click:Connect(toggleHeadSize)

-- Aplicar o efeito quando novos jogadores entram
Players.PlayerAdded:Connect(function(player)
    if player ~= LocalPlayer then
        player.CharacterAdded:Connect(function()
            if isHeadSizeEnabled then
                wait(5) -- Atraso aumentado
                applyHeadSize(player, headSize)
            end
        end)
    end
end)

-- Monitorar jogadores existentes
for _, player in ipairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
        player.CharacterAdded:Connect(function()
            if isHeadSizeEnabled then
                wait(5) -- Atraso aumentado
                applyHeadSize(player, headSize)
            end
        end)
        if player.Character then
            applyHeadSize(player, headSize)
        end
    end
end

-- Fechar a UI e desativar efeitos
CloseButton.MouseButton1Click:Connect(function()
    if isHeadSizeEnabled then
        toggleHeadSize()
    end
    for _, connection in ipairs(connections) do
        if connection then
            connection:Disconnect()
        end
    end
    ScreenGui:Destroy()
end)

-- Função para causar dano ao acertar qualquer jogador
local function setupDamageOnHit()
    local mouse = LocalPlayer:GetMouse()

    table.insert(connections, mouse.Button1Down:Connect(function()
        local target = mouse.Target
        if target then
            local humanoid = target.Parent:FindFirstChildOfClass("Humanoid")
            if humanoid and humanoid.Parent ~= LocalPlayer.Character then
                humanoid:TakeDamage(10)
            end
        end
    end))

    local function onTouch(hit)
        local humanoid = hit.Parent:FindFirstChildOfClass("Humanoid")
        if humanoid and humanoid.Parent ~= LocalPlayer.Character then
            humanoid:TakeDamage(10)
        end
    end

    if LocalPlayer.Character then
        for _, part in ipairs(LocalPlayer.Character:GetChildren()) do
            if part:IsA("BasePart") then
                table.insert(connections, part.Touched:Connect(onTouch))
            end
        end
    end

    LocalPlayer.CharacterAdded:Connect(function(character)
        for _, part in ipairs(character:GetChildren()) do
            if part:IsA("BasePart") then
                table.insert(connections, part.Touched:Connect(onTouch))
            end
        end
    end)
end

-- Iniciar o sistema de dano
setupDamageOnHit()
