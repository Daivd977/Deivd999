-- brookhaven script teste funcionando beta

-- === Configurações Iniciais === --
local AllowedUsers = {
    "rtrt967",
    "Lolytateste666",-- Seu nome do Roblox    Tataizin_021
    "sasah_7x",   -- Outro usuário permitido
    "QUEROBOVO",
    "Tataizin_021",-- Adicione mais nomes aqui, por exemplo:
    -- "outro_usuario",
    -- "amigo123",
}

-- Serviços do Roblox
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

-- Verificação de permissão do jogador
local LocalPlayer = Players.LocalPlayer
local PlayerName = LocalPlayer.Name
local isAllowed = false

for _, user in pairs(AllowedUsers) do
    if user == PlayerName then
        isAllowed = true
        break
    end
end

if not isAllowed then
    game.StarterGui:SetCore("SendNotification", {
        Title = "Acesso Negado",
        Text = "Você não tem permissão para usar o Lolyta Hub 2.0. Contate o criador para ser adicionado à lista.",
        Duration = 5
    })
    return
end

-- Scripts a serem executados ao iniciar o hub
local argsBio = {
    [1] = "RolePlayBio",
    [2] = "scripter"
}
local successBio, errorBio = pcall(function()
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1RPNam1eTex1t"):FireServer(unpack(argsBio))
end)
if successBio then
    print("Bio definida como 'scripter' com sucesso!")
else
    warn("Erro ao definir a bio: " .. tostring(errorBio))
end

local argsName = {
    [1] = "RolePlayName",
    [2] = "Lolyta Hub "
}
local successName, errorName = pcall(function()
    game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1RPNam1eTex1t"):FireServer(unpack(argsName))
end)
if successName then
    print("Nome definido como 'Lolyta Hub ' com sucesso!")
else
    warn("Erro ao definir o nome: " .. tostring(errorName))
end
-----------------------------------------------------------------------------------------------------------------------------------
                                    -- === Inicialização da Interface === --
-----------------------------------------------------------------------------------------------------------------------------------

local WindUI = loadstring(game:HttpGet("https://tree-hub.vercel.app/api/UI/WindUI"))()
local Version = "1.4.0"
local WindUI = loadstring(game:HttpGet("https://tree-hub.vercel.app/api/UI/WindUI/" .. Version))()

local Window = WindUI:CreateWindow({
    Title = "Lolyta Hub 2.6",
    Icon = "door-open",
    Author = "Lolycon666",
    Folder = "Lolyta hub v.1.0",
    Size = UDim2.fromOffset(580, 460),
    KeySystem = {
        Key = "666",
        Note = "pode nao man",
        URL = "https://github.com/Footagesus/WindUI",
        SaveKey = true,
    },
    Transparent = true,
    Theme = "Dark",
    SideBarWidth = 200,
    HasOutline = false,
})

Window:EditOpenButton({
    Title = "Lolyta",
    Icon = "car",
    CornerRadius = UDim.new(0, 10),
    StrokeThickness = 3,
    Color = ColorSequence.new(Color3.fromHex("FF0F7B"), Color3.fromHex("F89B29"))
})


-- === Abas da Interface === --
local Tab1 = Window:Tab({ Title = "Main", Icon = "" })
local Tab2 = Window:Tab({ Title = "Casa", Icon = "house" })
local Tab3 = Window:Tab({ Title = "Carro", Icon = "car" })
local Tab4 = Window:Tab({ Title = "RGB Color", Icon = "palette" }) -- Nova aba RGB Color
local Tab5 = Window:Tab({ Title = "Troll Musica", Icon = "music" })
local Tab6 = Window:Tab({ Title = "Music All", Icon = "audio-lines" })
local Tab7 = Window:Tab({ Title = "Scripts", Icon = "layers" })
local Tab8 = Window:Tab({ Title = "Players", Icon = "user" })


-- === Funções Auxiliares === --
local function fireServer(eventPath, args)
    ReplicatedStorage:WaitForChild("RE"):WaitForChild(eventPath):FireServer(unpack(args))
end

local function invokeServer(eventPath, args)
    return ReplicatedStorage:WaitForChild("RE"):WaitForChild(eventPath):InvokeServer(unpack(args))
end

---------------------------------------------------------------------------------------------------------------------------------
                                                   -- === Tab 1: Main === --
---------------------------------------------------------------------------------------------------------------------------------

Tab1:Button({
    Title = "Ser desbanido do voice (so se acabou de ser banido)",
    Desc = "Universal",
    Callback = function()
        game:GetService("VoiceChatService"):joinVoice()
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab1:Button({
    Title = "Voltar tamanho normal (size 1)",
    Desc = "Brookhaven",
    Callback = function()
        fireServer("1Clothe1s", {"CharacterSizeUp", 1})
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab1:Button({
    Title = "Invisível (size 4)",
    Desc = "Brookhaven",
    Callback = function()
        fireServer("1Clothe1s", {"CharacterSizeDown", 4})
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab1:Button({
    Title = "Pegar sofá",
    Desc = "Brookhaven",
    Callback = function()
        invokeServer("1Too1l", {"PickingTools", "Couch"})
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------


Tab1:Button({
    Title = "TP ALL",
    Desc = "Teleporte para todos os players",
    Callback = function()
        local startingPosition = LocalPlayer.Character:GetPrimaryPartCFrame()
        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                LocalPlayer.Character:SetPrimaryPartCFrame(player.Character:GetPrimaryPartCFrame())
                wait(1)
            end
        end
        LocalPlayer.Character:SetPrimaryPartCFrame(startingPosition)
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------


Tab1:Toggle({
    Title = "ESP",
    Desc = "Para visualizar jogadores",
    Value = false,
    Callback = function(state)
        local function createESP(player)
            if player == LocalPlayer then return end
            local character = player.Character or player.CharacterAdded:Wait()
            local head = character:WaitForChild("Head")
            local billboard = Instance.new("BillboardGui", head)
            billboard.Adornee = head
            billboard.Size = UDim2.new(0, 200, 0, 50)
            billboard.StudsOffset = Vector3.new(0, 3, 0)
            billboard.AlwaysOnTop = true
            local textLabel = Instance.new("TextLabel", billboard)
            textLabel.Size = UDim2.new(1, 0, 1, 0)
            textLabel.BackgroundTransparency = 1
            textLabel.TextColor3 = Color3.new(1, 1, 1)
            textLabel.TextStrokeTransparency = 0.5
            textLabel.Font = Enum.Font.SourceSansBold
            textLabel.TextSize = 14
            textLabel.Text = player.Name .. " | " .. player.AccountAge .. " dias"
        end

        if state then
            for _, player in pairs(Players:GetPlayers()) do
                createESP(player)
            end
            Players.PlayerAdded:Connect(function(player)
                player.CharacterAdded:Connect(function() createESP(player) end)
            end)
        else
            for _, player in pairs(Players:GetPlayers()) do
                if player.Character and player.Character.Head:FindFirstChild("BillboardGui") then
                    player.Character.Head.BillboardGui:Destroy()
                end
            end
        end
    end,
})

--------------------------------------------------------------------------------------------------------------------------------------------------


-----------------------------------------------------------------------------------------------------------------------------------------------
Tab1:Paragraph({ Title = "Jogador", Desc = "funçoes paara o jogador no caso voçe" })

-- Variáveis para o noclip
local noclipEnabled = false
local noclipConnections = {}

-- Função para ativar/desativar o noclip
local function setNoclip(state)
    local player = game.Players.LocalPlayer
    local character = player.Character
    if not character then
        game.StarterGui:SetCore("SendNotification", {
            Title = "Erro",
            Text = "Personagem não encontrado!",
            Duration = 5
        })
        return
    end

    noclipEnabled = state -- Define o estado do noclip com base no toggle

    if noclipEnabled then
        -- Desativa as colisões do personagem
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end

        -- Loop para manter o noclip ativo (caso o servidor tente reverter)
        local connection = game:GetService("RunService").Heartbeat:Connect(function()
            if not noclipEnabled or not character then
                connection:Disconnect()
                return
            end
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end)
        table.insert(noclipConnections, connection)

        game.StarterGui:SetCore("SendNotification", {
            Title = "Noclip",
            Text = "Noclip ativado!",
            Duration = 5
        })
    else
        -- Desativa o noclip e reativa as colisões
        for _, connection in pairs(noclipConnections) do
            connection:Disconnect()
        end
        noclipConnections = {}

        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end

        game.StarterGui:SetCore("SendNotification", {
            Title = "Noclip",
            Text = "Noclip desativado!",
            Duration = 5
        })
    end
end

-- Garante que o noclip comece desativado ao carregar o hub
setNoclip(false)

-- Toggle para ativar/desativar o noclip
Tab1:Toggle({
    Title = "Noclip",
    Desc = "Ativa/desativa o noclip para atravessar paredes",
    Default = false,
    Callback = function(value)
        setNoclip(value)
    end,
})

-- Botão para executar o script de fly
Tab1:Button({
    Title = "Ativar Fly GUI",
    Desc = "Carrega um GUI de fly universal",
    Callback = function()
        local success, errorMessage = pcall(function()
            loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Fly-gui-v3-30439"))()
        end)

        if success then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Sucesso",
                Text = "Fly GUI carregado!",
                Duration = 5
            })
        else
            game.StarterGui:SetCore("SendNotification", {
                Title = "Erro",
                Text = "Falha ao carregar o Fly GUI.",
                Duration = 5
            })
        end
    end,
})

----------------------------------------------------------------------------------------------------------------------------------------------

Tab1:Slider({
    Title = "definir a velocidade do jogador",
    Step = 1,
    Value = { Min = 1, Max = 300, Default = 70 },
    Callback = function(value)
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.WalkSpeed = value
        end
    end,
})

--------------------------------------------------------------------------------------------------------------------------------------------------

Tab1:Slider({
    Title = "definir o tamanho do salto do jogador",
    Step = 1,
    Value = { Min = 1, Max = 300, Default = 70 },
    Callback = function(value)
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.JumpPower = value
        end
    end,
})

--------------------------------------------------------------------------------------------------------------------------------------------------

-- Toggle Anti-Sit
local antiSitConnection

Tab1:Toggle({
    Title = "Anti-Sit",
    Desc = "Impede o jogador de sentar em qualquer assento",
    Value = false,
    Callback = function(state)
        if state then
            -- Ativa o Anti-Sit
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                local humanoid = LocalPlayer.Character.Humanoid
                humanoid.Sit = false -- Força o jogador a não estar sentado
                antiSitConnection = humanoid.Seated:Connect(function(isSeated, seat)
                    if isSeated then
                        humanoid.Sit = false -- Levanta o jogador imediatamente
                    end
                end)
            end
            -- Conecta ao evento de personagem reaparecendo
            LocalPlayer.CharacterAdded:Connect(function(character)
                local humanoid = character:WaitForChild("Humanoid")
                humanoid.Sit = false
                antiSitConnection = humanoid.Seated:Connect(function(isSeated, seat)
                    if isSeated then
                        humanoid.Sit = false
                    end
                end)
            end)
            print("Anti-Sit ativado!")
        else
            -- Desativa o Anti-Sit
            if antiSitConnection then
                antiSitConnection:Disconnect()
                antiSitConnection = nil
            end
            print("Anti-Sit desativado!")
        end
    end,
})

---------------------------------------------------------------------------------------------------------------------------------
                                          -- === Tab 2: casa === --
---------------------------------------------------------------------------------------------------------------------------------

Tab2:Paragraph({ Title = "funçoes para voce usar em voce", Desc = "" })


-- Botão para remover ban de todas as casas (versão ajustada)
Tab2:Button({
    Title = "Remover Ban de Todas as Casas",
    Desc = "Tenta remover o ban de todas as casas (1 a 37)",
    Callback = function()
        local successCount = 0
        local failCount = 0
        -- Verifica se há algum BannedBlock no Workspace
        print("Procurando por BannedBlocks no Workspace...")
        for i = 1, 37 do
            local bannedBlockName = "BannedBlock" .. i
            local bannedBlock = Workspace:FindFirstChild(bannedBlockName, true) -- Busca recursiva no Workspace
            if bannedBlock then
                local success, errorMessage = pcall(function()
                    bannedBlock:Destroy()
                end)
                if success then
                    successCount = successCount + 1
                    print("Ban removido da casa " .. i .. " com sucesso!")
                else
                    failCount = failCount + 1
                    warn("Erro ao remover ban da casa " .. i .. ": " .. tostring(errorMessage))
                end
            else
                print("Nenhum ban encontrado para a casa " .. i .. " (BannedBlock" .. i .. " não existe).")
            end
        end
        -- Tenta procurar em outros lugares (por exemplo, dentro das casas)
        print("Procurando por BannedBlocks dentro das casas...")
        for _, house in pairs(Workspace:GetDescendants()) do
            if house.Name:match("BannedBlock") then
                local success, errorMessage = pcall(function()
                    house:Destroy()
                end)
                if success then
                    successCount = successCount + 1
                    print("Ban removido: " .. house.Name .. " em " .. house:GetFullName())
                else
                    failCount = failCount + 1
                    warn("Erro ao remover ban " .. house.Name .. ": " .. tostring(errorMessage))
                end
            end
        end
        -- Resumo do resultado
        print("Resumo: " .. successCount .. " bans removidos com sucesso, " .. failCount .. " falhas.")
        if successCount > 0 then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Sucesso",
                Text = "Bans removidos de " .. successCount .. " casas!",
                Duration = 5
            })
        end
        if failCount > 0 then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Aviso",
                Text = "Falha ao remover bans de " .. failCount .. " casas. Veja o console para detalhes.",
                Duration = 5
            })
        end
        if successCount == 0 and failCount == 0 then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Aviso",
                Text = "Nenhum ban encontrado para remover.",
                Duration = 5
            })
        end
    end,
})



------------------------------------------------------------------------------------------------------------------------------------------------

Tab2:Dropdown({
    Title = "pegar permissão das casas",
    Desc = "",
    Value = "Option 1",
    Multi = false,
    AllowNone = true,
    Values = {"Option 1", "Option 2", "Option 3", "Option 4", "Option 5", "Option 6", "Option 7", "Option 8", "Option 9", "Option 10", "Option 11", "Option 12", "Option 13", "Option 14", "Option 15", "Option 16", "Option 17", "Option 18", "Option 19", "Option 20", "Option 21", "Option 22", "Option 23", "Option 24", "Option 25", "Option 26", "Option 27", "Option 28", "Option 29", "Option 30", "Option 31", "Option 32", "Option 33", "Option 34", "Option 35", "Option 36", "Option 37"},
    Callback = function(tab)
        local permission = tonumber(tab:match("%d+")) or 1
        fireServer("1Playe1rTrigge1rEven1t", {"GivePermissionLoopToServer", LocalPlayer, permission})
    end,
})

----------------------------------------------------------------------------------------------------------------------------------------------

Tab2:Paragraph({ Title = "funçoes para outros players", Desc = "" })

Tab2:Paragraph({ Title = "esta funçao e para dar permisao de qualquer casa para qualquer player", Desc = "" })

-- Função para pegar os nomes dos jogadores
local function getPlayerNames()
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
    return playerNames
end

-- Dropdown para selecionar o jogador
local selectedPlayerName = ""
local DropdownPlayers = Tab2:Dropdown({
    Title = "Selecionar Jogador",
    Desc = "Escolha um jogador para dar permissão",
    Value = "",
    Multi = false,
    AllowNone = true,
    Values = getPlayerNames(),
    Callback = function(playerName)
        selectedPlayerName = playerName
        print("Jogador selecionado: " .. selectedPlayerName)
    end,
})

-- Atualiza o dropdown quando jogadores entram ou saem
Players.PlayerAdded:Connect(function() DropdownPlayers:Refresh(getPlayerNames()) end)
Players.PlayerRemoving:Connect(function() DropdownPlayers:Refresh(getPlayerNames()) end)

-- Dropdown para selecionar o número da casa
local selectedHouseNumber = 1
local houseOptions = {}
for i = 1, 37 do
    table.insert(houseOptions, tostring(i))
end

local DropdownHouses = Tab2:Dropdown({
    Title = "Selecionar Casa",
    Desc = "Escolha o número da casa (1 a 37)",
    Value = "1",
    Multi = false,
    AllowNone = false,
    Values = houseOptions,
    Callback = function(houseNumber)
        selectedHouseNumber = tonumber(houseNumber)
        print("Casa selecionada: " .. selectedHouseNumber)
    end,
})

-- Botão para dar permissão
Tab2:Button({
    Title = "Dar Permissão",
    Desc = "Dá permissão ao jogador selecionado para a casa escolhida",
    Callback = function()
        if selectedPlayerName == "" then
            warn("Nenhum jogador selecionado!")
            return
        end
        local targetPlayer = Players:FindFirstChild(selectedPlayerName)
        if not targetPlayer then
            warn("Jogador não encontrado: " .. selectedPlayerName)
            return
        end
        local args = {
            [1] = "GivePermissionLoopToServer",
            [2] = targetPlayer,
            [3] = selectedHouseNumber
        }
        local success, errorMessage = pcall(function()
            game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        end)
        if success then
            print("Permissão dada para " .. selectedPlayerName .. " na casa " .. selectedHouseNumber)
        else
            warn("Erro ao dar permissão: " .. tostring(errorMessage))
        end
    end,
})

----------------------------------------------------------------------------------------------------------------------------------------------

Tab2:Paragraph({ Title = "esta funçao e para remover a permisao de qualquer casa e de qualque player", Desc = "" })

-- Função para pegar os nomes dos jogadores
local function getPlayerNames()
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
    return playerNames
end

-- Dropdown para selecionar o jogador
local selectedPlayerNameRemove = ""
local DropdownPlayersRemove = Tab2:Dropdown({
    Title = "Selecionar Jogador (Remover)",
    Desc = "Escolha um jogador para remover permissão",
    Value = "",
    Multi = false,
    AllowNone = true,
    Values = getPlayerNames(),
    Callback = function(playerName)
        selectedPlayerNameRemove = playerName
        print("Jogador selecionado para remover permissão: " .. selectedPlayerNameRemove)
    end,
})

-- Atualiza o dropdown quando jogadores entram ou saem
Players.PlayerAdded:Connect(function() DropdownPlayersRemove:Refresh(getPlayerNames()) end)
Players.PlayerRemoving:Connect(function() DropdownPlayersRemove:Refresh(getPlayerNames()) end)

-- Dropdown para selecionar o número da casa
local selectedHouseNumberRemove = 1
local houseOptionsRemove = {}
for i = 1, 37 do
    table.insert(houseOptionsRemove, tostring(i))
end

local DropdownHousesRemove = Tab2:Dropdown({
    Title = "Selecionar Casa (Remover)",
    Desc = "Escolha o número da casa (1 a 37)",
    Value = "1",
    Multi = false,
    AllowNone = false,
    Values = houseOptionsRemove,
    Callback = function(houseNumber)
        selectedHouseNumberRemove = tonumber(houseNumber)
        print("Casa selecionada para remover permissão: " .. selectedHouseNumberRemove)
    end,
})

-- Botão para remover permissão
Tab2:Button({
    Title = "Remover Permissão",
    Desc = "Remove a permissão do jogador selecionado para a casa escolhida",
    Callback = function()
        if selectedPlayerNameRemove == "" then
            warn("Nenhum jogador selecionado para remover permissão!")
            return
        end
        local targetPlayer = Players:FindFirstChild(selectedPlayerNameRemove)
        if not targetPlayer then
            warn("Jogador não encontrado: " .. selectedPlayerNameRemove)
            return
        end
        local args = {
            [1] = "RemovePermissionLoopToServer",
            [2] = targetPlayer,
            [3] = selectedHouseNumberRemove
        }
        local success, errorMessage = pcall(function()
            game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Playe1rTrigge1rEven1t"):FireServer(unpack(args))
        end)
        if success then
            print("Permissão removida de " .. selectedPlayerNameRemove .. " na casa " .. selectedHouseNumberRemove)
        else
            warn("Erro ao remover permissão: " .. tostring(errorMessage))
        end
    end,
})


-- (Código anterior, como a Tab1 e Tab2)
----------------------------------------------------------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------------------------------------------------
                                          -- === Tab 3: Carro === --
---------------------------------------------------------------------------------------------------------------------------------

-- Variável global para armazenar o carro selecionado
_G.selectedCar = nil

-- Função para obter os nomes dos jogadores com carros
local function getPlayerCars()
    local carOwners = {}
    local vehiclesFolder = Workspace:FindFirstChild("Vehicles")
    if vehiclesFolder then
        for _, vehicle in pairs(vehiclesFolder:GetChildren()) do
            if vehicle:IsA("Model") and vehicle:FindFirstChild("Owner") then
                local ownerName = "Desconhecido"
                local ownerValue = vehicle:FindFirstChild("Owner")
                if ownerValue and ownerValue:IsA("StringValue") then
                    ownerName = ownerValue.Value
                else
                    -- Extrai o nome do jogador do nome do carro (ex.: "iker18231Car" -> "iker18231")
                    local nameMatch = vehicle.Name:match("^(.-)Car$")
                    if nameMatch then
                        ownerName = nameMatch
                    end
                end

                -- Verifica se há um jogador sentado
                local seat = vehicle:FindFirstChildOfClass("VehicleSeat") or vehicle:FindFirstChild("Seat") or vehicle:FindFirstChild("DriverSeat")
                if seat and seat:IsA("VehicleSeat") and seat.Occupant then
                    local humanoid = seat.Occupant
                    local seatedPlayer = game.Players:GetPlayerFromCharacter(humanoid.Parent)
                    if seatedPlayer then
                        ownerName = seatedPlayer.Name
                    end
                end

                if ownerName ~= "Desconhecido" then
                    table.insert(carOwners, ownerName)
                end
            end
        end
    end

    if #carOwners == 0 then
        carOwners = {"Nenhum carro encontrado"}
    end

    -- Notificação para confirmar os nomes carregados
    game.StarterGui:SetCore("SendNotification", {
        Title = "Carros Carregados",
        Text = "Jogadores com carros: " .. table.concat(carOwners, ", "),
        Duration = 5
    })

    return carOwners
end

-- Função para obter os carros e os nomes dos jogadores (usada para o callback do dropdown)
local function getPlayerCarsWithVehicles()
    local playerCars = {}
    local vehiclesFolder = Workspace:FindFirstChild("Vehicles")
    if vehiclesFolder then
        for _, vehicle in pairs(vehiclesFolder:GetChildren()) do
            if vehicle:IsA("Model") and vehicle:FindFirstChild("Owner") then
                local ownerName = "Desconhecido"
                local ownerValue = vehicle:FindFirstChild("Owner")
                if ownerValue and ownerValue:IsA("StringValue") then
                    ownerName = ownerValue.Value
                else
                    -- Extrai o nome do jogador do nome do carro (ex.: "iker18231Car" -> "iker18231")
                    local nameMatch = vehicle.Name:match("^(.-)Car$")
                    if nameMatch then
                        ownerName = nameMatch
                    end
                end

                -- Verifica se há um jogador sentado
                local seat = vehicle:FindFirstChildOfClass("VehicleSeat") or vehicle:FindFirstChild("Seat") or vehicle:FindFirstChild("DriverSeat")
                if seat and seat:IsA("VehicleSeat") and seat.Occupant then
                    local humanoid = seat.Occupant
                    local seatedPlayer = game.Players:GetPlayerFromCharacter(humanoid.Parent)
                    if seatedPlayer then
                        ownerName = seatedPlayer.Name
                    end
                end

                if ownerName ~= "Desconhecido" then
                    table.insert(playerCars, {name = ownerName, vehicle = vehicle})
                end
            end
        end
    end

    return playerCars
end

-- Variável para armazenar a UI
local carUI = nil

-- Função para criar a UI personalizada
local function createCarUI()
    -- Se a UI já existe, não cria outra
    if carUI then
        carUI.Enabled = true
        return
    end

    -- Cria a ScreenGui
    carUI = Instance.new("ScreenGui")
    carUI.Name = "CarUI"
    carUI.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")
    carUI.ResetOnSpawn = false

    -- Cria o Frame principal
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 350, 0, 400)
    frame.Position = UDim2.new(0.5, -175, 0.5, -200)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    frame.BorderSizePixel = 0
    frame.Parent = carUI

    -- Adiciona um gradiente ao Frame
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(30, 30, 30)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(50, 50, 50))
    })
    gradient.Rotation = 45
    gradient.Parent = frame

    -- Adiciona um canto arredondado ao Frame
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 15)
    corner.Parent = frame

    -- Adiciona uma sombra ao Frame
    local shadow = Instance.new("ImageLabel")
    shadow.Size = UDim2.new(1, 20, 1, 20)
    shadow.Position = UDim2.new(0, -10, 0, -10)
    shadow.BackgroundTransparency = 1
    shadow.Image = "rbxassetid://1316045217"
    shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    shadow.ImageTransparency = 0.5
    shadow.ScaleType = Enum.ScaleType.Slice
    shadow.SliceCenter = Rect.new(10, 10, 118, 118)
    shadow.Parent = frame

    -- Adiciona a imagem
    local imageLabel = Instance.new("ImageLabel")
    imageLabel.Size = UDim2.new(0, 120, 0, 120)
    imageLabel.Position = UDim2.new(0.5, -60, 0, 20)
    imageLabel.BackgroundTransparency = 1
    imageLabel.Image = "rbxassetid://5326906309"
    imageLabel.Parent = frame

    -- Adiciona um canto arredondado à imagem
    local imageCorner = Instance.new("UICorner")
    imageCorner.CornerRadius = UDim.new(0, 10)
    imageCorner.Parent = imageLabel

    -- Cria o dropdown
    local dropdownFrame = Instance.new("Frame")
    dropdownFrame.Size = UDim2.new(0, 300, 0, 40)
    dropdownFrame.Position = UDim2.new(0, 25, 0, 150)
    dropdownFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    dropdownFrame.Parent = frame

    local dropdownCorner = Instance.new("UICorner")
    dropdownCorner.CornerRadius = UDim.new(0, 8)
    dropdownCorner.Parent = dropdownFrame

    local dropdownText = Instance.new("TextLabel")
    dropdownText.Size = UDim2.new(1, -50, 1, 0)
    dropdownText.Position = UDim2.new(0, 15, 0, 0)
    dropdownText.BackgroundTransparency = 1
    dropdownText.Text = "Selecionar Carro"
    dropdownText.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropdownText.TextScaled = true
    dropdownText.TextXAlignment = Enum.TextXAlignment.Left
    dropdownText.Parent = dropdownFrame

    local dropdownButton = Instance.new("TextButton")
    dropdownButton.Size = UDim2.new(0, 40, 0, 40)
    dropdownButton.Position = UDim2.new(1, -40, 0, 0)
    dropdownButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    dropdownButton.Text = "▼"
    dropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    dropdownButton.TextScaled = true
    dropdownButton.Parent = dropdownFrame

    local dropdownButtonCorner = Instance.new("UICorner")
    dropdownButtonCorner.CornerRadius = UDim.new(0, 8)
    dropdownButtonCorner.Parent = dropdownButton

    local dropdownList = Instance.new("ScrollingFrame")
    dropdownList.Size = UDim2.new(0, 300, 0, 100)
    dropdownList.Position = UDim2.new(0, 25, 0, 190)
    dropdownList.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    dropdownList.Visible = false
    dropdownList.CanvasSize = UDim2.new(0, 0, 0, 0)
    dropdownList.ScrollBarThickness = 5
    dropdownList.Parent = frame

    local dropdownListCorner = Instance.new("UICorner")
    dropdownListCorner.CornerRadius = UDim.new(0, 8)
    dropdownListCorner.Parent = dropdownList

    local dropdownListLayout = Instance.new("UIListLayout")
    dropdownListLayout.SortOrder = Enum.SortOrder.LayoutOrder
    dropdownListLayout.Parent = dropdownList

    -- Função para atualizar o dropdown
    local function updateDropdownList()
        -- Limpa a lista atual
        for _, child in pairs(dropdownList:GetChildren()) do
            if child:IsA("TextButton") then
                child:Destroy()
            end
        end

        -- Obtém a lista de jogadores com carros
        local carOwners = getPlayerCars()
        dropdownText.Text = "Selecionar Carro"

        -- Preenche a lista
        for i, owner in ipairs(carOwners) do
            local optionButton = Instance.new("TextButton")
            optionButton.Size = UDim2.new(1, 0, 0, 30)
            optionButton.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
            optionButton.Text = owner
            optionButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            optionButton.TextScaled = true
            optionButton.LayoutOrder = i
            optionButton.Parent = dropdownList

            local optionCorner = Instance.new("UICorner")
            optionCorner.CornerRadius = UDim.new(0, 5)
            optionCorner.Parent = optionButton

            optionButton.MouseButton1Click:Connect(function()
                dropdownText.Text = owner
                dropdownList.Visible = false

                if owner == "Nenhum carro encontrado" then
                    _G.selectedCar = nil
                    return
                end

                local playerCars = getPlayerCarsWithVehicles()
                for _, car in pairs(playerCars) do
                    if car.name == owner then
                        _G.selectedCar = car.vehicle
                        game.StarterGui:SetCore("SendNotification", {
                            Title = "Carro Selecionado",
                            Text = "Carro de " .. car.name .. " selecionado!",
                            Duration = 5
                        })
                        return
                    end
                end
                _G.selectedCar = nil
            end)
        end

        dropdownList.CanvasSize = UDim2.new(0, 0, 0, #carOwners * 30)
    end

    -- Atualiza o dropdown inicialmente
    updateDropdownList()

    -- Atualiza o dropdown quando um carro é adicionado ou removido
    local vehiclesFolder = Workspace:FindFirstChild("Vehicles")
    if vehiclesFolder then
        vehiclesFolder.ChildAdded:Connect(function()
            updateDropdownList()
        end)
        vehiclesFolder.ChildRemoved:Connect(function()
            updateDropdownList()
        end)
    end

    -- Torna o dropdown clicável
    dropdownButton.MouseButton1Click:Connect(function()
        dropdownList.Visible = not dropdownList.Visible
    end)

    -- Cria o botão "Atualizar Lista"
    local refreshButton = Instance.new("TextButton")
    refreshButton.Size = UDim2.new(0, 300, 0, 40)
    refreshButton.Position = UDim2.new(0, 25, 0, 300)
    refreshButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    refreshButton.Text = "Atualizar Lista"
    refreshButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    refreshButton.TextScaled = true
    refreshButton.Parent = frame

    local refreshButtonCorner = Instance.new("UICorner")
    refreshButtonCorner.CornerRadius = UDim.new(0, 8)
    refreshButtonCorner.Parent = refreshButton

    refreshButton.MouseButton1Click:Connect(function()
        updateDropdownList()
        game.StarterGui:SetCore("SendNotification", {
            Title = "Sucesso",
            Text = "Lista de carros atualizada!",
            Duration = 5
        })
    end)

    -- Cria o botão "Teleportar Carro para o Void"
    local voidButton = Instance.new("TextButton")
    voidButton.Size = UDim2.new(0, 300, 0, 40)
    voidButton.Position = UDim2.new(0, 25, 0, 350)
    voidButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    voidButton.Text = "Teleportar Carro para o Void"
    voidButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    voidButton.TextScaled = true
    voidButton.Parent = frame

    local voidButtonCorner = Instance.new("UICorner")
    voidButtonCorner.CornerRadius = UDim.new(0, 8)
    voidButtonCorner.Parent = voidButton

    voidButton.MouseButton1Click:Connect(function()
        local player = game.Players.LocalPlayer
        local character = player.Character
        if not character or not character:FindFirstChild("HumanoidRootPart") then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Erro",
                Text = "Personagem não encontrado!",
                Duration = 5
            })
            return
        end

        if not _G.selectedCar then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Erro",
                Text = "Nenhum carro selecionado!",
                Duration = 5
            })
            return
        end

        local seat = _G.selectedCar:FindFirstChild("VehicleSeat") or _G.selectedCar:FindFirstChild("Seat") or _G.selectedCar:FindFirstChild("DriverSeat")
        if not seat then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Erro",
                Text = "Assento não encontrado no carro!",
                Duration = 5
            })
            return
        end

        if seat.Occupant then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Erro",
                Text = "Há um jogador sentado no assento do motorista!",
                Duration = 5
            })
            return
        end

        local originalPos = character.HumanoidRootPart.Position
        character.HumanoidRootPart.CFrame = seat.CFrame + Vector3.new(0, 2, 0)
        wait(0.5)
        character.Humanoid.Sit = true

        local voidPos = Vector3.new(0, -500, 0)
        local success, errorMessage = pcall(function()
            _G.selectedCar:MoveTo(voidPos + Vector3.new(0, 10, 0))
        end)

        if not success then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Erro",
                Text = "Falha ao teleportar o carro para o void: " .. tostring(errorMessage),
                Duration = 5
            })
            return
        end

        wait(0.5)
        character.Humanoid.Jump = true
        wait(0.5)
        character.HumanoidRootPart.CFrame = CFrame.new(originalPos)

        game.StarterGui:SetCore("SendNotification", {
            Title = "Sucesso",
            Text = "Carro teleportado para o void e você voltou à sua posição!",
            Duration = 5
        })
    end)

    -- Cria o botão "Minimizar"
    local minimizeButton = Instance.new("TextButton")
    minimizeButton.Size = UDim2.new(0, 140, 0, 40)
    minimizeButton.Position = UDim2.new(0, 25, 0, 400)
    minimizeButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    minimizeButton.Text = "Minimizar"
    minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    minimizeButton.TextScaled = true
    minimizeButton.Parent = frame

    local minimizeButtonCorner = Instance.new("UICorner")
    minimizeButtonCorner.CornerRadius = UDim.new(0, 8)
    minimizeButtonCorner.Parent = minimizeButton

    minimizeButton.MouseButton1Click:Connect(function()
        carUI.Enabled = false
        game.StarterGui:SetCore("SendNotification", {
            Title = "UI Minimizada",
            Text = "Clique em 'Abrir UI de Carros' para reabrir!",
            Duration = 5
        })
    end)

    -- Cria o botão "Fechar"
    local closeButton = Instance.new("TextButton")
    closeButton.Size = UDim2.new(0, 140, 0, 40)
    closeButton.Position = UDim2.new(0, 185, 0, 400)
    closeButton.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    closeButton.Text = "Fechar"
    closeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    closeButton.TextScaled = true
    closeButton.Parent = frame

    local closeButtonCorner = Instance.new("UICorner")
    closeButtonCorner.CornerRadius = UDim.new(0, 8)
    closeButtonCorner.Parent = closeButton

    closeButton.MouseButton1Click:Connect(function()
        if carUI then
            carUI:Destroy()
            carUI = nil
            game.StarterGui:SetCore("SendNotification", {
                Title = "UI Fechada",
                Text = "UI de carros fechada!",
                Duration = 5
            })
        end
    end)

    -- Torna a UI arrastável
    local dragging = false
    local dragStart = nil
    local startPos = nil

    frame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = frame.Position
        end
    end)

    frame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement and dragging then
            local delta = input.Position - dragStart
            frame.Position = UDim2.new(
                startPos.X.Scale,
                startPos.X.Offset + delta.X,
                startPos.Y.Scale,
                startPos.Y.Offset + delta.Y
            )
        end
    end)

    frame.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = false
        end
    end)
end

-- Botão para abrir a UI
Tab3:Button({
    Title = "Abrir UI de Carros",
    Desc = "Abre a interface para interagir com carros",
    Callback = function()
        createCarUI()
    end,
})
-----------------------------------------------------------------------------------------------------
                                          -- === Tab 4: RGB Color === --
---------------------------------------------------------------------------------------------------------------------------------

-- Toggle Nome RGB
local nameRGBActive = false
Tab4:Toggle({
    Title = "Nome RGB",
    Desc = "Ativa cores RGB",
    Value = false,
    Callback = function(state)
        print("Toggle 'Nome RGB' alterado para: " .. tostring(state)) -- Debug
        nameRGBActive = state
        if state then
            spawn(function()
                while nameRGBActive do
                    -- Gera uma cor RGB aleatória
                    local color = Color3.new(math.random(), math.random(), math.random())
                    local args = {
                        [1] = "PickingRPNameColor",
                        [2] = color
                    }
                    local success, errorMessage = pcall(function()
                        fireServer("1RPNam1eColo1r", args)
                    end)
                    if not success then
                        warn("Erro ao mudar a cor do nome: " .. tostring(errorMessage))
                    end
                    wait(1) -- Delay de 1 segundo para evitar detecção
                end
            end)
            print("Nome RGB ativado!")
        else
            -- Volta para a cor padrão (ex.: branco)
            local args = {
                [1] = "PickingRPNameColor",
                [2] = Color3.new(1, 1, 1) -- Branco
            }
            local success, errorMessage = pcall(function()
                fireServer("1RPNam1eColo1r", args)
            end)
            if success then
                print("Nome RGB desativado! Cor voltou para branco.")
            else
                warn("Erro ao desativar Nome RGB: " .. tostring(errorMessage))
            end
        end
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



-- Toggle Bio RGB
local bioRGBActive = false
Tab4:Toggle({
    Title = "Bio RGB",
    Desc = "Ativa cores RGB aleatórias na sua bio",
    Value = false,
    Callback = function(state)
        print("Toggle 'Bio RGB' alterado para: " .. tostring(state)) -- Debug
        bioRGBActive = state
        if state then
            spawn(function()
                while bioRGBActive do
                    -- Gera uma cor RGB aleatória
                    local color = Color3.new(math.random(), math.random(), math.random())
                    local args = {
                        [1] = "PickingRPBioColor",
                        [2] = color
                    }
                    local success, errorMessage = pcall(function()
                        fireServer("1RPNam1eColo1r", args) -- Mesmo evento para bio
                    end)
                    if not success then
                        warn("Erro ao mudar a cor da bio: " .. tostring(errorMessage))
                    end
                    wait(1) -- Delay de 1 segundo para evitar detecção
                end
            end)
            print("Bio RGB ativada!")
        else
            -- Volta para a cor padrão (ex.: branco)
            local args = {
                [1] = "PickingRPBioColor",
                [2] = Color3.new(1, 1, 1) -- Branco
            }
            local success, errorMessage = pcall(function()
                fireServer("1RPNam1eColo1r", args)
            end)
            if success then
                print("Bio RGB desativada! Cor voltou para branco.")
            else
                warn("Erro ao desativar Bio RGB: " .. tostring(errorMessage))
            end
        end
    end,
})



--------------------------------------------------------------------------------------------------------------------------------------------------



-- Toggle RGB Premium (Carro)
local carRGBActive = false
local vibrantColors = {
    Color3.new(1, 0, 0),       -- Vermelho
    Color3.new(0, 1, 0),       -- Verde
    Color3.new(0, 0, 1),       -- Azul
    Color3.new(1, 1, 0),       -- Amarelo
    Color3.new(1, 0, 1),       -- Magenta
    Color3.new(0, 1, 1),       -- Ciano
    Color3.new(1, 0.5, 0),     -- Laranja
    Color3.new(0.5, 0, 1)      -- Roxo
}

Tab4:Toggle({
    Title = "car RGB",
    Desc = "precisa do premium (atençao pode dar kick)",
    Value = false,
    Callback = function(state)
        print("Toggle 'RGB Premium' alterado para: " .. tostring(state)) -- Debug
        carRGBActive = state
        if state then
            -- Verifica se o jogador está em um carro
            local character = LocalPlayer.Character
            if not character then
                warn("Personagem não encontrado para ativar RGB Premium!")
                return
            end

            -- Inicia o loop de mudança de cor
            spawn(function()
                while carRGBActive do
                    -- Escolhe uma cor aleatória da lista de cores chamativas
                    local color = vibrantColors[math.random(1, #vibrantColors)]
                    print("Mudando cor do carro para: " .. tostring(color)) -- Debug
                    local args = {
                        [1] = "PickingCarColor",
                        [2] = color
                    }
                    local success, errorMessage = pcall(function()
                        game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer(unpack(args))
                    end)
                    if not success then
                        warn("Erro ao mudar a cor do carro: " .. tostring(errorMessage))
                    end
                    wait(1) -- Delay de 1 segundo para evitar detecção
                end
            end)
            print("RGB Premium (Carro) ativado!")
        else
            -- Volta para a cor padrão (ex.: branco)
            local args = {
                [1] = "PickingCarColor",
                [2] = Color3.new(1, 1, 1) -- Branco
            }
            local success, errorMessage = pcall(function()
                game:GetService("ReplicatedStorage"):WaitForChild("RE"):WaitForChild("1Player1sCa1r"):FireServer(unpack(args))
            end)
            if success then
                print("RGB Premium (Carro) desativado! Cor voltou para branco.")
            else
                warn("Erro ao desativar RGB Premium: " .. tostring(errorMessage))
            end
        end
    end,
})

---------------------------------------------------------------------------------------------------------------------------------
                                          -- === Tab 5: Troll Musica === --
---------------------------------------------------------------------------------------------------------------------------------

Tab5:Paragraph({ Title = "funçoes so para quem tem a gamepass de musica ", Desc = "" })

Tab5:Paragraph({ Title = "Precisa de gamepass", Desc = "Gamepass música" })
Tab5:Paragraph({ Title = "Só funciona em veículos do tipo over board", Desc = "" })


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Dropdown({
    Title = "Funk, Phonk, MTG",
    Desc = "Over board",
    Value = "Option 1",
    Multi = false,
    AllowNone = true,
    Values = {
        "novas musica adds", "104240235018198", "111668097052966", "93786060174790", "74812784884330", "musica brasil", "77501611905348", "126887144190812", "88033569921555", "132436320685732", "105832154444494", "", "90323407842935", "132245626038510",
"111995323199676","115016589376700", "118740708757685", "139435437308948",
"109189438638906", "138415155024226", "105126065014034", "102919095332206", "132245626038510", "97765714111493",
"100788814736643", "72720721570850", "138487820505005", "87968531262747", "106317184644394",
"musica do meu interece", "123592956882621", "108494476595033", "106835463235574", "123723674864058", "112068892721408", "musica dls por elas", "91760524161503",
"73140398421340", "137962454483542", "84733736048142", "106322173003761", "94604796823780", "118063577904953", "115567432786512", "71304501822029",
"132218979961283", "102708912256857", "140642559093189", "13530439660", "87863924786534", "133135085604736", "97258811783169", "92308400487695",
"104635713368149", "88064647826500", "85385155970460", "122871512353520", "122852029094656", "115016589376700", "meme abaixo", "94395705857835", "136804576009416",
"108494476595033", "131804436682424", "80291355054807", "137774355552052", "127944706557246", "82284055473737", "102906880476838", "91502410121438", "81694110949920", "estourada", "92175624643620", "108099943758978"
    },
    Callback = function(selectedValue)
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", selectedValue})
        print("Argumentos enviados: " .. selectedValue)
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Dropdown({
    Title = "Música Normal",
    Desc = "Over board",
    Value = "Option 1",
    Multi = false,
    AllowNone = true,
    Values = {"82406276148517", "129569692779816", "84584808135615", "131116056080033", "119540502924273", "75244543048318", "85439942763713", "97001593161206", "122473498105749"},
    Callback = function(selectedValue)
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", selectedValue})
        print("Argumentos enviados: " .. selectedValue)
    end,
})

Tab5:Dropdown({
    Title = "Meme Música",
    Desc = "Over board",
    Value = "Option 1",
    Multi = false,
    AllowNone = true,
    Values = {"115199984575713", "", "82161110448949", "139639579473440", "92212156099339", "86855540619546", "128027832969902", "118785260057094", "", "72739838426009"},
    Callback = function(selectedValue)
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", selectedValue})
        print("Argumentos enviados: " .. selectedValue)
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Dropdown({
    Title = "Terror Assustar",
    Desc = "Over board",
    Value = "Option 1",
    Multi = false,
    AllowNone = true,
    Values = {"72624476289253", "116709209733976", "99430297570707", "102348131944238", "125199445385812", "73562744560566", "106975887314345", "", "77874596719163", "83764626839857", "132027370834826"},
    Callback = function(selectedValue)
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", selectedValue})
        print("Argumentos enviados: " .. selectedValue)
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Dropdown({
    Title = "Miside, Mita",
    Desc = "Over board",
    Value = "Option 1",
    Multi = false,
    AllowNone = true,
    Values = {"112170504958980", "106013565624854", "104676632588868", "113222738822583", "98552734554697"},
    Callback = function(selectedValue)
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", selectedValue})
        print("Argumentos enviados: " .. selectedValue)
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Button({
    Title = "STOP",
    Desc = "Stop music",
    Callback = function()
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", ""})
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Button({
    Title = "Telefone FNAF",
    Desc = "FNAF",
    Callback = function()
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", "4835346587"})
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Button({
    Title = "HELOU HAY AHAHAHA",
    Desc = "FNAF",
    Callback = function()
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", "5608077885"})
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Button({
    Title = "Grito Ohor",
    Desc = "FNAF",
    Callback = function()
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", "268116333"})
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Button({
    Title = "Risada Doida",
    Desc = "Load meme",
    Callback = function()
        fireServer("1NoMoto1rVehicle1s", {"PickingScooterMusicText", "7752143456"})
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Paragraph({ Title = "Carro Música", Desc = "Gamepass música" })
Tab5:Paragraph({ Title = "Precisa da gamepass", Desc = "" })


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Dropdown({
    Title = "Selecionar Música",
    Desc = "Música",
    Value = "Option 1",
    Multi = false,
    AllowNone = true,
    Values = {
        "novas musica adds", "104240235018198", "111668097052966", "93786060174790", "74812784884330", "musica brasil", "77501611905348", "126887144190812", "88033569921555", "132436320685732", "105832154444494", "", "90323407842935", "132245626038510",
"111995323199676","115016589376700", "118740708757685", "139435437308948",
"109189438638906", "138415155024226", "105126065014034", "102919095332206", "132245626038510", "97765714111493",
"100788814736643", "72720721570850", "138487820505005", "87968531262747", "106317184644394",
"musica do meu interece", "123592956882621", "108494476595033", "106835463235574", "123723674864058", "112068892721408", "musica dls por elas", "91760524161503",
"73140398421340", "137962454483542", "84733736048142", "106322173003761", "94604796823780", "118063577904953", "115567432786512", "71304501822029",
"132218979961283", "102708912256857", "140642559093189", "13530439660", "87863924786534", "133135085604736", "97258811783169", "92308400487695",
"104635713368149", "88064647826500", "85385155970460", "122871512353520", "122852029094656", "115016589376700", "meme abaixo", "94395705857835", "136804576009416",
"108494476595033", "131804436682424", "80291355054807", "137774355552052", "127944706557246", "82284055473737", "102906880476838", "91502410121438", "81694110949920", "estourada", "92175624643620", "108099943758978"
    },
    Callback = function(selectedValue)
        fireServer("1Player1sCa1r", {"PickingCarMusicText", selectedValue})
        print("Argumentos enviados: " .. selectedValue)
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



local Input = Tab5:Input({
    Title = "Música",
    Desc = "Colocar o id da música",
    Value = "",
    PlaceholderText = "coloque o id aqui...",
    ClearTextOnFocus = false,
    Callback = function(text)
        fireServer("1Player1sCa1r", {"PickingCarMusicText", text})
    end,
})

Input:SetTitle("New Title!")
Input:SetDesc("New Description!")


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab5:Button({
    Title = "Stop",
    Desc = "Car music",
    Callback = function()
        fireServer("1Player1sCa1r", {"PickingCarMusicText", ""})
    end,
})

---------------------------------------------------------------------------------------------------------------------------------
                                                -- === Tab 6: Music All === --
---------------------------------------------------------------------------------------------------------------------------------

local loopAtivo = false
local InputID = ""

Tab6:Input({
    Title = "Insira o ID Audio All",
    Desc = "Digite o ID do som que deseja tocar",
    Value = "",
    PlaceholderText = "Exemplo: 6832470734",
    ClearTextOnFocus = true,
    Callback = function(text)
        InputID = tonumber(text)
        if not InputID then warn("Por favor, insira um ID válido!") end
    end,
})

Tab6:Button({
    Title = "Tocar Som",
    Desc = "Clique para tocar a música inserida",
    Callback = function()
        if InputID then
            fireServer("1Gu1nSound1s", {Workspace, InputID, 1})
            local globalSound = Instance.new("Sound", Workspace)
            globalSound.SoundId = "rbxassetid://" .. InputID
            globalSound.Looped = false
            globalSound:Play()
            task.wait(3)
            globalSound:Destroy()
        else
            warn("Nenhum ID válido foi inserido!")
        end
    end,
})

Tab6:Toggle({
    Title = "Loop",
    Desc = "Ative para colocar o som em loop",
    Icon = "check",
    Value = false,
    Callback = function(state)
        loopAtivo = state
        if loopAtivo then
            print("Loop ativado!")
            while loopAtivo do
                if InputID then
                    fireServer("1Gu1nSound1s", {Workspace, InputID, 1})
                    local globalSound = Instance.new("Sound", Workspace)
                    globalSound.SoundId = "rbxassetid://" .. InputID
                    globalSound.Looped = false
                    globalSound:Play()
                    task.wait(3)
                    globalSound:Destroy()
                else
                    warn("Nenhum ID válido foi inserido!")
                end
            end
        else
            print("Loop desativado!")
        end
    end,
})


--------------------------------------------------------------------------------------------------------------------------------------------------



local musicOptions = {
    -- Sons antigos
    {name = "pankapakan", id = 122547522269143},
    {name = "gritomedo", id = 113029085566978},
    {name = "metal", id = 71251935617451},
    {name = "araara", id = 18388861760},
    {name = "tiro", id = 104223019424522},
    {name = "jumpscar", id = 91784486966761},
    {name = "gemido", id = 106835463235574},
    {name = "sometourado", id = 123592956882621},
    {name = "gritodoido", id = 7807987190},
    {name = "off", id = 1778829098},
    {name = "Hahahah", id = 90096947219465},
    {name = "Carropeid", id = 88883922248256},
    {name = "Error", id = 101446887200514},
    {name = "Estouradoespad", id = 136179020015211},
    {name = "Chernobyl1", id = 134433437151072},
    {name = "Chernobyl5", id = 101927395686044},
    {name = "Radioxiado", id = 8028069841},
    {name = "Nukesiren", id = 9067330158},
    {name = "Sirenhead", id = 5681392074},
    {name = "Alertescola", id = 6607047008},
    {name = "Memealert", id = 8379374771},
    {name = "Alerta3S", id = 402404861},
    -- Sons novos que você enviou
    {name = "tomagerk", id = 132603645477541},
    {name = "ifood", id = 133843750864059},
    {name = "coringa", id = 84663543883498},
    {name = "shoope", id = 8747441609},
    {name = "quenojo", id = 103440368630269},
    {name = "sai dai lava prato", id = 101232400175829},
    {name = "se e loko numconpeça", id = 78442476709262},
    {name = "gritoestourado", id = 7520729342},
    {name = "nuclear siren", id = 675587093},
    {name = "rojao apito", id = 6549021381},
    {name = "mita sequer que eu too uma", id = 94889439372168},
    {name = "gemido estranho", id = 131219411501419},
    {name = "gemido kawai", id = 100409245129170}
}

-- Cria uma tabela com apenas os nomes para o dropdown
local musicNames = {}
for _, music in ipairs(musicOptions) do
    table.insert(musicNames, music.name)
end

local selectedSoundID = nil

local MusicDropdown = Tab6:Dropdown({
    Title = "Selecione uma música",
    Desc = "Escolha o som para tocar no servidor",
    Value = "pankapakan", -- Primeiro som antigo como padrão
    Multi = false,
    AllowNone = true,
    Values = musicNames,
    Callback = function(selectedSound)
        local selectedID
        for _, music in ipairs(musicOptions) do
            if music.name == selectedSound then
                selectedID = music.id
                break
            end
        end

        if selectedID then
            selectedSoundID = selectedID
            fireServer("1Gu1nSound1s", {Workspace, selectedID, 1})
            local globalSound = Instance.new("Sound")
            globalSound.Parent = Workspace
            globalSound.SoundId = "rbxassetid://" .. selectedID
            globalSound.Looped = false
            globalSound:Play()
            task.wait(3)
            globalSound:Destroy()
        else
            warn("Nenhum som selecionado ou ID não encontrado!")
            selectedSoundID = nil
        end
    end,
})

local dropdownLoopActive = false
Tab6:Toggle({
    Title = "Loop",
    Desc = "Ativa o loop do som selecionado acima",
    Value = false,
    Callback = function(state)
        dropdownLoopActive = state
        if state then
            spawn(function()
                print("Loop do Dropdown ativado!")
                while dropdownLoopActive do
                    if selectedSoundID then
                        fireServer("1Gu1nSound1s", {Workspace, selectedSoundID, 1})
                        local globalSound = Instance.new("Sound", Workspace)
                        globalSound.SoundId = "rbxassetid://" .. selectedSoundID
                        globalSound.Looped = false
                        globalSound:Play()
                        task.wait(3)
                        globalSound:Destroy()
                    else
                        warn("Nenhum som selecionado no dropdown!")
                        task.wait(1)
                    end
                end
            end)
        else
            print("Loop do Dropdown desativado!")
        end
    end,
})

----------------------------------------------------------------------------------------------------------------------------------------------
                                               -- === Tab 7: Scripts === --
----------------------------------------------------------------------------------------------------------------------------------------------

Tab7:Button({
    Title = "Invisible",
    Desc = "universal",
    Callback = function()
        loadstring(game:HttpGet("https://scriptblox.com/raw/Universal-Script-fe-invisible-4366"))()
    end,
})

Tab7:Button({
    Title = "FE Jerk Off Hub Matrix",
    Desc = "Universal",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/ExploitFin/AquaMatrix/refs/heads/AquaMatrix/AquaMatrix"))()
    end,
})

Tab7:Button({
    Title = "FE HUGG",
    Desc = "Universal",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/JSFKGBASDJKHIOAFHDGHIUODSGBJKLFGDKSB/fe/refs/heads/main/FEHUGG"))()
    end,
})

Tab7:Button({
    Title = "Auto Piano Panda Hub",
    Desc = "Universal",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/MADNESSTEST/Pqoeirnfjw/main/AP3-5.lua", true))()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Sgesa/RandomCatsAutoplay/main/Protected_1274635038188005.lua.txt", true))()
    end,
})

Tab7:Button({
    Title = "Buraco Negro",
    Desc = "Universal",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/Bac0nHck/Scripts/main/BringFlingPlayers"))("More Scripts: t.me/arceusxscripts")
    end,
})

Tab7:Button({
    Title = "System Broochk",
    Desc = "Universal",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/H20CalibreYT/SystemBroken/main/script"))()
    end,
})

Tab7:Button({
    Title = "Roships",
    Desc = "Universal",
    Callback = function()
        loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-rochips-universal-18294"))()
    end,
})

Tab7:Button({
    Title = "Sander X",
    Desc = "Somente para Brookhaven",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/kigredns/SanderXV4.2.2/refs/heads/main/New.lua"))()
    end,
})

Tab7:Button({
    Title = "Reverso",
    Desc = "Universal",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/0Ben1/fe./main/L"))()
    end,
})

Tab7:Button({
    Title = "RD4",
    Desc = "Somente para Brookhaven",
    Callback = function()
        loadstring(game:HttpGet("https://raw.githubusercontent.com/M1ZZ001/BrookhavenR4D/main/Brookhaven%20R4D%20Script"))()
    end,
})

-----------------------------------------------------------------------------------------------------------------------------------------
                                                -- === Tab 8: Players === --
-----------------------------------------------------------------------------------------------------------------------------------------

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")

local LocalPlayer = Players.LocalPlayer

-- Função para pegar os nomes dos jogadores
local function getPlayerNames()
    local playerNames = {}
    for _, player in ipairs(Players:GetPlayers()) do
        table.insert(playerNames, player.Name)
    end
    return playerNames
end

-- Função para atualizar o dropdown
local function updateDropdown(dropdown)
    dropdown:Refresh(getPlayerNames())
end

local function teleportToPlayer(playerName)
    local targetPlayer = Players:FindFirstChild(playerName)
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character:SetPrimaryPartCFrame(CFrame.new(targetPlayer.Character.HumanoidRootPart.Position))
        print("Teletransportado para o jogador: " .. playerName)
    else
        print("Jogador não encontrado.")
    end
end

local DropdownTeleport = Tab8:Dropdown({
    Title = "Selecionar Jogador (Teleport)",
    Desc = "Selecione o jogador para teletransportar",
    Value = "",
    Multi = false,
    AllowNone = true,
    Values = getPlayerNames(), -- Usando a função diretamente
    Callback = function(selectedPlayerName)
        print("Jogador selecionado para teletransporte: " .. selectedPlayerName)
    end,
})

updateDropdown(DropdownTeleport)
Players.PlayerAdded:Connect(function() updateDropdown(DropdownTeleport) end)
Players.PlayerRemoving:Connect(function() updateDropdown(DropdownTeleport) end)


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab8:Button({
    Title = "Teleportar para Jogador",
    Desc = "Clique para teletransportar para o jogador selecionado",
    Callback = function()
        teleportToPlayer(DropdownTeleport.Value)
    end,
})

local function spectatePlayer(playerName)
    local targetPlayer = Players:FindFirstChild(playerName)
    if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("Humanoid") then
        Workspace.CurrentCamera.CameraSubject = targetPlayer.Character.Humanoid
        print("Espectando jogador: " .. targetPlayer.Name)
    else
        print("Jogador não encontrado.")
    end
end

local function stopSpectating()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        Workspace.CurrentCamera.CameraSubject = LocalPlayer.Character.Humanoid
        print("Parando de espectar. Voltando à visão do jogador local.")
    end
end

local DropdownSpectate = Tab8:Dropdown({
    Title = "Selecionar Jogador (Espectar)",
    Desc = "Selecione o jogador para espectar",
    Value = "",
    Multi = false,
    AllowNone = true,
    Values = getPlayerNames(), -- Usando a função diretamente
    Callback = function(selectedPlayerName)
        print("Jogador selecionado para espectar: " .. selectedPlayerName)
    end,
})

updateDropdown(DropdownSpectate)
Players.PlayerAdded:Connect(function() updateDropdown(DropdownSpectate) end)
Players.PlayerRemoving:Connect(function() updateDropdown(DropdownSpectate) end)


--------------------------------------------------------------------------------------------------------------------------------------------------



Tab8:Toggle({
    Title = "Espectar Jogador",
    Desc = "Ativar/Desativar espectar o jogador selecionado",
    Value = false,
    Callback = function(state)
        if state then
            spectatePlayer(DropdownSpectate.Value)
        else
            stopSpectating()
        end
    end,
})

-- Sistema de Teletransporte de Ônibus com Backflips
local selectedPlayerName = ""
local teleportActive = false
local connection
local originalPosition = nil

local function getPlayerCar(player)
    local vehiclesFolder = Workspace:FindFirstChild("Vehicles")
    if vehiclesFolder then
        for _, vehicle in pairs(vehiclesFolder:GetChildren()) do
            if vehicle:IsA("Model") and vehicle:FindFirstChild("Owner") and vehicle:FindFirstChild("Owner").Value == player.Name then
                return vehicle
            end
        end
    end
    return nil
end

local function findPlayerByName(name)
    for _, player in pairs(Players:GetPlayers()) do
        if player.Name:lower():find(name:lower()) then return player end
    end
    return nil
end

local function teleportAndSpinCar(car, targetPlayer)
    local spinSpeed = 45 -- Velocidade de rotação em graus por frame

    connection = RunService.Stepped:Connect(function()
        if not teleportActive then
            if connection then connection:Disconnect() connection = nil end
            return
        end
        car.PrimaryPart.CanCollide = false
        
        -- Gira o ônibus com backflips (só no eixo X)
        car:SetPrimaryPartCFrame(car:GetPrimaryPartCFrame() * CFrame.Angles(math.rad(spinSpeed), 0, 0))
        
        -- Fica em cima do jogador selecionado
        if targetPlayer and targetPlayer.Character and targetPlayer.Character:FindFirstChild("HumanoidRootPart") then
            local targetPosition = targetPlayer.Character.HumanoidRootPart.Position + Vector3.new(0, 5, 0) -- 5 unidades acima do jogador
            car:SetPrimaryPartCFrame(CFrame.new(targetPosition) * car:GetPrimaryPartCFrame().Rotation)
        end
    end)

    -- Verifica os assentos continuamente
    RunService.Heartbeat:Connect(function()
        if not teleportActive then return end
        for _, seat in pairs(car:GetDescendants()) do
            if seat:IsA("Seat") and seat.Occupant then
                teleportActive = false
                if connection then connection:Disconnect() connection = nil end
                
                -- Teleporta pro void
                local voidPosition = Vector3.new(car.PrimaryPart.Position.X, -1000, car.PrimaryPart.Position.Z)
                car:SetPrimaryPartCFrame(CFrame.new(voidPosition))
                -- Não despawna o ônibus, apenas deixa no void
                if originalPosition and LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    LocalPlayer.Character.HumanoidRootPart.CFrame = originalPosition
                end
                return
            end
        end
    end)
end

local function teleportPlayerCar(playerName)
    local player = findPlayerByName(playerName)
    if not player then warn("Jogador não encontrado: " .. playerName) return end
    local car = getPlayerCar(LocalPlayer)
    if not car then warn("Nenhum carro encontrado para o jogador " .. LocalPlayer.Name) return end
    if not car.PrimaryPart then
        local body = car:FindFirstChild("Body")
        if body then car.PrimaryPart = body else warn("O carro não tem um PrimaryPart válido!") return end
    end
    teleportAndSpinCar(car, player)
end

local function teleportPlayerToPosition(position)
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
        LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(position)
    end
end

local function pickCar()
    fireServer("1Ca1r", {"PickingCar", "SchoolBus"})
end


--------------------------------------------------------------------------------------------------------------------------------------------------



local DropdownCar = Tab8:Dropdown({
    Title = "Selecionar Jogador (Ônibus)",
    Desc = "Escolha um jogador para teleportar o ônibus",
    Value = "",
    Multi = false,
    AllowNone = true,
    Values = getPlayerNames(), -- Usando a função diretamente
    Callback = function(tab)
        selectedPlayerName = tab
        print("Jogador selecionado para ônibus: " .. selectedPlayerName)
    end,
})

updateDropdown(DropdownCar)
Players.PlayerAdded:Connect(function() updateDropdown(DropdownCar) end)
Players.PlayerRemoving:Connect(function() updateDropdown(DropdownCar) end)

Tab8:Button({
    Title = "Ativar Ônibus",
    Desc = "Clique para spawnar o ônibus e iniciar o teletransporte",
    Callback = function()
        teleportActive = true
        -- Salva a posição original do jogador
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            originalPosition = LocalPlayer.Character.HumanoidRootPart.CFrame
        end
        teleportPlayerToPosition(Vector3.new(1143, 75, -1065))
        wait(0.5)
        pickCar()
        wait(0.5)
        -- Teleporta pro assento do motorista
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
            LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(1132.72314, 75.6949005, -1072.46082, -0.0132326381, -3.16897822e-05, 0.999912441, 0.00264345924, 0.999996483, 6.66754495e-05, -0.999908924, 0.00264411024, -0.0132325077)
            local car = getPlayerCar(LocalPlayer)
            if car then
                local driverSeat = car:FindFirstChild("Seat", true)
                if driverSeat and driverSeat:IsA("Seat") then
                    LocalPlayer.Character.Humanoid:Sit(false)
                    wait(0.1)
                    driverSeat:Sit(LocalPlayer.Character.Humanoid)
                end
            end
        end
        wait(0.5)
        if selectedPlayerName ~= "" then teleportPlayerCar(selectedPlayerName) end
    end,
})
