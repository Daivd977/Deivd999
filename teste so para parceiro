local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local lp = Players.LocalPlayer
local inv = lp.Backpack

-- Cria Tool personalizada
local tool = Instance.new("Tool")
tool.Name = "All Fling"
tool.RequiresHandle = false
tool.Parent = inv

-- Fun√ß√£o para pegar ou equipar a bola
local function getOrEquipBall()
	local soccerBalls = workspace:FindFirstChild("WorkspaceCom") and workspace.WorkspaceCom:FindFirstChild("001_SoccerBalls")
	local ballName = "Soccer" .. lp.Name
	local ball = soccerBalls and soccerBalls:FindFirstChild(ballName)

	if not ball then
		local args = {"PickingTools", "SoccerBall"}
		pcall(function()
			ReplicatedStorage:WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))
		end)

		repeat task.wait()
			ball = soccerBalls and soccerBalls:FindFirstChild(ballName)
		until ball
	end

	local ballTool = inv:FindFirstChild(ballName)
	if ballTool then
		lp.Character.Humanoid:EquipTool(ballTool)
	end

	return ball
end

-- Embaralha os jogadores
local function shuffle(tbl)
	for i = #tbl, 2, -1 do
		local j = math.random(i)
		tbl[i], tbl[j] = tbl[j], tbl[i]
	end
end

tool.Equipped:Connect(function()
	print("üå™Ô∏è All Fling ativado!")

	local ball = getOrEquipBall()
	if not ball then
		warn("‚ùå Bola n√£o encontrada!")
		return
	end

	local running = true

	local function flingLoop()
		while running and ball and ball.Parent do
			local playerList = {}
			for _, plr in ipairs(Players:GetPlayers()) do
				if plr ~= lp and plr.Character and plr.Character:FindFirstChild("HumanoidRootPart") then
					table.insert(playerList, plr)
				end
			end

			shuffle(playerList)

			for _, target in ipairs(playerList) do
				if not running then break end

				print("üéØ Focando em:", target.Name)
				local timeStart = tick()

				while tick() - timeStart < 5 and running do
					local targetChar = target.Character
					if targetChar and targetChar:FindFirstChild("HumanoidRootPart") and targetChar:FindFirstChild("Humanoid") then
						local hrp = targetChar.HumanoidRootPart
						local humanoid = targetChar:FindFirstChild("Humanoid")
						local velocity = hrp.Velocity
						local speed = velocity.Magnitude
						local isJumping = humanoid:GetState() == Enum.HumanoidStateType.Jumping
						local isMoving = humanoid.MoveDirection.Magnitude > 0.05

						local offset

						if isMoving or isJumping then
							local moveDir = hrp.CFrame.LookVector
							local extraDist = math.clamp(speed / 1.5, 6, 18)
							offset = moveDir * extraDist + Vector3.new(0, 1, 0) -- altura centralizada no torso
						else
							local waveZ = math.sin(tick() * 25) * 4 -- frente/tr√°s r√°pido
							local sideX = math.cos(tick() * 20) * 1.5
							offset = Vector3.new(sideX, 1, waveZ) -- altura centralizada
						end

						ball.CFrame = CFrame.new(hrp.Position + offset)
						ball.AssemblyLinearVelocity = Vector3.new(9999, 9999, 9999)
					end
					task.wait()
				end
			end
		end
	end

	local loop = coroutine.create(flingLoop)
	coroutine.resume(loop)

	tool.Unequipped:Connect(function()
		print("üõë Fling parado.")
		running = false
	end)
end)


local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local lp = Players.LocalPlayer
local char = lp.Character or lp.CharacterAdded:Wait()
local inv = lp.Backpack

-- Cria Tool personalizada
local tool = Instance.new("Tool")
tool.Name = "Fling Tool"
tool.RequiresHandle = false
tool.Parent = inv

-- Fun√ß√£o para pegar ou equipar a bola
local function getOrEquipBall()
	local soccerBalls = workspace:FindFirstChild("WorkspaceCom") and workspace.WorkspaceCom:FindFirstChild("001_SoccerBalls")
	local ballName = "Soccer" .. lp.Name
	local ball = soccerBalls and soccerBalls:FindFirstChild(ballName)

	if not ball then
		-- Ainda n√£o tem a bola -> invoca o comando
		local args = {"PickingTools", "SoccerBall"}
		local success = pcall(function()
			ReplicatedStorage:WaitForChild("RE"):WaitForChild("1Too1l"):InvokeServer(unpack(args))
		end)
		if not success then warn("‚ö†Ô∏è Falha ao pegar a bola!") return end

		-- Espera a bola aparecer
		repeat
			wait()
			ball = soccerBalls and soccerBalls:FindFirstChild(ballName)
		until ball
	end

	-- Equipa a bola
	local ballTool = inv:FindFirstChild(ballName)
	if ballTool then
		lp.Character.Humanoid:EquipTool(ballTool)
	end

	return ball
end

-- Ativa√ß√£o do fling quando a Tool for equipada
tool.Equipped:Connect(function()
	print("üõ†Ô∏è Fling Tool equipada!")

	local ball = getOrEquipBall()
	if not ball then
		warn("‚ö†Ô∏è Bola n√£o encontrada!")
		return
	end

	print("‚öΩ Bola pronta, iniciando fling...")

	local running = true

	local loop = coroutine.create(function()
		while running and ball and ball.Parent do
			local hrp = char:FindFirstChild("HumanoidRootPart")
			if hrp then
				local t = tick() * 10
				local radius = 3
				local offset = Vector3.new(math.cos(t)*radius, -1, math.sin(t)*radius)
				ball.CFrame = CFrame.new(hrp.Position + offset)
				ball.AssemblyLinearVelocity = Vector3.new(9999, 9999, 9999)
			end
			task.wait()
		end
	end)
	coroutine.resume(loop)

	tool.Unequipped:Connect(function()
		print("üõë Fling parado.")
		running = false
	end)
end)
