-- teste

-- === Configura√ß√µes Iniciais === --
local AllowedUsers = {
    "Lolytave2",  --hgydhfyg
    "rtrt967",  --dev
    "kaio_lg1",  --kaio
    "Higor_hg5", --higo
    "QUEROBOVO",  --pain
    "guga_10plays",  --ifdhguhdf
    "pzinrlk929", --arrobadinhooos
    "Tataizin_021", --numca usou mais pediu para usar
    "Lolytateste666", --2
    "rafainha4002", --tambem n sei quem e mais ta ai
    "Tiago_RJ4",    --tam bem n sei quem e mais ta usando     
    "lacradoor123",  --n sei quem e mais ta ai
    "enzin12346BR",  --sem dc
    "RED_MIGZINN",  --migzinn0
    "Davilorenzopro123",  --v4mp08078
    "XxFriend03",  --vini078752
    "branquelo_0908",      --kitedzin7ss 
    "vitorpandins", --vito boquetudo
    "CorxFlam",
    
}

-- Servi√ßos do Roblox
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local TweenService = game:GetService("TweenService")

-- Verifica√ß√£o de permiss√£o do jogador
local LocalPlayer = Players.LocalPlayer
local PlayerName = LocalPlayer.Name
local isAllowed = false

for _, user in pairs(AllowedUsers) do
    if user == PlayerName then
        isAllowed = true
        break
    end
end

if not isAllowed then
    game.StarterGui:SetCore("SendNotification", {
        Title = "Acesso Negado",
        Text = "Voc√™ n√£o tem permiss√£o para usar o Lolyta Hub 3.2 Contate o criador para ser adicionado √† lista.",
        Duration = 5
    })
    return
end

-- Tela de carregamento com imagem funcional e texto "Carregando..."
local imageId = "rbxassetid://76308195683050" -- ‚úÖ imagem testada e garantida funcional

-- Remove GUI antiga se j√° existir
local oldGui = game.CoreGui:FindFirstChild("LoadingScreen")
if oldGui then oldGui:Destroy() end

-- Cria a nova tela
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "LoadingScreen"
screenGui.IgnoreGuiInset = true
screenGui.ResetOnSpawn = false
pcall(function() syn.protect_gui(screenGui) end) -- prote√ß√£o se estiver usando Synapse, Delta etc.
screenGui.Parent = game:GetService("CoreGui")

-- Imagem no centro da tela
local imageLabel = Instance.new("ImageLabel")
imageLabel.Size = UDim2.new(0, 300, 0, 300)
imageLabel.Position = UDim2.new(0.5, -150, 0.5, -150)
imageLabel.BackgroundTransparency = 1
imageLabel.Image = imageId
imageLabel.Parent = screenGui

-- Texto "Carregando..."
local textLabel = Instance.new("TextLabel")
textLabel.Size = UDim2.new(0, 300, 0, 50)
textLabel.Position = UDim2.new(0.5, -150, 0.5, 180)
textLabel.BackgroundTransparency = 1
textLabel.Text = "Carregando..."
textLabel.TextColor3 = Color3.new(1, 1, 1)
textLabel.TextStrokeTransparency = 0
textLabel.Font = Enum.Font.FredokaOne
textLabel.TextScaled = true
textLabel.Parent = screenGui

-- Fun√ß√£o que carrega o hub e os scripts ap√≥s a tela de carregamento
local function loadHub()
    -- === Scripts a serem executados ao iniciar o hub === --
    local RE = ReplicatedStorage:FindFirstChild("RE")
    if not RE then return end

    -- Fun√ß√£o auxiliar para disparar eventos remotos
    local function fireServer(eventName, args)
        local event = RE:FindFirstChild(eventName)
        if event then
            pcall(function()
                event:FireServer(unpack(args))
            end)
        end
    end

    -- Define o nome "Lolyta Hub üíñ" com cor rosa escuro
    local argsName = {
        [1] = "RolePlayName",
        [2] = "Lolyta Hub üíñ" -- Adiciona um emoji fofo (cora√ß√£o brilhante)
    }
    fireServer("1RPNam1eTex1t", argsName)

    -- Define a cor do nome como rosa escuro
    local argsNameColor = {
        [1] = "PickingRPNameColor",
        [2] = Color3.new(0.8, 0.2, 0.4) -- Rosa escuro
    }
    fireServer("1RPNam1eColo1r", argsNameColor)

    -- Define a bio "scripter" com cor preta
    local argsBio = {
        [1] = "RolePlayBio",
        [2] = "scripter"
    }
    fireServer("1RPNam1eTex1t", argsBio)

    -- Define a cor da bio como preta
    local argsBioColor = {
        [1] = "PickingRPBioColor",
        [2] = Color3.new(0, 0, 0) -- Preto
    }
    fireServer("1RPNam1eColo1r", argsBioColor)
end

-- Executa a fun√ß√£o de carregamento
loadHub()

-- Remove a tela de carregamento ap√≥s 3 segundos
task.wait(3)
screenGui:Destroy()


local redzlib = loadstring(game:HttpGet("https://raw.githubusercontent.com/tbao143/Library-ui/refs/heads/main/Redzhubui"))()

local Window = redzlib:MakeWindow({
    Title = "Lolyta Hub 3.3",
    SubTitle = "by Lolytadev",
    SaveFolder = "Versao NEW"
  })

  Window:AddMinimizeButton({
    Button = { Image = "rbxassetid://116932341831922", BackgroundTransparency = 0 },
    Corner = { CornerRadius = UDim.new(35, 1) },
})



local Tab1 = Window:MakeTab({"player local", "house-plus"})
local Tab2 = Window:MakeTab({"Casa", "house"})
local Tab3 = Window:MakeTab({"Carro", "car"})
local Tab4 = Window:MakeTab({"RGB Color", "palette"})
local Tab5 = Window:MakeTab({"Troll Musica", "music"})
local Tab6 = Window:MakeTab({"Music All", "audio-lines"})
local Tab7 = Window:MakeTab({"Scripts", "layers"})
local Tab8 = Window:MakeTab({"Jogadores", "users"})
local Tab9 = Window:MakeTab({"Teleportes", "map-pin"})
local Tab10 = Window:MakeTab({"Troll", "skull"})

---------------------------------------------------------------------------------------------------------------------------------
                                                   -- === Tab 1: Main === --
---------------------------------------------------------------------------------------------------------------------------------

-- === Tab 1: Main === --
Tab1:AddDiscordInvite({
    Name = "Lolyta Hub",
    Description = "entrar no server",
    Logo = "rbxassetid://86261083499524",
    Invite = "https://discord.gg/mMS5ctuq",
})

-- Toggle para ESP
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

local connections = {}
local billboardGuis = {}
local espEnabled = false

Tab1:AddToggle({
    Name = "ESP",
    Description = "Para visualizar jogadores",
    Default = false,
    Callback = function(state)
        espEnabled = state

        local function updateESP(player)
            if player == Players.LocalPlayer then return end
            if not espEnabled then return end

            local character = player.Character
            if character then
                local head = character:FindFirstChild("Head")
                if head then
                    if billboardGuis[player] then
                        billboardGuis[player]:Destroy()
                    end

                    local billboard = Instance.new("BillboardGui")
                    billboard.Name = "ESP_Billboard"
                    billboard.Parent = head
                    billboard.Adornee = head
                    billboard.Size = UDim2.new(0, 200, 0, 50)
                    billboard.StudsOffset = Vector3.new(0, 3, 0)
                    billboard.AlwaysOnTop = true

                    local textLabel = Instance.new("TextLabel")
                    textLabel.Parent = billboard
                    textLabel.Size = UDim2.new(1, 0, 1, 0)
                    textLabel.BackgroundTransparency = 1
                    textLabel.TextStrokeTransparency = 0.5
                    textLabel.Font = Enum.Font.SourceSansBold
                    textLabel.TextSize = 14

                    if player.Team then
                        textLabel.TextColor3 = player.TeamColor.Color
                    else
                        textLabel.TextColor3 = Color3.new(1, 1, 1)
                    end

                    textLabel.Text = player.Name .. " | " .. player.AccountAge .. " dias"
                    billboardGuis[player] = billboard
                end
            end
        end

        local function removeESP(player)
            if billboardGuis[player] then
                billboardGuis[player]:Destroy()
                billboardGuis[player] = nil
            end
        end

        if espEnabled then
            local updateConnection = RunService.Heartbeat:Connect(function()
                if not espEnabled then return end
                for _, player in pairs(Players:GetPlayers()) do
                    updateESP(player)
                end
            end)
            table.insert(connections, updateConnection)

            local playerAddedConnection = Players.PlayerAdded:Connect(function(player)
                if not espEnabled then return end
                updateESP(player)

                local charAddedConnection = player.CharacterAdded:Connect(function()
                    if not espEnabled then return end
                    updateESP(player)
                end)
                table.insert(connections, charAddedConnection)

                local teamChangedConnection = player:GetPropertyChangedSignal("Team"):Connect(function()
                    if not espEnabled then return end
                    updateESP(player)
                end)
                table.insert(connections, teamChangedConnection)
            end)
            table.insert(connections, playerAddedConnection)

            local playerRemovingConnection = Players.PlayerRemoving:Connect(function(player)
                removeESP(player)
            end)
            table.insert(connections, playerRemovingConnection)

            for _, player in pairs(Players:GetPlayers()) do
                updateESP(player)
            end
        else
            for _, player in pairs(Players:GetPlayers()) do
                removeESP(player)
            end

            for _, connection in ipairs(connections) do
                connection:Disconnect()
            end
            connections = {}
            billboardGuis = {}
        end
    end
})

-- Paragraph para o jogador
Tab1:AddParagraph({
    Title = "Jogador",
    Content = "Fun√ß√µes para o jogador, no caso, voc√™"
})

-- Toggle para Noclip
local noclipEnabled = false
local noclipConnections = {}
local LocalPlayer = game:GetService("Players").LocalPlayer
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local function setNoclip(state)
    local character = LocalPlayer.Character
    if not character or not character:FindFirstChild("HumanoidRootPart") then return end

    local humanoid = character:FindFirstChild("Humanoid")
    local rootPart = character:FindFirstChild("HumanoidRootPart")

    if not humanoid or not rootPart then return end

    noclipEnabled = state

    if noclipEnabled then
        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = false
            end
        end

        humanoid.PlatformStand = false
        humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, true)
        humanoid:ChangeState(Enum.HumanoidStateType.Running)

        local connection = RunService.Heartbeat:Connect(function()
            if not noclipEnabled or not character or not character.Parent then
                connection:Disconnect()
                return
            end
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
            if rootPart.Position.Y < -500 then
                local rayOrigin = rootPart.Position
                local rayDirection = Vector3.new(0, 500, 0)
                local raycastParams = RaycastParams.new()
                raycastParams.FilterDescendantsInstances = {character}
                raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
                local raycastResult = Workspace:Raycast(rayOrigin, rayDirection, raycastParams)

                if raycastResult then
                    rootPart.CFrame = CFrame.new(raycastResult.Position + Vector3.new(0, 3, 0))
                else
                    rootPart.CFrame = CFrame.new(Vector3.new(0, 50, 0))
                end
            end
        end)
        table.insert(noclipConnections, connection)
    else
        for _, connection in pairs(noclipConnections) do
            connection:Disconnect()
        end
        noclipConnections = {}

        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Anchored = true
            end
        end

        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
                part.Velocity = Vector3.new(0, 0, 0)
                part.RotVelocity = Vector3.new(0, 0, 0)
            end
        end

        if humanoid then
            humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
            humanoid.PlatformStand = false
        end

        if rootPart then
            local rayOrigin = rootPart.Position
            local rayDirection = Vector3.new(0, -50, 0)
            local raycastParams = RaycastParams.new()
            raycastParams.FilterDescendantsInstances = {character}
            raycastParams.FilterType = Enum.RaycastFilterType.Blacklist
            local raycastResult = Workspace:Raycast(rayOrigin, rayDirection, raycastParams)

            if raycastResult then
                rootPart.CFrame = CFrame.new(raycastResult.Position + Vector3.new(0, 3, 0))
            else
                rootPart.CFrame = CFrame.new(rootPart.Position + Vector3.new(0, 10, 0))
            end
        end

        for _, part in pairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Anchored = false
            end
        end
    end
end

-- Inicializa Noclip como desativado
setNoclip(false)

-- Configura o CharacterAdded no in√≠cio
local characterAddedConnection
characterAddedConnection = LocalPlayer.CharacterAdded:Connect(function(character)
    if noclipEnabled then
        local humanoid = character:WaitForChild("Humanoid", 5)
        local rootPart = character:WaitForChild("HumanoidRootPart", 5)
        if humanoid and rootPart then
            task.wait(0.2)
            setNoclip(true)
        end
    end
end)

Tab1:AddToggle({
    Name = "Noclip",
    Description = "Ativa/desativa o noclip para atravessar paredes",
    Default = false,
    Callback = function(value)
        setNoclip(value)
        if not value and characterAddedConnection then
            characterAddedConnection:Disconnect()
            characterAddedConnection = LocalPlayer.CharacterAdded:Connect(function(character)
                if noclipEnabled then
                    local humanoid = character:WaitForChild("Humanoid", 5)
                    local rootPart = character:WaitForChild("HumanoidRootPart", 5)
                    if humanoid and rootPart then
                        task.wait(0.2)
                        setNoclip(true)
                    end
                end
            end)
        end
    end
})

-- Bot√£o para Fly GUI
Tab1:AddButton({
    Name = "Ativar Fly GUI",
    Description = "Carrega um GUI de fly universal",
    Callback = function()
        local success, _ = pcall(function()
            loadstring(game:HttpGet("https://rawscripts.net/raw/Universal-Script-Fly-gui-v3-30439"))()
        end)

        game.StarterGui:SetCore("SendNotification", {
            Title = success and "Sucesso" or "Erro",
            Text = success and "Fly GUI carregado!" or "Falha ao carregar o Fly GUI.",
            Duration = 5
        })
    end
})

-- Input para velocidade
Tab1:AddTextBox({
    Name = "Definir a velocidade do jogador",
    Description = "Insira a velocidade (m√≠nimo 1, sem limite m√°ximo)",
    Default = "70",
    PlaceholderText = "Digite um n√∫mero maior que 1...",
    ClearTextOnFocus = false,
    Callback = function(Text)
        local value = tonumber(Text)
        if value then
            value = math.max(value, 1)
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                LocalPlayer.Character.Humanoid.WalkSpeed = value
            end
        end
    end
})

Tab1:AddButton({
    Name = "Restaurar velocidade padr√£o",
    Description = "Retorna a velocidade para 16 (padr√£o do Roblox)",
    Callback = function()
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.WalkSpeed = 16
        end
    end
})

-- Input para salto
Tab1:AddTextBox({
    Name = "Definir o tamanho do salto do jogador",
    Description = "Insira o salto (m√≠nimo 1, sem limite m√°ximo)",
    Default = "70",
    PlaceholderText = "Digite um n√∫mero maior que 1...",
    ClearTextOnFocus = false,
    Callback = function(Text)
        local value = tonumber(Text)
        if value then
            value = math.max(value, 1)
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
                LocalPlayer.Character.Humanoid.JumpPower = value
            end
        end
    end
})

Tab1:AddButton({
    Name = "Restaurar salto padr√£o",
    Description = "Retorna o salto para 50 (padr√£o do Roblox)",
    Callback = function()
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.JumpPower = 50
        end
    end
})

-- Toggle para Anti-Sit
local antiSitConnection = nil
local antiSitEnabled = false

Tab1:AddToggle({
    Name = "Anti-Sit",
    Description = "Impede o jogador de sentar em qualquer assento e evita a anima√ß√£o de sentar",
    Default = false,
    Callback = function(state)
        antiSitEnabled = state
        local LocalPlayer = game:GetService("Players").LocalPlayer

        if state then
            local function applyAntiSit(character)
                local humanoid = character:FindFirstChild("Humanoid")
                if humanoid then
                    humanoid.Sit = false
                    humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, false)
                    if antiSitConnection then
                        antiSitConnection:Disconnect()
                    end
                    antiSitConnection = humanoid.Seated:Connect(function(isSeated)
                        if isSeated then
                            humanoid.Sit = false
                            humanoid:ChangeState(Enum.HumanoidStateType.GettingUp)
                        end
                    end)
                end
            end

            if LocalPlayer.Character then
                applyAntiSit(LocalPlayer.Character)
            end

            local characterAddedConnection
            characterAddedConnection = LocalPlayer.CharacterAdded:Connect(function(character)
                if not antiSitEnabled then
                    characterAddedConnection:Disconnect()
                    return
                end
                local humanoid = character:WaitForChild("Humanoid", 5)
                if humanoid then
                    applyAntiSit(character)
                end
            end)
        else
            if antiSitConnection then
                antiSitConnection:Disconnect()
                antiSitConnection = nil
            end

            if LocalPlayer.Character then
                local humanoid = LocalPlayer.Character:FindFirstChild("Humanoid")
                if humanoid then
                    humanoid:SetStateEnabled(Enum.HumanoidStateType.Seated, true)
                end
            end
        end
    end
})

---------------------------------------------------------------------------------------------------------------------------------
                                          -- === Tab 2: casa === --
---------------------------------------------------------------------------------------------------------------------------------


-- === Tab 2: Casa === --

Tab2:AddParagraph({
    Title = "Fun√ß√µes para voc√™ usar em voc√™",
    Content = ""
})

-- Bot√£o para remover ban de todas as casas
Tab2:AddButton({
    Name = "Remover Ban de Todas as Casas",
    Description = "Tenta remover o ban de todas as casas (1 a 37)",
    Callback = function()
        local successCount = 0
        local failCount = 0
        for i = 1, 37 do
            local bannedBlockName = "BannedBlock" .. i
            local bannedBlock = Workspace:FindFirstChild(bannedBlockName, true)
            if bannedBlock then
                local success, _ = pcall(function()
                    bannedBlock:Destroy()
                end)
                if success then
                    successCount = successCount + 1
                else
                    failCount = failCount + 1
                end
            end
        end
        for _, house in pairs(Workspace:GetDescendants()) do
            if house.Name:match("BannedBlock") then
                local success, _ = pcall(function()
                    house:Destroy()
                end)
                if success then
                    successCount = successCount + 1
                else
                    failCount = failCount + 1
                end
            end
        end
        if successCount > 0 then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Sucesso",
                Text = "Bans removidos de " .. successCount .. " casas!",
                Duration = 5
            })
        end
        if failCount > 0 then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Aviso",
                Text = "Falha ao remover bans de " .. failCount .. " casas.",
                Duration = 5
            })
        end
        if successCount == 0 and failCount == 0 then
            game.StarterGui:SetCore("SendNotification", {
                Title = "Aviso",
                Text = "Nenhum ban encontrado para remover.",
                Duration = 5
            })
        end
    end
})

Tab2:AddParagraph({
    Title = "Pegar permiss√£o de casas! Desativado!!!!!",
    Content = ""
})

---------------------------------------------------------------------------------------------------------------------------------
                                          -- === Tab 3: Carro === --
---------------------------------------------------------------------------------------------------------------------------------




-- === Tab 3: Carro === --

Tab3:AddParagraph({
    Title = "Ant Mandrake: Nova fun√ß√£o laga o server, n√£o √© imediata ao parar",
    Content = ""
})

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local isSpamming = false

local RE = ReplicatedStorage:FindFirstChild("RE")
local Remote = RE and RE:FindFirstChild("1Ca1r")

if not RE or not Remote then
    return
end

Tab3:AddButton({
    Name = "Iniciar opp",
    Description = "Use com modera√ß√£o",
    Callback = function()
        if not isSpamming then
            isSpamming = true
            task.spawn(function()
                while isSpamming do
                    local args = {
                        "PickingCar",
                        "Easter2025EasterMonsterTruck"
                    }
                    pcall(function()
                        Remote:FireServer(unpack(args))
                    end)
                    task.wait(0.1)
                end
            end)
        end
    end
})

Tab3:AddButton({
    Name = "Parar Spawn",
    Description = "Para o spawn de carros",
    Callback = function()
        if isSpamming then
            isSpamming = false
        end
    end
})

Tab3:AddButton({
    Name = "Deletar Todos os Carros",
    Description = "Remove todos os carros spawnados",
    Callback = function()
        local args = {
            "DeleteAllVehicles"
        }
        pcall(function()
            Remote:FireServer(unpack(args))
        end)
    end
})

Tab3:AddParagraph({
    Title = "Instru√ß√µes para teleportar todos os carros do server no void",
    Content = "Para funcionar perfeitamente, use o Void Protection do SystemBroken na aba Scripts, em Game > VoidProtection"
})

local Players = game:GetService("Players")
local Workspace = game:GetService("Workspace")

Tab3:AddToggle({
    Name = "Matar todos os carros do server",
    Description = "Teleporta os carros para o void",
    Default = false,
    Callback = function(state)
        local LocalPlayer = Players.LocalPlayer
        local originalPosition
        local teleportActive = state
        local fallDamageDisabled = false

        local function toggleFallDamage(disable)
            if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("Humanoid") then return end
            local humanoid = LocalPlayer.Character.Humanoid
            if disable then
                humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
                humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
                humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp, true)
                humanoid.PlatformStand = false
                fallDamageDisabled = true
            else
                humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, true)
                humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, true)
                fallDamageDisabled = false
            end
        end

        local function teleportToSeat(seat, car)
            if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("Humanoid") then return false end
            local humanoid = LocalPlayer.Character.Humanoid
            local rootPart = LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if not rootPart then return false end

            humanoid.Sit = false
            task.wait(0.1)

            rootPart.CFrame = seat.CFrame + Vector3.new(0, 5, 0)
            task.wait(0.1)

            seat:Sit(humanoid)
            task.wait(0.5)
            return humanoid.SeatPart == seat
        end

        local function teleportToVoid(car)
            if not car then return end
            if not car.PrimaryPart then
                local body = car:FindFirstChild("Body", true) or car:FindFirstChild("Chassis", true)
                if body and body:IsA("BasePart") then
                    car.PrimaryPart = body
                else
                    return
                end
            end
            local voidPosition = Vector3.new(0, -1000, 0)
            car:SetPrimaryPartCFrame(CFrame.new(voidPosition))
            task.wait(0.5)
        end

        local function exitCarAndReturn()
            if not LocalPlayer.Character or not LocalPlayer.Character:FindFirstChild("Humanoid") then return end
            local humanoid = LocalPlayer.Character.Humanoid
            if humanoid.SeatPart then
                humanoid.Sit = false
            end
            task.wait(0.1)
            if originalPosition then
                LocalPlayer.Character:PivotTo(CFrame.new(originalPosition))
            end
        end

        if state then
            if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                originalPosition = LocalPlayer.Character.HumanoidRootPart.Position
            else
                return
            end

            toggleFallDamage(true)

            spawn(function()
                local vehiclesFolder = Workspace:FindFirstChild("Vehicles")
                if not vehiclesFolder then return end

                local cars = {}
                for _, car in ipairs(vehiclesFolder:GetChildren()) do
                    if car.Name:match("Car$") then
                        table.insert(cars, car)
                    end
                end

                for _, car in ipairs(cars) do
                    if not teleportActive then break end

                    local vehicleSeat = car:FindFirstChildWhichIsA("VehicleSeat", true)
                    if vehicleSeat and vehicleSeat.Occupant == nil then
                        local success = teleportToSeat(vehicleSeat, car)
                        if success then
                            teleportToVoid(car)
                            exitCarAndReturn()
                            task.wait(1)
                        end
                    end
                end

                if teleportActive then
                    teleportActive = false
                    toggleFallDamage(false)
                end
            end)
        else
            teleportActive = false
            toggleFallDamage(false)
        end
    end
})

local fallDamageDisabled = false
Players.LocalPlayer.CharacterAdded:Connect(function(character)
    local humanoid = character:WaitForChild("Humanoid")
    if fallDamageDisabled then
        humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, false)
        humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, false)
        humanoid:SetStateEnabled(Enum.HumanoidStateType.GettingUp, true)
        humanoid.PlatformStand = false
    else
        humanoid:SetStateEnabled(Enum.HumanoidStateType.FallingDown, true)
        humanoid:SetStateEnabled(Enum.HumanoidStateType.Ragdoll, true)
    end
end)


-----------------------------------------------------------------------------------------------------
                                          -- === Tab 4: RGB Color === --
---------------------------------------------------------------------------------------------------------------------------------

-- === Tab 4: RGB Color === --

local vibrantColors = {
    Color3.new(1, 0, 0),
    Color3.new(0, 1, 0),
    Color3.new(0, 0, 1),
    Color3.new(1, 1, 0),
    Color3.new(1, 0, 1),
    Color3.new(0, 1, 1),
    Color3.new(1, 0.5, 0),
    Color3.new(0.5, 0, 1)
}

local function fireServer(eventName, args)
    local ReplicatedStorage = game:GetService("ReplicatedStorage")
    local event = ReplicatedStorage:FindFirstChild("RE") and ReplicatedStorage.RE:FindFirstChild(eventName)
    if event then
        pcall(function()
            event:FireServer(unpack(args))
        end)
    end
end

local nameAndBioRGBActive = false
Tab4:AddToggle({
    Name = "Nome e Bio RGB Sincronizado",
    Description = "Ativa cores RGB sincronizadas para Nome e Bio",
    Default = false,
    Callback = function(state)
        nameAndBioRGBActive = state
        if state then
            task.spawn(function()
                while nameAndBioRGBActive and LocalPlayer.Character do
                    local color = vibrantColors[math.random(1, #vibrantColors)]
                    local nameArgs = { [1] = "PickingRPNameColor", [2] = color }
                    local bioArgs = { [1] = "PickingRPBioColor", [2] = color }
                    fireServer("1RPNam1eColo1r", nameArgs)
                    fireServer("1RPNam1eColo1r", bioArgs)
                    task.wait(1)
                end
            end)
        end
    end
})

local nameRGBActive = false
Tab4:AddToggle({
    Name = "Nome RGB",
    Description = "Ativa cores RGB para o Nome",
    Default = false,
    Callback = function(state)
        nameRGBActive = state
        if state then
            task.spawn(function()
                while nameRGBActive and LocalPlayer.Character do
                    local color = vibrantColors[math.random(1, #vibrantColors)]
                    local args = { [1] = "PickingRPNameColor", [2] = color }
                    fireServer("1RPNam1eColo1r", args)
                    task.wait(1)
                end
            end)
        end
    end
})

local bioRGBActive = false
Tab4:AddToggle({
    Name = "Bio RGB",
    Description = "Ativa cores RGB aleat√≥rias na sua bio",
    Default = false,
    Callback = function(state)
        bioRGBActive = state
        if state then
            task.spawn(function()
                while bioRGBActive and LocalPlayer.Character do
                    local color = vibrantColors[math.random(1, #vibrantColors)]
                    local args = { [1] = "PickingRPBioColor", [2] = color }
                    fireServer("1RPNam1eColo1r", args)
                    task.wait(1)
                end
            end)
        end
    end
})

local carRGBActive = false
Tab4:AddToggle({
    Name = "Car RGB",
    Description = "Precisa do premium (aten√ß√£o, pode dar kick!!!! N√£o recomendo usar!!!)",
    Default = false,
    Callback = function(state)
        carRGBActive = state
        if state then
            local character = LocalPlayer.Character
            if not character then
                carRGBActive = false
                return
            end
            task.spawn(function()
                while carRGBActive and LocalPlayer.Character do
                    local color = vibrantColors[math.random(1, #vibrantColors)]
                    local args = { [1] = "PickingCarColor", [2] = color }
                    local ReplicatedStorage = game:GetService("ReplicatedStorage")
                    local event = ReplicatedStorage:FindFirstChild("RE") and ReplicatedStorage.RE:FindFirstChild("1Player1sCa1r")
                    if event then
                        pcall(function()
                            event:FireServer(unpack(args))
                        end)
                    end
                    task.wait(1)
                end
            end)
        end
    end
})
